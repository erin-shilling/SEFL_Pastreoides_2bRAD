################################################################################
############################-- New 2bRAD analyses --############################
################################################################################

##------------------------------------------------------------------------------
###-- pcangsd --###

cd ~/2bRAD/past/sefl
mkdir pcangsd
cd pcangsd

cp ../ANGSD_genome/pastNoClones.beagle.gz .

source activate 2bRAD

echo '#!/bin/bash' > pcangsd.sh
echo 'pcangsd -b pastNoClones.beagle.gz -o seflPastPcangsd' >> pcangsd.sh

sbatch -o pcangsd.o%j -e pcangsd.e%j --mem=100GB pcangsd.sh

echo '#!/bin/bash' > pcangsd2.sh
echo 'pcangsd -b pastNoClones.beagle.gz -o seflPastPcangsd2 --admix --inbreedSamples --pcadapt --selection' >> pcangsd2.sh

sbatch -o pcangsd2.o%j -e pcangsd2.e%j --mem=100GB pcangsd.sh

################################################################################
##------------------------------------------------------------------------------

####separate samples out by lineages, if greater than 75% to a lineage, call it, if in between, remove###
##made into csvs of each bam
##winscp'ed into koko

###not sure what the deal is but koko did not want to read my input files telling it which bams belonged to which lineage, Ryan went in and did it for me on his Mac
##------------------------------------------------------------------------------

##-- ANGSD within Lineages --##

# calling snps within clusters to filter down sites

cd ~/2bRAD/past/sefl/ANGSD

##use 75% of samples for minInd
##use all same filters from genome ANGSD

###tried running this several ways, Ryan ended up having to do it using his own formatting for the Bams files input
FILTERS="-uniqueOnly 1 -remove_bads 1 -minMapQ 20 -minQ 30 -dosnpstat 1 -doHWE 1 -hwe_pval 1e-5 -sb_pval 1e-5 -hetbias_pval 1e-5 -skipTriallelic 1 -snp_pval 1e-6 -minMaf 0.05"

TODO="-doMajorMinor 1 -doMaf 1 -doGeno 8 -doPost 1 -doGlf 2"

echo "angsd -b greenBams -GL 1 -P 1 $FILTERS $TODO -minInd 18 -out pastGreenSnps
angsd -b pinkBams -GL 1 -P 1 $FILTERS $TODO -minInd 3 -out pastPinkSnps
angsd -b purpleBams -GL 1 -P 1 $FILTERS $TODO -minInd 4 -out pastPurpleSnps" > kSnps

launcher_creator.py -j kSnps -n kSnps -q shortq7 -t 06:00:00 -e $EMAIL -w 2 -N 1

sbatch kSnps.slurm

for file in past*Snps.geno.gz; do
echo '#!/bin/bash' > ${file%%.*}.sh;
echo "zcat $file | awk '{print \$1\"\t\"\$2}' > ${file%%.*}sites" >> ${file%%.*}.sh;
sbatch -e ${file%%.*}.e%j -o ${file%%.*}.o%j -p shortq7 --mem=100GB --mail-user eshilling2013@fau.edu --mail-type=ALL ${file%%.*}.sh;
done

srun awk '(++c[$0])==(ARGC-1)' *Snpssites > sitesToDo

mkdir filteredSNPS

mv past*Snps* filteredSNPS/
mv kSnps* filteredSNPS/

angsd sites index sitesToDo

FILTERS="-uniqueOnly 1 -remove_bads 1 -minMapQ 20 -minQ 25 -dosnpstat 1 -doHWE 1 -hwe_pval 1e-5 -sb_pval 1e-5 -hetbias_pval 1e-5 -skipTriallelic 1 -snp_pval 1e-6 -minMaf 0.05"

TODO="-doMajorMinor 1 -doMaf 1 -doCounts 1 -makeMatrix 1 -doIBS 1 -doCov 1 -doGeno 8 -doBcf 1 -doPost 1 -doGlf 2"

echo "angsd -b bamsNoClones -sites sitesToDo -GL 1 -P 1 $FILTERS $TODO -minInd 27 -out pastFiltSnps" > pastFiltSnps

launcher_creator.py -j pastFiltSnps -n pastFiltSnps -q shortq7 -t 06:00:00 -e $EMAIL -w 2 -N 1
sbatch pastFiltSnps.slurm

mv pastFilt* ../filteredSNPS/

##in each K (not sure which is which) SNPs:
6,233
11,431
12,830

3,228 SNPs present in all three
Genotyping across 3,040 of these

##^^You can use this for dbRDA, Fst

################################################################################
##------------------------------------------------------------------------------
#removing admixed samples
#use vcf in past/sefl/ANGSD_genome
vcftools --remove-indv P004.trim.bt2.bam --vcf pastFiltSnps.vcf --recode --out pastFiltSnpsNoAdmix1.vcf
vcftools --remove-indv P014.trim.bt2.bam --vcf pastFiltSnpsNoAdmix1.vcf.recode.vcf --recode --out pastFiltSnpsNoAdmix2.vcf
vcftools --remove-indv P027.trim.bt2.bam --vcf pastFiltSnpsNoAdmix2.vcf.recode.vcf --recode --out pastFiltSnpsNoAdmix3.vcf
vcftools --remove-indv P073.trim.bt2.bam --vcf pastFiltSnpsNoAdmix3.vcf.recode.vcf --recode --out pastFiltSnpsNoAdmixFINAL.vcf


##-- ngsRelate on filtered snps --##
##running this for new output file for running relate stuff

cd ~/2bRAD/past/sefl/ANGSD_genome

FILTERS="-uniqueOnly 1 -remove_bads 1 -minMapQ 20 -minQ 25 -dosnpstat 1 -doHWE 1 -hwe_pval 1e-5 -sb_pval 1e-5 -hetbias_pval 1e-5 -skipTriallelic 1 -snp_pval 1e-5 -minMaf 0.05"

TODO="-doMajorMinor 1 -doMaf 1 -doCounts 1 -makeMatrix 1 -doIBS 1 -doCov 1 -doGeno 8 -doBcf 1 -doPost 1 -doGlf 3"

echo '#!/bin/bash' > pastFiltRelate.sh
echo srun angsd -b bamsNoClones -GL 1 -sites sitesToDo $FILTERS $TODO -P 1 -minInd 27 -out pastFiltRelate >> pastFiltRelate.sh

sbatch --mem=200GB -o  pastFiltRelate.o%j -e pastFiltRelate.e%j -p shortq7 --mail-type=ALL --mail-user=eshilling2013@fau.edu pastFiltRelate.sh

cd ngsRelate_genome
mv ~/2bRAD/past/sefl/ANGSD_genome/*Relate* .

zcat pastFiltRelate.mafs.gz | cut -f5 |sed 1d >freq

echo '#!/bin/bash' > ngsFiltRelate.sh
echo ngsRelate -g pastFiltRelate.glf.gz -n 36 -f freq  -O filtRelate >> ngsFiltRelate.sh

sbatch -e ngsFiltRelate.e%j -o ngsFiltRelate.o%j --mem=200GB --mail-user eshilling2013@fau.edu --mail-type=ALL ngsFiltRelate.sh

### ^^^this is what I'll use for relatedness & inbreeding ####

################################################################################
##part of heterozygosity calculations (stairway plot in Ryan's code)
## No filters to distort allelic frequencies
##working in ANGSD_genome with bams files in it

FILTERS="-uniqueOnly 1 -remove_bads 1 -skipTriallelic 1 -minMapQ 30 -minQ 35 -doHWE 1 -sb_pval 1e-5 -hetbias_pval 1e-5 -maxHetFreq 0.5"
TODO="-doMajorMinor 1 -doMaf 1 -dosnpstat 1 -doPost 2 -doGeno 11 -doGlf 2"

echo "angsd -b greenBams -GL 1 -P 1 $FILTERS $TODO -minInd 18 -out pastGreenSFS
angsd -b pinkBams -GL 1 -P 1 $FILTERS $TODO -minInd 3 -out pastPinkSFS
angsd -b purpleBams -GL 1 -P 1 $FILTERS $TODO -minInd 4 -out pastPurpleSFS" > sfsClusters

launcher_creator.py -j sfsClusters -n sfsClusters -q shortq7 -t 06:00:00 -e $EMAIL -N 1
sbatch sfsClusters.slurm

for file in past*SFS.geno.gz; do
echo '#!/bin/bash' > ${file%%.*}.sh;
echo "zcat $file | awk '{print \$1\"\t\"\$2}' > ${file%%.*}sites" >> ${file%%.*}.sh;
sbatch -e ${file%%.*}.e%j -o ${file%%.*}.o%j -p shortq7 --mem=100GB --mail-user eshilling2013@fau.edu --mail-type=ALL ${file%%.*}.sh;
done

# compile common sites from all lineages using awk
srun awk '(++c[$0])==(ARGC-1)' *SFSsites > sfsSitesToDo

#index sites for ANGSD and re-run ANGSD using ```-sites```
angsd sites index sfsSitesToDo

export GENOME_FASTA=~/2bRAD/past/genome/past_genome

TODO="-doSaf 1 -ref $GENOME_FASTA -anc $GENOME_FASTA -doMaf 1 -doMajorMinor 4"

echo "angsd -sites sfsSitesToDo -b greenBams -GL 1 -P 1 $TODO -out pastGreen
angsd -sites sfsSitesToDo -b pinkBams -GL 1 -P 1 $TODO -out pastPink
angsd -sites sfsSitesToDo -b purpleBams -GL 1 -P 1 $TODO -out pastPurple" >sfs

launcher_creator.py -j sfs -n sfs -q shortq7 -t 06:00:00 -e $EMAIL -N 1
sbatch sfs.slurm

##-----------------------------------------------------------------------------------
###-- Filter Fst outliers from sites

FILTERS="-minMapQ 20 -minQ 25 -minInd 27 -doHWE 1 -sb_pval 1e-5 -hetbias_pval 1e-5 -uniqueOnly 1 -remove_bads 1 -skipTriallelic 1 -snp_pval 1e-5 -minMaf 0.05"
-sites sitesToDo -GL 1 -P 1 -uniqueOnly 1 -remove_bads 1 -minMapQ 20 -minQ 25 -dosnpstat 1 -doHWE 1 -hwe_pval 1e-5 -sb_pval 1e-5 -hetbias_pval 1e-5 -skipTriallelic 1 -snp_pval 1e-5 -minMaf 0.05 -doMajorMinor 1 -doMaf 1 -doCounts 1 -makeMatrix 1 -doIBS 1 -doCov 1 -doGeno 8 -doBcf 1 -doPost 1 -doGlf 2 -minInd 27 -out pastFiltSnps

TODO="-doMajorMinor 4 -ref $GENOME_FASTA -doMaf 1 -dosnpstat 1 -doPost 2 -doBcf 1 --ignore-RG 0 -doGeno 11 -doCounts 1"

mkdir ~/2bRAD/past/sefl/filteredSNPS/bayescan
cd ~/2bRAD/past/sefl/filteredSNPS/bayescan

# create a file called vcf2bayescan.spid containing this text:

echo "############
# VCF Parser questions
PARSER_FORMAT=VCF
# Do you want to include a file with population definitions?
VCF_PARSER_POP_QUESTION=true
# Only input following regions (refSeqName:start:end, multiple regions: whitespace separated):
VCF_PARSER_REGION_QUESTION=
# What is the ploidy of the data?
VCF_PARSER_PLOIDY_QUESTION=DIPLOID
# Only output following individuals (ind1, ind2, ind4, ...):
VCF_PARSER_IND_QUESTION=
# Output genotypes as missing if the read depth of a position for the sample is below:
VCF_PARSER_READ_QUESTION=
# Take most likely genotype if "PL" or "GL" is given in the genotype field?
VCF_PARSER_PL_QUESTION=true
# Do you want to exclude loci with only missing data?
VCF_PARSER_EXC_MISSING_LOCI_QUESTION=false
# Select population definition file:
VCF_PARSER_POP_FILE_QUESTION=./bspops.txt
# Only output SNPs with a phred-scaled quality of at least:
VCF_PARSER_QUAL_QUESTION=
# Do you want to include non-polymorphic SNPs?
VCF_PARSER_MONOMORPHIC_QUESTION=false
# Output genotypes as missing if the phred-scale genotype quality is below:
VCF_PARSER_GTQUAL_QUESTION=
# GESTE / BayeScan Writer questions
WRITER_FORMAT=GESTE_BAYE_SCAN
# Specify which data type should be included in the GESTE / BayeScan file  (GESTE / BayeScan can only analyze one data type per file):
GESTE_BAYE_SCAN_WRITER_DATA_TYPE_QUESTION=SNP
############" >vcf2bayescan.spid

## Need a file "bspops" that has samples in bams order with the assigned populations/lineages
## make this with my bams files and then their color lineage, if under the 75% threshold just say NA
cp ../../ANGSD/bamsClusters ./bspops.txt

cp ../ANGSD/pastFiltSnps.bcf .

srun java -Xmx1024m -Xms512m -jar ~/bin/PGDSpider_2.0.7.1/PGDSpider2-cli.jar -inputfile pastFiltSnps.vcf -outputfile pastFilt.bayescan -spid vcf2bayescan.spid

echo "bayescan pastFilt.bayescan -threads=100" >bayeScan

launcher_creator.py -j bayeScan -n bayeScan -q mediumq7 -t 06:00:00 -e $EMAIL -N 5
sbatch bayeScan.slurm

##there are no outliers

##------------------------------------------------------------------------------
##-- Heterozygosity --##

cd ~/2bRAD/past/sefl/ANGSD_genome

angsd sites index sfsSitesToDo

export GENOME_FASTA=~/2bRAD/past/genome/past_genome

FILTERS="-maxHetFreq 0.5 -uniqueOnly 1 -remove_bads 1 -skipTriallelic 1 -minMapQ 25 -minQ 30 -doHWE 1 -sb_pval 1e-5 -hetbias_pval 1e-5 -minInd 27"
TODO="-ref $GENOME_FASTA -makeMatrix 1 -doIBS 1 -doCov 1 -doGeno 32 -doPost 1 -doGlf 2 -doCounts 1 -doMajorMinor 1 -dosnpstat 1 -doMaf 1"

echo "angsd -sites sfsSitesToDo -b bamsNoClones -GL 1 -P 1 $TODO $FILTERS -out pastHet" >angsdHet

launcher_creator.py -j angsdHet -n angsdHet -q shortq7 -t 06:00:00 -e $EMAIL -N 1
sbatch angsdHet.slurm

echo heterozygosity_beagle.R pastHet.beagle.gz >filtHet

launcher_creator.py -j filtHet -n filtHet -q mediumq7 -t 24:00:00 -e $EMAIL -N 1
sbatch filtHet.slurm

tail -n 36 filtHet.e* > pastHet
