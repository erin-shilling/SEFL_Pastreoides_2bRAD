theme_minimal()
snpHeatmap = snpHeatmapA + theme(
axis.text.x = element_text(vjust = 1, size = 16, hjust = 0.5, color = "black"),
axis.text.y = element_text(size = 16, color = "black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.background = element_rect(fill = "white"),
axis.ticks = element_blank(),
legend.position = c(0.7, 0.87),
legend.direction = "horizontal",
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
plot.title = element_text(size = 16))
snpHeatmap
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/fstHeatMap_GENOME.png", plot = snpHeatmap, width = 30, height = 9, units = "cm", dpi = 300)
levels(snpFst$Pop2)
snpHeatmapA = ggplot(data = snpFst, aes(Pop, Pop2, fill = as.numeric(as.character(Fst))))+
geom_tile(color = "white") +
geom_segment(data = snpFst, aes(x = 0.48, xend = -0.43, y = Pop, yend = Pop, color = region), size = 23) + #edits y-axis pop titles, x changes x-axis width of color bars into the right/Fst side, xend changes width on the left side
geom_segment(data = snpFst, aes(x = Pop2, xend = Pop2, y = 0.45, yend = -0.7, color = region2), size = 77.5) +
scale_color_manual(values = flPal[], guide = NULL) +
scale_fill_gradient(low = "white", high = "red", limit = c(0, 0.07), space = "Lab", name = expression(paste(italic("F")[ST])), na.value = "white",  guide = "colourbar") +
geom_text(data = snpFst, aes(Pop, Pop2, label = Fst), color = ifelse(snpQ$Qval <= 0.05,"black", "darkgrey"), size = ifelse(snpQ$Qval < 0.05, 6, 5), fontface = ifelse (snpQ$Qval < 0.05, "bold", "plain")) +
guides(fill = guide_colorbar(barwidth = 12, barheight = 1, title.position = "top", title.hjust = 0.5)) +
scale_y_discrete(position = "left", limits = (levels(snpFst$Pop2))[c(4:1)]) +
scale_x_discrete(limits = rev(levels(snpFst$Pop))[c(1:4)]) +
coord_cartesian(xlim = c(1, 4), ylim = c(1, 4), clip = "off") +
theme_minimal()
snpHeatmap = snpHeatmapA + theme(
axis.text.x = element_text(vjust = 1, size = 16, hjust = 0.5, color = "black"),
axis.text.y = element_text(size = 16, color = "black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.background = element_rect(fill = "white"),
axis.ticks = element_blank(),
legend.position = c(0.7, 0.87),
legend.direction = "horizontal",
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
plot.title = element_text(size = 16))
snpHeatmap
snpHeatmapA = ggplot(data = snpFst, aes(Pop, Pop2, fill = as.numeric(as.character(Fst))))+
geom_tile(color = "white") +
geom_segment(data = snpFst, aes(x = 0.48, xend = -0.43, y = Pop, yend = Pop, color = region), size = 23) + #edits y-axis pop titles, x changes x-axis width of color bars into the right/Fst side, xend changes width on the left side
geom_segment(data = snpFst, aes(x = Pop2, xend = Pop2, y = 0.45, yend = -0.7, color = region2), size = 77.5) +
scale_color_manual(values = flPal[], guide = NULL) +
scale_fill_gradient(low = "white", high = "red", limit = c(0, 0.07), space = "Lab", name = expression(paste(italic("F")[ST])), na.value = "white",  guide = "colourbar") +
geom_text(data = snpFst, aes(Pop, Pop2, label = Fst), color = ifelse(snpQ$Qval <= 0.05,"black", "darkgrey"), size = ifelse(snpQ$Qval < 0.05, 6, 5), fontface = ifelse (snpQ$Qval < 0.05, "bold", "plain")) +
guides(fill = guide_colorbar(barwidth = 12, barheight = 1, title.position = "top", title.hjust = 0.5)) +
scale_y_discrete(position = "left", limits = (levels(snpFst$Pop2))[c(1:4)]) +
scale_x_discrete(limits = rev(levels(snpFst$Pop))[c(1:4)]) +
coord_cartesian(xlim = c(1, 4), ylim = c(1, 4), clip = "off") +
theme_minimal()
snpHeatmap = snpHeatmapA + theme(
axis.text.x = element_text(vjust = 1, size = 16, hjust = 0.5, color = "black"),
axis.text.y = element_text(size = 16, color = "black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.background = element_rect(fill = "white"),
axis.ticks = element_blank(),
legend.position = c(0.7, 0.87),
legend.direction = "horizontal",
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
plot.title = element_text(size = 16))
snpHeatmap
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/fstHeatMap_GENOME.png", plot = snpHeatmap, width = 30, height = 9, units = "cm", dpi = 300)
knitr::opts_chunk$set(echo = TRUE)
# setup rmarkdown environment first
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.align = 'left')
options(timeout=600)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
pastVcf = read.vcfR("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.bcf", verbose = FALSE)
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis", "ropensci/rnaturalearthhires")
pacman::p_load("cowplot", "ggrepel", "ggspatial", "maps", "paletteer", "patchwork", "rgdal", "rnaturalearth", "sf", "tidyverse", "reshape2", "MCMC.OTU", "pairwiseAdonis", "RColorBrewer", "Redmonder", "flextable", "lubridate", "officer", "adegenet", "dendextend", "gdata", "ggdendro", "hierfstat", "Imap", "kableExtra", "poppr", "StAMPP", "vcfR", "vegan", "boa", "measurements", "magick", "rgeos", "magrittr", "ggplot2", "rstatix", "ggpubr")
pastVcf = read.vcfR("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.bcf", verbose = FALSE)
pastGenlightPopDepth = vcfR2genlight(pastVcf, n.cores = 2)
locNames(pastGenlightPopDepth) = paste(pastVcf@fix[,1],pastVcf@fix[,2],sep="_")
popData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% dplyr::select("sample" = tube_id, "pop" = region) # Reads in population data for each sample
popData$pop = factor(popData$pop)
levels(popData$pop)
popData$pop = factor(popData$pop, levels(popData$pop)[c(4, 2, 5, 1, 3)])
strata(pastGenlightPopDepth) = data.frame(popData)
setPop(pastGenlightPopDepth) = ~pop
sintGenlightPopDepth$pop = factor(sintGenlightPopDepth$pop)
pastGenlightPopDepth$pop = factor(pastGenlightPopDepth$pop)
levels(pastGenlightPopDepth$pop)
pastGenlightPopDepth$pop = factor(pastGenlightPopDepth$pop,
levels(pastGenlightPopDepth$pop)[c(4, 1, 2, 3, 5)])
levels(pastGenlightPopDepth$pop)
levels(popData$pop)
grp = find.clusters(pastGenlightPopDepth, n.pca = 36, max.n.clust = 8, choose.n.clust = FALSE, criterion = "goesup")
grp = find.clusters(pastGenlightPopDepth, n.pca = 35, max.n.clust = 8, choose.n.clust = FALSE, criterion = "goesup")
grp
View(grp)
head(grp)
grp = find.clusters(pastGenlightPopDepth, n.pca = 35, max.n.clust = 8, choose.n.clust = TRUE, criterion = "goesup")
grp = find.clusters(pastGenlightPopDepth, n.pca = 35, max.n.clust = 8, choose.n.clust = TRUE, criterion = "goesup")
head(grp)
hea
grp = find.clusters(pastGenlightPopDepth, n.pca = 35, max.n.clust = 8, choose.n.clust = FALSE, criterion = "goesup")
grp
plot(grp)
grp
grp
View(grp)
plot(grp$Kstat)
grp
grp = find.clusters(pastGenlightPopDepth, max.n.clust = 8)
grp = find.clusters(pastGenlightPopDepth, max.n.clust = 8)
grp
??find.clusters
knitr::opts_chunk$set(echo = TRUE)
# setup rmarkdown environment first
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.align = 'left')
options(timeout=600)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis", "ropensci/rnaturalearthhires")
pacman::p_load("cowplot", "ggrepel", "ggspatial", "maps", "paletteer", "patchwork", "rgdal", "rnaturalearth", "sf", "tidyverse", "reshape2", "MCMC.OTU", "pairwiseAdonis", "RColorBrewer", "Redmonder", "flextable", "lubridate", "officer", "adegenet", "dendextend", "gdata", "ggdendro", "hierfstat", "Imap", "kableExtra", "poppr", "StAMPP", "vcfR", "vegan", "boa", "measurements", "magick", "rgeos", "magrittr", "ggplot2", "rstatix", "ggpubr")
#packages: tidyverse, vcfR, adegenet, poppr
#reading in bcf file
pastVcf = read.vcfR("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.bcf", verbose = TRUE)
#convert to genlight files for poppr
pastGenlightPopulation = vcfR2genlight(pastVcf, n.cores = 1)
#taking metadata file, without technical replicates & clones, reads in population data for each sample
popData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "pop" = region)
#setting up amova
strata(pastGenlightPopulation) = data.frame(popData)
setPop(pastGenlightPopulation) = ~pop
#Runs AMOVA looking at samples by region
amova <- poppr.amova(pastGenlightPopulation, ~pop)
amova
set.seed(694)
amovasignif <- randtest(amova, nrepet = 99)
amovasignif$names
amovasignif$obs
amovasignif$pvalue
amovaPerc = paste(round(amova$componentsofcovariance$`%`[1], 2), "%",sep="")
amovaP = amovasignif$pvalue[3]
amovaPerc
amovaP
options(sdmpredictors_datadir="data_files/bioOracle", timeout = max(300, getOption("timeout")))
library(sdmpredictors)
library(tidyverse)
library(vegan)
datasets = list_datasets(terrestrial = FALSE, marine = TRUE)
present = list_layers(datasets) %>% dplyr::select(dataset_code, layer_code, name, units, description, contains("cellsize"), version) %>% filter(version == 2.2) %>% filter(layer_code %in% c("BO22_parmean", "BO22_ph", "BO22_dissoxmean_bdmean", "BO22_salinitymean_bdmean", "BO22_nitratemean_bdmean"))
envVar = load_layers(present$layer_code)
popData=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "Population" = region, "depth" = collection_depth_m, "lat" = site_lat, "lon" = site_long)
popData$Population[popData$Population=="Pompano/LBTS"]<-"Ft. Lauderdale"
envData = data.frame(popData, raster::extract(envVar, popData[,5:4]))
corData = rcorr(as.matrix(envData[,c(3, 4, 6:ncol(envData))]), type = "pearson")
#visualizing to then remove variables that had significant colinearity >0.7
library(Hmisc)
corData = rcorr(as.matrix(envData[,c(3, 4, 6:ncol(envData))]), type = "pearson")
corDataFlat = melt(corData$r, value.name = "r")
pDataFlat = melt(corData$P, value.name = "p")
corDataBind = corDataFlat %>% left_join(pDataFlat, by = c("Var1","Var2"))
#moving forward with variables with collinearities less than 0.7
#vif won't run w calcite or carbon phyto mean, must also have collinearities?
envData2 = envData %>% select(depth, lat, BO22_nitratemean_bdmean)
vif = diag(solve(cor(envData2)))
vif
pastMa = as.matrix(read.table("data_files/pastNoClones.ibsMat"))
rda1 = dbrda(pastMa ~ ., data = envData2)
RsquareAdj(rda1)
anova.cca(rda1)
rda0 = dbrda(pastMa ~ 1, data = envData2)
rda1 = dbrda(pastMa ~ ., data = envData2)
set.seed(092)
bestDbrda <- ordiR2step(rda0, rda1)
bestDbrda$anova
model = envData2 %>% dplyr::select("Depth" = depth, "Latitude" = lat)
pastDbrda = dbrda(pastMa ~ Depth + Latitude, model)
pastDbrda
head(pastDbrda)
pastRdaVar = round(pastDbrda$CA$eig/sum(pastDbrda$CA$eig)*100, 1)
head(pastRdaVar)
pastRdaPoints = as.data.frame(scores(pastDbrda)$sites)
pastRdaPoints$sample = popData$sample
head(pastRdaPoints)
pastDbrdaData1 = popData %>% left_join(pastRdaPoints)
head(pastDbrdaData1)
tail(pastDbrdaData1)
envLoad = as.data.frame(pastDbrda$CCA$biplot)
envLoad$var = row.names(envLoad)
pastDbrdaData = merge(pastDbrdaData1, aggregate(cbind(mean.x = dbRDA1, mean.y = dbRDA2)~Population, pastDbrdaData1, mean), by="Population")
View(pastDbrdaData)
bestDbrda$anova
pastModel = pastEnvData2 %>% dplyr::select("Depth" = depth, "Latitude" = lat)
pastModel = envData2 %>% dplyr::select("Depth" = depth, "Latitude" = lat)
pastDbrda = dbrda(pastMa ~ Depth + Latitude, pastModel)
pastDbrdaVarPart = varpart(pastMa, ~ depth, ~ lat, data = envData2)
pastDbrdaDepth = dbrda(past2Dist ~ Depth, past2Model)
pastDbrdaDepth = dbrda(past2Dist ~ Depth, pastModel)
pastDbrdaDepth = dbrda(pastMa ~ Depth, pastModel)
pastDbrdaLat = dbrda(pastMa ~ Latitude, pastModel)
plot(pastDbrdaVarPart, Xnames = c("Depth", "Latitude"), bg = c(4:7), digits = 2)
pastDbrdaVarPart
set.seed(004)
anova(pastDbrda)
set.seed(003)
anova(pastDbrdaDepth)
set.seed(002)
anova(pastDbrdaLat)
grp = find.clusters(pastGenlightPopDepth, n.pca = 35, max.n.clust = 8)
pastVcf = read.vcfR("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.bcf", verbose = FALSE)
pastGenlightPopDepth = vcfR2genlight(pastVcf, n.cores = 2)
locNames(pastGenlightPopDepth) = paste(pastVcf@fix[,1],pastVcf@fix[,2],sep="_")
popData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% dplyr::select("sample" = tube_id, "pop" = region)
popData$pop = factor(popData$pop)
levels(popData$pop)
popData$pop = factor(popData$pop, levels(popData$pop)[c(4, 2, 5, 1, 3)])
strata(pastGenlightPopDepth) = data.frame(popData)
setPop(pastGenlightPopDepth) = ~pop
pastGenlightPopDepth$pop = factor(pastGenlightPopDepth$pop)
levels(pastGenlightPopDepth$pop)
pastGenlightPopDepth$pop = factor(pastGenlightPopDepth$pop,
levels(pastGenlightPopDepth$pop)[c(4, 1, 2, 3, 5)])
grp = find.clusters(pastGenlightPopDepth, n.pca = 35, max.n.clust = 8)
grp = find.clusters(pastGenlightPopDepth, n.pca = 35, max.n.clust = 8)
grp = find.clusters(pastGenlightPopDepth, n.pca = 35, max.
grp = find.clusters(pastGenlightPopDepth, max.n.clust = 8)
grp = find.clusters(pastGenlightPopDepth, max.n.clust = 8)
# packages: paletteer, tidyverse, reshape2
#kColPal3 = paletteer_d("LaCroixColoR::PassionFruit")[c(2,3,6)] #A
#kColPal3 = paletteer_d("LaCroixColoR::Mango")[c(3,5,6)] #B
#kColPal3 = paletteer_d("LaCroixColoR::Berry")[c(1,3,6)] #C
#kColPal3 = paletteer_d("LaCroixColoR::Apricot")[c(2,3,6)] #E
#kColPal3 = paletteer_d("LaCroixColoR::KiwiSandia")[c(3,5,7)] #G
kColPal3 = paletteer_d("LaCroixColoR::MurePepino")[c(3,4,6)]#H
flPal = paletteer_d("LaCroixColoR::PeachPear")[c(1,2,3,4,5)]
admixpops = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "Region" = region)
clumpp3 = read.table("data_files/pastClumpK3", header = FALSE)
clumpp3 = read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastClumpK3", header = FALSE)
clumpp3 = read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastClumpK3.output", header = FALSE)
clumpp3$V1 = admixpops$sample
seflPastAdmix = admixpops %>% left_join(clumpp3[,c(1,6:8)], by = c("sample" = "V1")) %>% left_join(clumpp7[,c(1, 6:12)], by = c("sample" = "V1")) %>% rename("cluster3.1" = "V6.x", "cluster3.2" = "V7.x", "cluster3.3" = "V8.x",
"cluster7.1" = "V6.y", "cluster7.2" = "V7.y", "cluster7.3" = "V8.y", "cluster7.4" = "V9", "cluster7.5" = "V10", "cluster7.6" = "V11", "cluster7.7" = "V12")
seflPastAdmix = admixpops %>% left_join(clumpp3[,c(1,6:8)], by = c("sample" = "V1"))
View(seflPastAdmix)
seflPastAdmix = admixpops %>% left_join(clumpp3[,c(1,6:8)], by = c("sample" = "V1")) %>% rename("cluster3.1" = "V6", "cluster3.2" = "V7", "cluster3.3" = "V8")
seflPastAdmix$Region = factor(seflPastAdmix$Region)
levels(seflPastAdmix)
levels(seflPastAdmix$Re)
seflPastAdmix$Region = factor(seflPastAdmix$Region, levels(seflPastAdmix$Region)[c(4, 2, 5, 1, 3)])
levels(seflPastAdmix$Region)[1] = "St. Lucie"
levels(seflPastAdmix$Region)[5] = "Ft. Lauderdale"
seflPastAdmix = arrange(seflPastAdmix, Region, -cluster3.1)
popCounts = seflPastAdmix %>% group_by(Region) %>% summarize(n = n())
seflPastAdmix = arrange(seflPastAdmix, Region, -cluster3.1)
popCounts = seflPastAdmix %>% group_by(seflPastAdmix$Region) %>% summarize(n = n())
popCounts = seflPastAdmix %>% group_by(Region)
View(popCounts)
popCounts
popCounts = seflPastAdmix %>% group_by(Region) %>% summarize(n = n(.))
?n()
seflPastAdmix = arrange(seflPastAdmix, Region, -cluster3.1)
popCounts = seflPastAdmix %>% group_by(Region) %>% dplyr::summarize(n = n(.))
popCounts = seflPastAdmix %>% group_by(Region) %>% dplyr::summarize(n = n())
popCounts
popCountList = reshape2::melt(lapply(popCounts$n,function(x){c(1:x)}))
seflPastAdmix$ord = popCountList$value
seflPastAdmixMelt = melt(seflPastAdmix, id.vars=c("sample", "Region", "ord"), variable.name="Ancestry", value.name="Fraction")
seflPastAdmixMelt$Ancestry = factor(seflPastAdmixMelt$Ancestry)
seflPastAdmixMelt$Ancestry = factor(seflPastAdmixMelt$Ancestry, levels = rev(levels(seflPastAdmixMelt$Ancestry)))
write_excel_csv(seflPastAdmixMelt, file= 'Samples in each K.csv')
popAnno = data.frame(x1 = c(0.3, 0.3, 0.3, 0.3, 0.3), x2 = c(3.7, 10.7, 7.7, 10.7, 6.7), y1 = -0.12, y2 = -0.12, sample = NA, Ancestry = NA, ord  = NA, Fraction = NA,Region= c("St. Lucie", "Jupiter", "West Palm Beach", "Boynton Beach", "Ft. Lauderdale"))
popAnno$Region = factor(popAnno$Region)
popAnno$Region = factor(popAnno$Region, levels = levels(popAnno$Region)[c(4, 3, 5, 1, 2)])
admixTheme = theme_bw()+
theme(plot.title = element_text(hjust = 0, size = 10),
panel.grid = element_blank(),
panel.background = element_rect(fill = "gray25", colour = "gray25"),
panel.border = element_rect(fill = NA, color = "black", size = 1, linetype = "solid"),
panel.spacing.x = grid:::unit(0.05, "lines"),
panel.spacing.y = grid:::unit(0.05, "lines"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title = element_blank(),
strip.background.x = element_blank(),
strip.background.y = element_blank(),
strip.text = element_text(size = 8),
strip.text.y.left = element_text(size = 10, angle = 90),
strip.text.x.bottom = element_text(vjust = -.1, color = "black"),
legend.key = element_blank(),
legend.position = "none",
legend.title = element_text(size = 8))
admixPlotK3A = ggplot(data = subset(seflPastAdmixMelt, subset = seflPastAdmixMelt$Ancestry %in% c("cluster3.1", "cluster3.2", "cluster3.3")), aes(x = ord, y = Fraction, fill = Ancestry, order = sample)) +
geom_segment(data = popAnno, aes(x = x1, xend = x2, y = y1, yend = y2, color = Region), size = 7) +
geom_bar(stat = "identity", position = "fill", width = 1, colour = "grey25", size = 0.2) +
facet_grid(.~ Region, scales = "free", switch = "both", space = "free") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0.001, 0.001)) +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = flPal) +
ggtitle(expression(paste(italic("K")," = 3", sep =""))) +
coord_cartesian(ylim = c(-0.01, 1.01), clip = "off")
admixPlotK3 = admixPlotK3A + admixTheme
admixPlotK3
admixPlotK3
admixPlotK3
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/genome_mapped/figures/admixturePlotK3.png", plot = admixPlotK, width = 15, height = 10, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/genome_mapped/figures/admixturePlotK3.png", plot = admixPlotK3, width = 15, height = 10, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/genome_mapped/figures/admixturePlotK3.png", plot = admixPlotK3, width = 15, height = 10, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/genome_mapped/figures/admixturePlotK3.png", plot = admixPlotK3, width = 15, height = 10, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/admixturePlotK3.png", plot = admixPlotK3, width = 15, height = 10, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/admixturePlotK3.png", plot = admixPlotK3, width = 15, height = 5, units = "cm", dpi = 300)
kColPal3 = paletteer_d("LaCroixColoR::PassionFruit")[c(2,3,6)]
flPal = paletteer_d("LaCroixColoR::PeachPear")[c(1,2,3,4,5)]
admixpops = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "Region" = region)
##Figure for manuscript visualizing only K = 3
clumpp3 = read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastClumpK3.output", header = FALSE)
clumpp3$V1 = admixpops$sample
seflPastAdmix = admixpops %>% left_join(clumpp3[,c(1,6:8)], by = c("sample" = "V1")) %>% rename("cluster3.1" = "V6", "cluster3.2" = "V7", "cluster3.3" = "V8")
seflPastAdmix$Region = factor(seflPastAdmix$Region)
seflPastAdmix$Region = factor(seflPastAdmix$Region, levels(seflPastAdmix$Region)[c(4, 2, 5, 1, 3)])
levels(seflPastAdmix$Region)[1] = "St. Lucie"
levels(seflPastAdmix$Region)[5] = "Ft. Lauderdale"
seflPastAdmix = arrange(seflPastAdmix, Region, -cluster3.1)
popCounts = seflPastAdmix %>% group_by(Region) %>% dplyr::summarize(n = n())
popCounts
popCountList = reshape2::melt(lapply(popCounts$n,function(x){c(1:x)}))
seflPastAdmix$ord = popCountList$value
seflPastAdmixMelt = melt(seflPastAdmix, id.vars=c("sample", "Region", "ord"), variable.name="Ancestry", value.name="Fraction")
seflPastAdmixMelt$Ancestry = factor(seflPastAdmixMelt$Ancestry)
seflPastAdmixMelt$Ancestry = factor(seflPastAdmixMelt$Ancestry, levels = rev(levels(seflPastAdmixMelt$Ancestry)))
write_excel_csv(seflPastAdmixMelt, file= 'Samples in each K.csv')
#making segments that are color coded by population
#x2 is number of samples for each plot plus 0.7 to ordinate spacing of columns
popAnno = data.frame(x1 = c(0.3, 0.3, 0.3, 0.3, 0.3), x2 = c(3.7, 10.7, 7.7, 10.7, 6.7), y1 = -0.12, y2 = -0.12, sample = NA, Ancestry = NA, ord  = NA, Fraction = NA,Region= c("St. Lucie", "Jupiter", "West Palm Beach", "Boynton Beach", "Ft. Lauderdale"))
popAnno$Region = factor(popAnno$Region)
popAnno$Region = factor(popAnno$Region, levels = levels(popAnno$Region)[c(4, 3, 5, 1, 2)])
admixTheme = theme_bw()+
theme(plot.title = element_text(hjust = 0, size = 10),
panel.grid = element_blank(),
panel.background = element_rect(fill = "gray25", colour = "gray25"),
panel.border = element_rect(fill = NA, color = "black", size = 1, linetype = "solid"),
panel.spacing.x = grid:::unit(0.05, "lines"),
panel.spacing.y = grid:::unit(0.05, "lines"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title = element_blank(),
strip.background.x = element_blank(),
strip.background.y = element_blank(),
strip.text = element_text(size = 8),
strip.text.y.left = element_text(size = 10, angle = 90),
strip.text.x.bottom = element_text(vjust = -.1, color = "black"),
legend.key = element_blank(),
legend.position = "none",
legend.title = element_text(size = 8))
admixPlotK3A = ggplot(data = subset(seflPastAdmixMelt, subset = seflPastAdmixMelt$Ancestry %in% c("cluster3.1", "cluster3.2", "cluster3.3")), aes(x = ord, y = Fraction, fill = Ancestry, order = sample)) +
geom_segment(data = popAnno, aes(x = x1, xend = x2, y = y1, yend = y2, color = Region), size = 7) +
geom_bar(stat = "identity", position = "fill", width = 1, colour = "grey25", size = 0.2) +
facet_grid(.~ Region, scales = "free", switch = "both", space = "free") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0.001, 0.001)) +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = flPal) +
ggtitle(expression(paste(italic("K")," = 3", sep =""))) +
coord_cartesian(ylim = c(-0.01, 1.01), clip = "off")
admixPlotK3 = admixPlotK3A + admixTheme
admixPlotK3
kColPal3 = paletteer_d("LaCroixColoR::Mango")[c(3,5,6)]
kColPal3
kColPal3 = paletteer_d("LaCroixColoR::Berry")[c(1,3,6)]
kColPal3
# packages: paletteer, tidyverse, reshape2
#kColPal3 = paletteer_d("LaCroixColoR::Apricot")[c(2,3,6)] #E
#kColPal3 = paletteer_d("LaCroixColoR::KiwiSandia")[c(3,5,7)] #G
kColPal3 = paletteer_d("LaCroixColoR::MurePepino")[c(3,4,6)]#H
kColPal3
# packages: paletteer, tidyverse, reshape2
#kColPal3 = paletteer_d("LaCroixColoR::KiwiSandia")[c(3,5,7)] #G
kColPal3 = paletteer_d("LaCroixColoR::MurePepino")[c(3,4,6)]#H
kColPal3
# packages: paletteer, tidyverse, reshape2
kColPal3 = paletteer_d("LaCroixColoR::MurePepino")[c(3,4,5)]#H
kColPal3
admixPlotK3A = ggplot(data = subset(seflPastAdmixMelt, subset = seflPastAdmixMelt$Ancestry %in% c("cluster3.1", "cluster3.2", "cluster3.3")), aes(x = ord, y = Fraction, fill = Ancestry, order = sample)) +
geom_segment(data = popAnno, aes(x = x1, xend = x2, y = y1, yend = y2, color = Region), size = 7) +
geom_bar(stat = "identity", position = "fill", width = 1, colour = "grey25", size = 0.2) +
facet_grid(.~ Region, scales = "free", switch = "both", space = "free") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0.001, 0.001)) +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = flPal) +
ggtitle(expression(paste(italic("K")," = 3", sep =""))) +
coord_cartesian(ylim = c(-0.01, 1.01), clip = "off")
admixPlotK3 = admixPlotK3A + admixTheme
admixPlotK3
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/admixturePlotK3.png", plot = admixPlotK3, width = 15, height = 5, units = "cm", dpi = 300)
# packages: paletteer, tidyverse, reshape2
kColPal3 = paletteer_d("LaCroixColoR::MurePepino")[c(2, 3,4,5)]#H
kColPal3
# packages: paletteer, tidyverse, reshape2
kColPal3 = paletteer_d("LaCroixColoR::MurePepino")[c(1, 2, 3,4,5)]#H
kColPal3
# packages: paletteer, tidyverse, reshape2
kColPal3 = paletteer_d("LaCroixColoR::MurePepino")[c(3,4,7)]#H
kColPal3
admixPlotK3A = ggplot(data = subset(seflPastAdmixMelt, subset = seflPastAdmixMelt$Ancestry %in% c("cluster3.1", "cluster3.2", "cluster3.3")), aes(x = ord, y = Fraction, fill = Ancestry, order = sample)) +
geom_segment(data = popAnno, aes(x = x1, xend = x2, y = y1, yend = y2, color = Region), size = 7) +
geom_bar(stat = "identity", position = "fill", width = 1, colour = "grey25", size = 0.2) +
facet_grid(.~ Region, scales = "free", switch = "both", space = "free") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0.001, 0.001)) +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = flPal) +
ggtitle(expression(paste(italic("K")," = 3", sep =""))) +
coord_cartesian(ylim = c(-0.01, 1.01), clip = "off")
admixPlotK3 = admixPlotK3A + admixTheme
admixPlotK3
admixPlotK3
kColPal3
# packages: paletteer, tidyverse, reshape2
kColPal3 = paletteer_d("LaCroixColoR::MurePepino")[c(3,4,7)]#H
kColPal3
admixPlotK3A = ggplot(data = subset(seflPastAdmixMelt, subset = seflPastAdmixMelt$Ancestry %in% c("cluster3.1", "cluster3.2", "cluster3.3")), aes(x = ord, y = Fraction, fill = Ancestry, order = sample)) +
geom_segment(data = popAnno, aes(x = x1, xend = x2, y = y1, yend = y2, color = Region), size = 7) +
geom_bar(stat = "identity", position = "fill", width = 1, colour = "grey25", size = 0.2) +
facet_grid(.~ Region, scales = "free", switch = "both", space = "free") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0.001, 0.001)) +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = flPal) +
ggtitle(expression(paste(italic("K")," = 3", sep =""))) +
coord_cartesian(ylim = c(-0.01, 1.01), clip = "off")
admixPlotK3 = admixPlotK3A + admixTheme
admixPlotK3
# packages: paletteer, tidyverse, reshape2
kColPal3 = paletteer_d("LaCroixColoR::MurePepino")[c(3,4,6)]
kColPal3
paletteer_d("LaCroixColoR::MurePepino")
paletteer_c("viridis::viridis", n = 3)
paletteer_c("viridis::viridis", n = 3)
kColPal3 = paletteer_d("LaCroixColoR::KiwiSandia")[c(3,5,7)]
paletteer_d("LaCroixColoR::KiwiSandia")
paletteer_d("LaCroixColoR::PassionFruit")
paletteer_d("LaCroixColoR::Mango")
paletteer_d("LaCroixColoR::Berry")
paletteer_d("LaCroixColoR::Apricot")
paletteer_d("LaCroixColoR::KiwiSandia")
knitr::opts_chunk$set(echo = TRUE)
# setup rmarkdown environment first
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.align = 'left')
options(timeout=600)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
kColPal3 = paletteer_d("LaCroixColoR::KiwiSandia")[c(3,4,5)]
admixPlotK3A = ggplot(data = subset(seflPastAdmixMelt, subset = seflPastAdmixMelt$Ancestry %in% c("cluster3.1", "cluster3.2", "cluster3.3")), aes(x = ord, y = Fraction, fill = Ancestry, order = sample)) +
geom_segment(data = popAnno, aes(x = x1, xend = x2, y = y1, yend = y2, color = Region), size = 7) +
geom_bar(stat = "identity", position = "fill", width = 1, colour = "grey25", size = 0.2) +
facet_grid(.~ Region, scales = "free", switch = "both", space = "free") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0.001, 0.001)) +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = flPal) +
ggtitle(expression(paste(italic("K")," = 3", sep =""))) +
coord_cartesian(ylim = c(-0.01, 1.01), clip = "off")
admixPlotK3 = admixPlotK3A + admixTheme
admixPlotK3
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/denovo_mapped/figures/admixPlotK.png", plot = admixPlotK, width = 15, height = 10, units = "cm", dpi = 300)
kColPal3 = paletteer_d("LaCroixColoR::KiwiSandia")[c(3,4,5)]
kColPal3 = paletteer_d("LaCroixColoR::KiwiSandia")[c(3,4,5)]
admixPlotK3A = ggplot(data = subset(seflPastAdmixMelt, subset = seflPastAdmixMelt$Ancestry %in% c("cluster3.1", "cluster3.2", "cluster3.3")), aes(x = ord, y = Fraction, fill = Ancestry, order = sample)) +
geom_segment(data = popAnno, aes(x = x1, xend = x2, y = y1, yend = y2, color = Region), size = 7) +
geom_bar(stat = "identity", position = "fill", width = 1, colour = "grey25", size = 0.2) +
facet_grid(.~ Region, scales = "free", switch = "both", space = "free") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0.001, 0.001)) +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = flPal) +
ggtitle(expression(paste(italic("K")," = 3", sep =""))) +
coord_cartesian(ylim = c(-0.01, 1.01), clip = "off")
admixPlotK3 = admixPlotK3A + admixTheme
admixPlotK3
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/admixturePlotK3.png", plot = admixPlotK3, width = 15, height = 5, units = "cm", dpi = 300)
kColPal3 = paletteer_d("LaCroixColoR::KiwiSandia")[c(3,4,5)]
kColPal3
kColPal3 = paletteer_d("LaCroixColoR::KiwiSandia")[c(4,5,3)]
kColPal3
admixPlotK3A = ggplot(data = subset(seflPastAdmixMelt, subset = seflPastAdmixMelt$Ancestry %in% c("cluster3.1", "cluster3.2", "cluster3.3")), aes(x = ord, y = Fraction, fill = Ancestry, order = sample)) +
geom_segment(data = popAnno, aes(x = x1, xend = x2, y = y1, yend = y2, color = Region), size = 7) +
geom_bar(stat = "identity", position = "fill", width = 1, colour = "grey25", size = 0.2) +
facet_grid(.~ Region, scales = "free", switch = "both", space = "free") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0.001, 0.001)) +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = flPal) +
ggtitle(expression(paste(italic("K")," = 3", sep =""))) +
coord_cartesian(ylim = c(-0.01, 1.01), clip = "off")
admixPlotK3 = admixPlotK3A + admixTheme
admixPlotK3
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/admixturePlotK3.png", plot = admixPlotK3, width = 15, height = 5, units = "cm", dpi = 300)
