list.geopoints = by(df.geopoints[, c("index", "lat", "lon")], 1:n.geopoints, function(x) {
return(list(x))
})
# Get a matrix of distances (in metres)
mat.distances = ReplaceLowerOrUpperTriangle(outer(list.geopoints, list.geopoints, GeoDistanceInMetres), "lower")
# Set the row and column names
rownames(mat.distances) = df.geopoints$name
colnames(mat.distances) = df.geopoints$name
return(mat.distances)}
#packages: ade4?
pastIBS = read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat")%>% as.matrix() %>% as.dist(diag = FALSE)
coords = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select(name = tube_id, lat = site_lat, lon = site_long)
pastGeo = as.dist(GeoDistanceInMetresMatrix(coords)/1000, diag = FALSE)
set.seed(694)
seflPastMantelDist = mantel.randtest(pastIBS, pastGeo, nrepet = 9999)
seflPastMantelDist
#SIGNIFICANT
##MAKING FIGURE
mantelObsDist = round(seflPastMantelDist$obs, 3)
mantelPDist = seflPastMantelDist$pvalue
pastIBSdist =  melt(as.matrix(pastIBS), varnames = c("row", "col"), value.name = "ibs")
pastIBSdist = pastIBSdist[pastIBSdist$row != pastIBSdist$col,]
pastDist = melt(as.matrix(pastGeo), varnames = c("row", "col"), value.name = "distance")
pastDist = pastDist[pastDist$row != pastDist$col,]
snpMantelDistF = data.frame(cbind(pastIBSdist$ibs, pastDist$distance))
colnames(snpMantelDistF) = c("ibs", "distance")
pastIBSdistMantelA = ggplot(data = snpMantelDistF, aes(x = distance, y = ibs)) +
scale_fill_gradientn(colors = paletteer_d("wesanderson::Zissou1")) +
geom_point(shape = 21, fill = "gray40", alpha = 0.25, size = 0.5) +
stat_density_2d(aes(fill = stat(density)), n = 300, contour = FALSE, geom = "raster", alpha = 0.75) +
geom_smooth(method = lm, col = "black", fill = "gray40", fullrange = TRUE, size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
annotate(geom = "text", x = 35, y = 0.24, label = bquote(~italic(r)~" = "~.(mantelObsDist)*", "~italic(p)~" = "~.(mantelPDist)), size = 3) +
labs(x = expression(paste(Delta," distance (km)")), y = "Genetic distance (1 - IBS)") +
theme_bw()
pastIBSdistMantel = pastIBSdistMantelA + theme(
axis.title.x = element_text(size = 12, color = "black"),
axis.text.x = element_text(size = 12, color = "black"),
axis.ticks.x = element_line(color = "black"),
axis.line.x = element_blank(),
axis.title.y = element_text(size = 12, color = "black"),
axis.text.y = element_text(size = 12, color = "black"),
axis.ticks.y = element_line(color = "black"),
axis.line.y = element_blank(),
panel.border = element_rect(size = 1.2, color = "black"),
plot.margin = margin(0.2,0.5,0.1,0.1, unit = "cm"),
legend.position = "none")
pastIBSdistMantel
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/distance_mantelPlot.tiff", plot = pastIBSdistMantel, width = 12, height = 7, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/distance_mantelPlot.pdf", plot = pastIBSdistMantel, width = 12, height = 7, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/distance_mantelPlot.png", plot = pastIBSdistMantel, width = 12, height = 7, units = "cm", dpi = 300)
pastVcf = read.vcfR("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.bcf", verbose = FALSE)
pastGenlight = vcfR2genlight(pastVcf, n.cores = 1)
popdata = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select(sample = tube_id, region)
strata(pastGenlight) = data.frame(popdata)
setPop(pastGenlight)= ~region
pastNeiDist = as.dist(stamppNeisD(pastGenlight, pop = TRUE), diag = F)
popCoords = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% group_by(region) %>% summarize(lat = mean(site_lat), lon = mean(site_long)) %>% as.data.frame()
popCoords$region = factor(popCoords$region)
popCoords$region = factor(popCoords$region, levels = levels(popCoords$region)[c(4, 2, 5, 1, 3)])
popCoords = popCoords %>% arrange(levels(popCoords$region))
# row.names(popCoords) = popCoords$population
pastPopsGeo = as.dist(GeoDistanceInMetresMatrix(popCoords)/1000, diag = F)
set.seed(694)
pastPopIBD = mantel.randtest(pastPopsGeo, pastNeiDist, nrepet = 9999)
pastPopIBD
##NOT SIGNIFICANT
##NOT MAKING FIGURE
pastIBS = read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat")%>% as.matrix() %>% as.dist(diag = FALSE)
pastDepths = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select(name = tube_id, collection_depth_m) %>% dist(method = "maximum")
set.seed(694)
seflpastMantel = mantel.randtest(pastIBS, pastDepths, nrepet = 9999)
seflpastMantel
mantelObs = round(seflpastMantel$obs, 3)
mantelP = seflpastMantel$pvalue
pastIBSdist =  melt(as.matrix(pastIBS), varnames = c("row", "col"), value.name = "ibs")
pastIBSdist = pastIBSdist[pastIBSdist$row != pastIBSdist$col,]
pastDepth = melt(as.matrix(pastDepths), varnames = c("row", "col"), value.name = "depth")
pastDepth = pastDepth[pastDepth$row != pastDepth$col,]
snpMantelDF = data.frame(cbind(pastIBSdist$ibs, pastDepth$depth))
colnames(snpMantelDF) = c("ibs", "depth")
#start building plot
pastIBSdepthMantelA = ggplot(data = snpMantelDF, aes(x = depth, y = ibs)) + scale_fill_gradientn(colors = paletteer_d("wesanderson::Zissou1")) +
geom_point(shape = 21, fill = "gray40", alpha = 0.25, size = 0.5) +
stat_density_2d(aes(fill = stat(density)), n = 300, contour = FALSE, geom = "raster", alpha = 0.75) +
geom_smooth(method = lm, col = "black", fill = "gray40", fullrange = TRUE, size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
annotate(geom = "text", x = 10, y = 0.24, label = bquote(~italic(r)~" = "~.(mantelObs)*", "~italic(p)~" = "~.(mantelP)), size = 3) +
labs(x = expression(paste(Delta," depth (m)")), y = "Genetic distance (1 - IBS)") +
theme_bw()
pastIBSdepthMantel = pastIBSdepthMantelA + theme(
axis.title.x = element_text(size = 12, color = "black"),
axis.text.x = element_text(size = 12, color = "black"),
axis.ticks.x = element_line(color = "black"),
axis.line.x = element_blank(),
axis.title.y = element_text(size = 12, color = "black"),
axis.text.y = element_text(size = 12, color = "black"),
axis.ticks.y = element_line(color = "black"),
axis.line.y = element_blank(),
panel.border = element_rect(size = 1.2, color = "black"),
plot.margin = margin(0.2,0.5,0.1,0.1, unit = "cm"),
legend.position = "none")
pastIBSdepthMantel
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/depth_mantelPlot.tiff", plot = pastIBSdepthMantel, width = 12, height = 7, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/depth_mantelPlot.pdf", plot = pastIBSdepthMantel, width = 12, height = 7, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/depth_mantelPlot.png", plot = pastIBSdepthMantel, width = 12, height = 7, units = "cm", dpi = 300)
kColPal3 = paletteer_c("viridis::viridis", n = 3)
kColPal7 = paletteer_c("viridis::viridis", n = 7)
admixpops = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "Region" = region)
clumpp3 = read.table("data_files/pastClumppK3", header = FALSE)
clumpp7 = read.table("data_files/pastClumppK7", header = FALSE)
clumpp3$V1 = admixpops$sample
clumpp7$V1 = admixpops$sample
seflPastAdmix = admixpops %>% left_join(clumpp3[,c(1,6:8)], by = c("sample" = "V1")) %>%
left_join(clumpp7[,c(1, 6:12)], by = c("sample" = "V1")) %>% rename("cluster3.1" = "V6.x", "cluster3.2" = "V7.x", "cluster3.3" = "V8.x","cluster7.1" = "V6.y", "cluster7.2" = "V7.y", "cluster7.3" = "V8.y", "cluster7.4" = "V9", "cluster7.5" = "V10", "cluster7.6" = "V11", "cluster7.7" = "V12")
seflPastAdmix$Region = factor(seflPastAdmix$Region)
seflPastAdmix$Region = factor(seflPastAdmix$Region, levels(seflPastAdmix$Region)[c(4, 2, 5, 1, 3)])
levels(seflPastAdmix$Region)[1] = "St. Lucie"
seflPastAdmix = arrange(seflPastAdmix, Region, -cluster3.1)
popCounts = seflPastAdmix %>% group_by(Region) %>% summarize(n = n())
popCounts
popCountList = reshape2::melt(lapply(popCounts$n,function(x){c(1:x)}))
seflPastAdmix$ord = popCountList$value
seflPastAdmixMelt = melt(seflPastAdmix, id.vars=c("sample", "Region", "ord"), variable.name="Ancestry", value.name="Fraction")
seflPastAdmixMelt$Ancestry = factor(seflPastAdmixMelt$Ancestry)
seflPastAdmixMelt$Ancestry = factor(seflPastAdmixMelt$Ancestry, levels = rev(levels(seflPastAdmixMelt$Ancestry)))
popAnno = data.frame(x1 = c(0.3, 0.3, 0.3, 0.3, 0.3), x2 = c(3.7, 10.7, 7.7, 10.7, 6.7),
y1 = -0.12, y2 = -0.12, sample = NA, Ancestry = NA, ord  = NA, Fraction = NA,
Region= c("St. Lucie", "Jupiter", "West Palm Beach", "Boynton Beach", "Pompano/LBTS"))
popAnno$Region = factor(popAnno$Region)
popAnno$Region = factor(popAnno$Region, levels = levels(popAnno$Region)[c(4, 2, 5, 1, 3)])
admixTheme = theme_bw()+
theme(plot.title = element_text(hjust = 0, size = 10),
panel.grid = element_blank(),
panel.background = element_rect(fill = "gray25", colour = "gray25"),
panel.border = element_rect(fill = NA, color = "black", size = 1, linetype = "solid"),
panel.spacing.x = grid:::unit(0.05, "lines"),
panel.spacing.y = grid:::unit(0.05, "lines"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title = element_blank(),
strip.background.x = element_blank(),
strip.background.y = element_blank(),
strip.text = element_text(size = 8),
strip.text.y.left = element_text(size = 10, angle = 90),
strip.text.x.bottom = element_text(vjust = -.1, color = "black"),
legend.key = element_blank(),
legend.position = "none",
legend.title = element_text(size = 8))
admixPlotK3A = ggplot(data = subset(seflPastAdmixMelt, subset = seflPastAdmixMelt$Ancestry %in% c("cluster3.1", "cluster3.2", "cluster3.3")), aes(x = ord, y = Fraction, fill = Ancestry, order = sample)) +
geom_segment(data = popAnno, aes(x = x1, xend = x2, y = y1, yend = y2, color = Region), size = 7) +
geom_bar(stat = "identity", position = "fill", width = 1, colour = "grey25", size = 0.2) +
facet_grid(.~ Region, scales = "free", switch = "both", space = "free") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0.001, 0.001)) +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = flPal) +
ggtitle(expression(paste(italic("K")," = 3", sep =""))) +
coord_cartesian(ylim = c(-0.01, 1.01), clip = "off")
admixPlotK3 = admixPlotK3A + admixTheme
admixPlotK7A = ggplot(data = subset(seflPastAdmixMelt, subset = !(seflPastAdmixMelt$Ancestry %in% c("cluster3.1", "cluster3.2", "cluster3.3"))), aes(x = ord, y = Fraction, fill = Ancestry, order = sample)) +
geom_segment(data = popAnno, aes(x = x1, xend = x2, y = y1, yend = y2, color = Region), size = 7) +
geom_bar(stat = "identity", position = "fill", width = 1, colour = "grey25", size = 0.2) +
facet_grid(.~ Region, scales = "free", switch = "both", space = "free") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0.001, 0.001)) +
scale_fill_manual(values = kColPal7) +
scale_color_manual(values = flPal) +
ggtitle(expression(paste(italic("K")," = 7", sep =""))) +
coord_cartesian(ylim = c(-.01, 1.01), clip = "off")
admixPlotK7 = admixPlotK7A + admixTheme
# admixPlotK4 = admixPlotK4A + admixTheme +
#   theme(strip.text.y.left = element_blank())
admixPlot = (admixPlotK3 / admixPlotK7)
admixPlot
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/admixturePlot.png", plot = admixPlot, width = 15, height = 10, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/admixturePlot.eps", plot = admixPlot, width = 15, height = 10, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/admixturePlot.eps", plot = admixPlot, width = 15, height = 10, units = "cm", dpi = 300)
#read in sample metadata with clones, remove technical replicates
popDataClones = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData.csv") [-c(27, 28, 46, 47, 79, 80),] %>% select("sample" = tube_id, "pop" = region)
#treat populations as a factor & order them North-->South
popDataClones$pop = factor(popDataClones$pop)
popDataClones$pop = factor(popDataClones$pop, levels = levels(popDataClones$pop)[c(4, 2, 5, 1, 3)])
#read in zoox reads data with clones incl, technical replicates removed
##why are samples 16, 17, 41 not in this file?? removed in koko step?
zoox = read.delim("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/zooxReads_withclones_techrepsrem", header = FALSE, check.names = FALSE)
head(zoox)
zoox$V2[is.na(zoox$V2)] <- as.character(zoox$V1[is.na(zoox$V2)])
zoox$V1 = gsub("P.*", "chr", zoox$V1)
zoox$V2 = gsub(".trim.*", "", zoox$V2)
zoox = zoox %>% filter(zoox$V1 != "*")
zooxLst = split(zoox$V2, as.integer(gl(length(zoox$V2), 20, length(zoox$V2))))
zooxMaps = NULL
for(i in zooxLst){
zooxMaps = rbind(zooxMaps, data.frame(t(i)))
}
colnames(zooxMaps) = c("sample", zoox$V1[c(2:20)])
for(i in c(2:20)){
zooxMaps[,i] = as.numeric(zooxMaps[,i])
}
str(zooxMaps)
zooxMaps$Symbiodinium = rowSums(zooxMaps[2:6])
zooxMaps$Breviolum = rowSums(zooxMaps[7:10])
zooxMaps$Cladocopium = rowSums(zooxMaps[11:16])
zooxMaps$Durusdinium = rowSums(zooxMaps[17:20])
zooxMaps = zooxMaps[,c(1, 21:24)]
zooxProp = zooxMaps
zooxProp$sum = apply(zooxProp[, c(2:length(zooxProp[1,]))], 1, function(x) {
sum(x, na.rm = T)
})
#turn them into proportions
zooxProp = cbind(zooxProp$sample, (zooxProp[, c(2:(ncol(zooxProp)-1))]
/ zooxProp$sum))
colnames(zooxProp)[1] = "sample"
head(zooxProp)
apply(zooxProp[, c(2:(ncol(zooxProp)))], 1, function(x) {
sum(x, na.rm = T)
})
#bind it to metadata
dfZoox = popDataClones %>% left_join(zooxProp)
dfZoox$pop = as.factor(dfZoox$pop)
# setting up for plotting
dfZoox = dfZoox[order(dfZoox$pop),]
sampleCounts = plyr::count(dfZoox, c('pop'))
meltedList = reshape2::melt(lapply(sampleCounts$freq,function(x){c(1:x)}))
dfZoox$barPlotOrder = meltedList$value
dfZoox = dfZoox[c(1,ncol(dfZoox),2:(ncol(dfZoox)-1))]
zDat = melt(dfZoox, id.vars = c("sample", "pop", "barPlotOrder"), variable.name = "Symbiont", value.name = "Fraction")
# colors
colPalZoox = brewer.pal(4, "BrBG")
names(colPalZoox) = levels(zDat$Symbiont)
# plotting
colPalZoox = c("#247EA3", "#FFBF46", "#6A9FA1", "Purple3")
flPal = paletteer_d("rcartocolor::Sunset")[c(7, 6, 4, 3, 1)]
popAnno = data.frame(x1 = c(0.5, 0.5, 0.5, 0.5, 0.5), x2 = c(30.5, 15.5, 13.5, 14.5, 15.5),
y1 = -0.065, y2 = -0.065, pop = c("St. Lucie Reef", "Jupiter", "West Palm Beach", "Boynton Beach", "Pompano/LBTS"))
popAnno$pop = factor(popAnno$pop)
popAnno$pop = factor(popAnno$pop, levels = levels(popAnno$pop)[c(4, 2, 5, 1, 3)])
dfZoox = zDat %>% left_join(popAnno, by = "pop")
zooxSNPA = ggplot(data = dfZoox, aes(x = barPlotOrder, y = Fraction, fill = Symbiont, order = barPlotOrder)) +
geom_bar(stat = "identity", position = "stack", colour = "grey25", width = 1, size = 0.2) +
xlab("Population") +
scale_x_discrete(expand = c(0.001, 0.001)) +
scale_y_continuous(expand = c(-.001, -0.001)) +
scale_color_manual(values = flPal) +
geom_segment(aes(x = x1, xend = x2, y = y1, yend = y2, color = pop), size = 7) +
scale_fill_manual(values = colPalZoox, name = "Symbiodiniaceae genus") +
coord_cartesian(ylim = c(-.01,1.01), clip = "off") +
facet_grid(~ pop, drop = TRUE, space = "free", scales = "free", switch = "both") +
guides(color = "none") +
theme_bw()
zooxSNP = zooxSNPA + theme(plot.title = element_text(),
panel.grid = element_blank(),
panel.background = element_rect(fill = "gray25", colour = "grey25"),
panel.border = element_rect(fill = NA, color = "black", size = 1, linetype = "solid"),
panel.spacing.x = grid:::unit(0.05, "lines"),
panel.spacing.y = grid:::unit(0.05, "lines"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title = element_blank(),
strip.background.x = element_blank(),
strip.background.y = element_blank(),
strip.text = element_text(size = 10),
strip.text.y.left = element_text(size = 10, angle = 90),
strip.text.x.bottom = element_text(vjust = -.05, color = "black"),
legend.key.size = unit(0.75, "line"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
legend.key = element_blank(),
legend.position = "bottom")
# zooxSNP figure with clones
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/zooxSNP.png", plot = zooxSNP, width = 20, height = 8, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/zooxSNP.eps", plot = zooxSNP, width = 20, height = 8, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/zooxSNP.tiff", plot = zooxSNP, width = 20, height = 8, units = "cm", dpi = 300)
#read in sample metadata without clones
popData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "pop" = region_short)
#treat populations as a factor & order them North-->South
popData$pop = factor(popData$pop)
popData$pop = factor(popData$pop, levels = levels(popData$pop)[c(4, 2, 5, 1, 3)])
#read in zoox reads data with clones incl, technical replicates removed
#changed 28-1 to 28-2 to match metadata, other 28- reps were missing, same for 77-1 to 77-3
zoox = read.delim("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/zooxReads_withoutclonesortechreps", header = FALSE, check.names = FALSE)
head(zoox)
zoox$V2[is.na(zoox$V2)] <- as.character(zoox$V1[is.na(zoox$V2)])
zoox$V1 = gsub("P.*", "chr", zoox$V1)
zoox$V2 = gsub(".trim.*", "", zoox$V2)
zoox = zoox %>% filter(zoox$V1 != "*")
zooxLst = split(zoox$V2, as.integer(gl(length(zoox$V2), 20, length(zoox$V2))))
zooxMaps = NULL
for(i in zooxLst){
zooxMaps = rbind(zooxMaps, data.frame(t(i)))
}
colnames(zooxMaps) = c("sample", zoox$V1[c(2:20)])
for(i in c(2:20)){
zooxMaps[,i] = as.numeric(zooxMaps[,i])
}
str(zooxMaps)
zooxMaps$Symbiodinium = rowSums(zooxMaps[2:6])
zooxMaps$Breviolum = rowSums(zooxMaps[7:10])
zooxMaps$Cladocopium = rowSums(zooxMaps[11:16])
zooxMaps$Durusdinium = rowSums(zooxMaps[17:20])
zooxMaps = zooxMaps[,c(1, 21:24)]
zooxProp = zooxMaps
zooxProp$sum = apply(zooxProp[, c(2:length(zooxProp[1,]))], 1, function(x) {
sum(x, na.rm = T)
})
#turn them into proportions
zooxProp = cbind(zooxProp$sample, (zooxProp[, c(2:(ncol(zooxProp)-1))]
/ zooxProp$sum))
colnames(zooxProp)[1] = "sample"
head(zooxProp)
apply(zooxProp[, c(2:(ncol(zooxProp)))], 1, function(x) {
sum(x, na.rm = T)
})
#bind it to metadata
dfZoox = popData %>% left_join(zooxProp)
dfZoox$pop = as.factor(dfZoox$pop)
# setting up for plotting
dfZoox = dfZoox[order(dfZoox$pop),]
sampleCounts = plyr::count(dfZoox, c('pop'))
meltedList = reshape2::melt(lapply(sampleCounts$freq,function(x){c(1:x)}))
dfZoox$barPlotOrder = meltedList$value
dfZoox = dfZoox[c(1,ncol(dfZoox),2:(ncol(dfZoox)-1))]
zDat = melt(dfZoox, id.vars = c("sample", "pop", "barPlotOrder"), variable.name = "Symbiont", value.name = "Fraction")
colPalZoox = brewer.pal(4, "BrBG")
names(colPalZoox) = levels(zDat$Symbiont)
# plotting
colPalZoox = c("#247EA3", "#FFBF46", "#6A9FA1", "Purple3")
flPal = paletteer_d("rcartocolor::Sunset")[c(7, 6, 4, 3, 1)]
popAnno = data.frame(x1 = c(0.5, 0.5, 0.5, 0.5, 0.5), x2 = c(3.5, 10.5, 7.5, 10.5, 6.5),
y1 = -0.065, y2 = -0.065, pop = c("SLR", "Jupiter", "West Palm Beach", "Boynton Beach", "Pompano/LBTS"))
popAnno$pop = factor(popAnno$pop)
popAnno$pop = factor(popAnno$pop, levels = levels(popAnno$pop)[c(4, 2, 5, 1, 3)])
dfZoox = zDat %>% left_join(popAnno, by = "pop")
zooxSNPA = ggplot(data = dfZoox, aes(x = barPlotOrder, y = Fraction, fill = Symbiont, order = barPlotOrder)) +
geom_bar(stat = "identity", position = "stack", colour = "grey25", width = 1, size = 0.2) +
xlab("Population") +
scale_x_discrete(expand = c(0.001, 0.001)) +
scale_y_continuous(expand = c(-.001, -0.001)) +
scale_color_manual(values = flPal) +
geom_segment(aes(x = x1, xend = x2, y = y1, yend = y2, color = pop), size = 7) +
scale_fill_manual(values = colPalZoox, name = "Symbiodiniaceae genus") +
coord_cartesian(ylim = c(-.01,1.01), clip = "off") +
facet_grid(~ pop, drop = TRUE, space = "free", scales = "free", switch = "both") +
guides(color = "none") +
theme_bw()
zooxSNP = zooxSNPA + theme(plot.title = element_text(),
panel.grid = element_blank(),
panel.background = element_rect(fill = "gray25", colour = "grey25"),
panel.border = element_rect(fill = NA, color = "black", size = 1, linetype = "solid"),
panel.spacing.x = grid:::unit(0.05, "lines"),
panel.spacing.y = grid:::unit(0.05, "lines"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title = element_blank(),
strip.background.x = element_blank(),
strip.background.y = element_blank(),
strip.text = element_text(size = 10),
strip.text.y.left = element_text(size = 10, angle = 90),
strip.text.x.bottom = element_text(vjust = -.05, color = "black"),
legend.key.size = unit(0.75, "line"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
legend.key = element_blank(),
legend.position = "bottom")
# zooxSNP without clones
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/zooxSNP_noclones.png", plot = zooxSNP, width = 20, height = 8, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/zooxSNP_noclones.eps", plot = zooxSNP, width = 20, height = 8, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/zooxSNP_noclones.tiff", plot = zooxSNP, width = 20, height = 8, units = "cm", dpi = 300)
getRversion()
amovaPerc
#packages: vcfR, adegenet, poppr
#reading in bcf file
pastVcf = read.vcfR("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.bcf", verbose = TRUE)
#convert to genlight files for poppr
pastGenlightPopulation = vcfR2genlight(pastVcf, n.cores = 1)
#taking metadata file, without technical replicates & clones, reads in population data for each sample
popData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "pop" = region)
#setting up amova
strata(pastGenlightPopulation) = data.frame(popData)
setPop(pastGenlightPopulation) = ~pop
#Runs AMOVA looking at samples by region
amova <- poppr.amova(pastGenlightPopulation, ~pop)
amova
set.seed(694)
amovasignif <- randtest(amova, nrepet = 99)
amovasignif$names
amovasignif$obs
amovasignif$pvalue
amovaPerc = paste(round(amova$componentsofcovariance$`%`[1], 2), "%",sep="")
amovaP = amovasignif$pvalue[3]
amovaPerc
amovaP
View(popData)
knitr::opts_chunk$set(echo = TRUE)
# setup rmarkdown environment first
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.align = 'left')
# Read in population data
popData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "Region" = region)
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis", "ropensci/rnaturalearthhires")
pacman::p_load("cowplot", "ggrepel", "ggspatial", "maps", "paletteer", "patchwork", "rgdal", "rnaturalearth", "sf", "tidyverse", "reshape2", "MCMC.OTU", "pairwiseAdonis", "RColorBrewer", "Redmonder", "flextable", "lubridate", "officer", "adegenet", "dendextend", "gdata", "ggdendro", "hierfstat", "Imap", "kableExtra", "poppr", "StAMPP", "vcfR", "vegan", "boa", "measurements", "magick", "rgeos", "magrittr", "ggplot2")
# Read in population data
popData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "Region" = region)
popData$a = c(0:35)
popData$Region = factor(popData$Region)
popData$Region = factor(popData$Region, levels = levels(popData$Region)[c(4, 2, 5, 1, 3)])
hetAll = read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/hetAllSites")
colnames(hetAll) = c("sample", "All")
hetAll$sample = popData$sample
HetSNPs = read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/HetSNPs")
colnames(HetSNPs) = c("sample", "SNPs")
HetSNPs$sample = popData$sample
pastBreed = read.delim("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/newres")
pastBreed2 = pastBreed %>% group_by(a) %>% select("inbreed" = Fa)
pastBreed3 = pastBreed %>% group_by(b) %>% select("inbreed" = Fb)
pastBreed = bind_rows(pastBreed2, pastBreed3) %>% group_by(a) %>% summarize("inbreed" = mean(inbreed))
pastRelate = read.delim("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/newres")
pastRelate2 = pastRelate %>% group_by(a, b) %>% select("relate" = rab)
pastRelate2 = pastRelate2 %>% left_join(popData, by = "a") %>% left_join(popData, by = c("b" = "a"), suffix = c(".a", ".b"))
pastRelate = pastRelate2 %>% filter(Region.a == Region.b) %>% rename(Region = Region.a)
het = left_join(popData, hetAll, by = "sample") %>% left_join(HetSNPs, by = "sample") %>% mutate("inbreed" = pastBreed$inbreed)
hetStats = het %>% group_by(Region) %>% dplyr::summarise(N = n(), meanAll = mean(All), sdAll = sd(All), seAll = sd(All)/sqrt(N), meanSnps = mean(SNPs), sdSnps = sd(SNPs), seSnps = sd(SNPs)/sqrt(N), meanInbreed = mean(inbreed), sdInbreed = sd(inbreed), seInbreed = sd(inbreed)/sqrt(N))
min(hetStats$meanAll, na.rm = TRUE)
max(hetStats$meanAll, na.rm = TRUE)
min(hetStats$meanSnps, na.rm = TRUE)
max(hetStats$meanSnps, na.rm = TRUE)
hetAllLm = lm(data = het, All~Region)
hetSnpLm = lm(data = het, SNPs~Region)
inbreedLm = lm(data = het, inbreed~Region)
relateLm = lm(data = pastRelate, relate~Region)
hetAllANOVA = summary(aov(hetAllLm))
hetAllANOVA
hetSnpANOVA = summary(aov(hetSnpLm))
hetSnpANOVA
inbreedANOVA = summary(aov(inbreedLm))
inbreedANOVA
relateANOVA = summary(aov(relateLm))
relateANOVA
hetTab = hetStats
##may want to format this table for manuscript if it's interesting
hetAllANOVA
View(het)
View(hetAll)
View(hetStats)
?tukey
Tukey
hetAllANOVA
hetSnpANOVA
inbreedANOVA
relateANOVA
hetAllpwc <- het %>% tukey_hsd(All ~ Region)
?TukeyHSD
library(stats)
hetAllpwc <- het %>% tukey_hsd(All ~ Region)
hetAllpwc <- het %>% Tukey_HSD(All ~ Region)
hetAllpwc <- het %>% TukeyHSD(All ~ Region)
library(rstatix)
install.packages("rstatix")
library(rstatix)
hetAllpwc <- het %>% tukey_hsd(All ~ Region)
hetAllpwc
hetAllpwc = het %>% tukey_hsd(All ~ Region)
hetAllpwc
hetAllpwc <- het %>% tukey_hsd(All ~ Region)
head(hetAllpwc)
print(hetAllpwc)
hetAllpwc
hetSnppwc <- het %>% tukey_hsd(SNPs ~ Region)
hetSnppwc
hetAllpwc
hetSnppwc
inbreedpwc <- het %>% tukey_hsd(inbreed ~ Region)
inbreedpwc
relatepwc <- het %>% tukey_hsd(relate~Region)
relatepwc <- pastRelate %>% tukey_hsd(relate~Region)
View(pastRelate)
relatepwc <- pastRelate %>% tukey_hsd(relate ~ Region)
?tukey_hsd
View(pastRelate)
View(hetAll)
View(het)
#can't get this to work
relatepwc <- tukey_hsd(relateANOVA)
#need to run differently, pastRelate file has more rows?
relatepwc <- pastRelate %>% tukey_hsd(relate ~ Region)
#need to run differently, pastRelate file has more rows?
relatepwc <- tukey_hsd(pastRelate, relate ~ Region)
levels(pastRelate$Region)
is.factor(pastRelate$Region)
#need to run differently, pastRelate file has more rows?
relatepwc <- tukey_hsd(relateANOVA, )
#need to run differently, pastRelate file has more rows?
relatepwc <- tukey_hsd(relateANOVA)
#need to run differently, pastRelate file has more rows?
aov(relate ~ Region, data = pastRelate) %>% tukey_hsd()
#need to run differently, pastRelate file has more rows?
relatepwc<- aov(relate ~ Region, data = pastRelate) %>% tukey_hsd()
relatepwc
inbreedpwc_test <- aov(inbreed ~ Region, data = het) %>% tukey_hsd()
inbreedpwc_test
inbreedpwc
relatepwc<- aov(relate ~ Region, data = pastRelate) %>% tukey_hsd()
relatepwc
