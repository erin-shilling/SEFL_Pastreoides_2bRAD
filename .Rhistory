theme_bw() +
hetTheme
hetPlots = ((depLin | hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
popData = read.csv("data_files/poritesastreoidesMetaData_NOADMIX_notechreps.csv") %>% select("sample" = tube_id, "Population" = lineage, "Depth" = "collection_depth_m")
depthAov = aov(Depth ~ Population, data = popData)
summary(depthAov)
TukeyHSD(depthAov)
#packages: tidyverse, rstatix
#Read in population data
popData = read.csv("data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "Population" = lineage)
popData$a = c(0:35)
popData$Population = factor(popData$Population)
#across all RAD loci, SNPs and not SNPs
#all loci within lineages, then thinned out to only ones present across all 3 sites
hetAll = read.table("data_files/pastHet")
colnames(hetAll) = c("sample", "All")
hetAll$sample = popData$sample
#remove admixed samples
hetAll <- hetAll[-c(3, 9, 15, 30), ]
pastBreed = read.delim("data_files/filtRelate")
pastBreed2 = pastBreed %>% group_by(a) %>% select("inbreed" = Fa)
pastBreed3 = pastBreed %>% group_by(b) %>% select("inbreed" = Fb)
pastBreed = bind_rows(pastBreed2, pastBreed3) %>% group_by(a) %>% summarise("inbreed" = mean(inbreed))
#removing admixed samples
pastBreed <- pastBreed[-c(3, 9, 15, 30), ]
#Still look kind of weird, talk to Ryan
pastRelate = read.delim("data_files/filtRelate")
pastRelate2 = pastRelate %>% group_by(a, b) %>% select("relate" = rab)
pastRelate2 = pastRelate2 %>% left_join(popData, by = "a") %>% left_join(popData, by = c("b" = "a"), suffix = c(".a", ".b"))
pastRelate = pastRelate2 %>% filter(Population.a == Population.b) %>% rename(Population = Population.a)
#now that have removed admixed samples from above dataframes, import new popData with admixed samples removed
popData = read.csv("data_files/poritesastreoidesMetaData_clonesremoved_NOADMIX.csv") %>% select("sample" = tube_id, "Population" = lineage)
het = left_join(popData, hetAll, by = "sample") %>% mutate("inbreed" = pastBreed$inbreed)
hetStats = het %>% group_by() %>% dplyr::summarise(N = n(), meanAll = mean(All), sdAll = sd(All), seAll = sd(All)/sqrt(N), meanInbreed = mean(inbreed), sdInbreed = sd(inbreed), seInbreed = sd(inbreed)/sqrt(N))
min(hetStats$meanAll, na.rm = TRUE)
max(hetStats$meanAll, na.rm = TRUE)
hetAllLm = lm(data = het, All~Population)
inbreedLm = lm(data = het, inbreed~Population)
#relateLm = lm(data = pastRelate, relate~Population)
#summarizing outputs
hetAllANOVA = summary(aov(hetAllLm))
hetAllANOVA
hetAllpwc <- het %>% tukey_hsd(All~Population)
hetAllpwc
#Green different from purple & pink, but purple & pink not diff from each other
#majority of non-clonal things were green, makes sense that across all loci it has higher hetero
inbreedANOVA = summary(aov(inbreedLm))
inbreedANOVA
#not significant
#some values still very high, unsure about accuracy
#relateANOVA = summary(aov(relateLm))
#relateANOVA
#relatepwc<- aov(relate ~ Population, data = pastRelate) %>% tukey_hsd()
#relatepwc
#All significantly different from each other
hetTab = hetStats
popData_depth = read.csv("data_files/poritesastreoidesMetaData_NOADMIX_notechreps.csv") %>% select("sample" = tube_id, "Population" = lineage, "Depth" = "collection_depth_m")
depthAov = aov(Depth ~ Population, data = popData_depth)
summary(depthAov)
TukeyHSD(depthAov)
hetMelt = melt(het, id.vars = c("sample", "Population"), variable.name = "type", value.name = "heterozygosity")
kColPal3 = c("#AFDE62", "#FF8C8D", "mediumpurple3")
hetTheme = theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 10),
axis.ticks.y = element_line(color = "black"),
legend.position = "right",
legend.key.size = unit(0.5, 'cm'),
panel.border = element_rect(color = "black"),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
dodge <- position_dodge(width = 1)
depth_comp <- list(c("Pink", "Green"), c("Purple", "Pink"))
depLin = ggplot(data = popData_depth, aes(x = Population, y = Depth, fill = Population)) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Depth (m)") +
scale_y_reverse() +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = depth_comp, label = "p.signif", label.y = c(-2))
hetAll_comp <- list( c("Green", "Pink"), c("Green", "Purple"))
hetPlotAll = ggplot(data = subset(hetMelt, subset = hetMelt$type == "All"), aes(x = Population, y = heterozygosity, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Heterozygosity (all loci)") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = hetAll_comp, label = "p.signif", label.y = c(0.00155))
#inbreeding
inbreedingPlot = ggplot(data = het, aes(x = Population, y = inbreed, fill = Population)) +
geom_point(aes(color = Population), shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
coord_cartesian(ylim = c(0, 0.12)) +
xlab("Lineage") +
ylab("Inbreeding coefficient") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme
hetPlots = ((depLin | hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
popData_depth = read.csv("data_files/poritesastreoidesMetaData_NOADMIX_notechreps.csv") %>% select("sample" = tube_id, "Population" = lineage, "Depth" = "collection_depth_m")
depthAov = aov(Depth ~ Population, data = popData_depth)
summary(depthAov)
TukeyHSD(depthAov)
popData = read.csv("data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "Population" = lineage)
popData$a = c(0:35)
popData$Population = factor(popData$Population)
#across all RAD loci, SNPs and not SNPs
#all loci within lineages, then thinned out to only ones present across all 3 sites
hetAll = read.table("data_files/pastHet")
colnames(hetAll) = c("sample", "All")
hetAll$sample = popData$sample
#remove admixed samples
hetAll <- hetAll[-c(3, 9, 15, 30), ]
pastBreed = read.delim("data_files/filtRelate")
pastBreed2 = pastBreed %>% group_by(a) %>% select("inbreed" = Fa)
pastBreed3 = pastBreed %>% group_by(b) %>% select("inbreed" = Fb)
pastBreed = bind_rows(pastBreed2, pastBreed3) %>% group_by(a) %>% summarise("inbreed" = mean(inbreed))
#removing admixed samples
pastBreed <- pastBreed[-c(3, 9, 15, 30), ]
popData = read.csv("data_files/poritesastreoidesMetaData_clonesremoved_NOADMIX.csv") %>% select("sample" = tube_id, "Population" = lineage)
het = left_join(popData, hetAll, by = "sample") %>% mutate("inbreed" = pastBreed$inbreed)
hetStats = het %>% group_by() %>% dplyr::summarise(N = n(), meanAll = mean(All), sdAll = sd(All), seAll = sd(All)/sqrt(N), meanInbreed = mean(inbreed), sdInbreed = sd(inbreed), seInbreed = sd(inbreed)/sqrt(N))
min(hetStats$meanAll, na.rm = TRUE)
max(hetStats$meanAll, na.rm = TRUE)
hetAllLm = lm(data = het, All~Population)
inbreedLm = lm(data = het, inbreed~Population)
hetAllANOVA = summary(aov(hetAllLm))
hetAllANOVA
hetAllpwc <- het %>% tukey_hsd(All~Population)
hetAllpwc
inbreedANOVA = summary(aov(inbreedLm))
inbreedANOVA
#not significant
hetTab = hetStats
hetMelt = melt(het, id.vars = c("sample", "Population"), variable.name = "type", value.name = "heterozygosity")
kColPal3 = c("#AFDE62", "#FF8C8D", "mediumpurple3")
hetTheme = theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 10),
axis.ticks.y = element_line(color = "black"),
legend.position = "right",
legend.key.size = unit(0.5, 'cm'),
panel.border = element_rect(color = "black"),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
dodge <- position_dodge(width = 1)
#depth
depth_comp <- list(c("Pink", "Green"), c("Purple", "Pink"))
depLin = ggplot(data = popData_depth, aes(x = Population, y = Depth, fill = Population)) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Depth (m)") +
scale_y_reverse() +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = depth_comp, label = "p.signif", label.y = c(-2))
#heterzygosity across all loci
hetAll_comp <- list( c("Green", "Pink"), c("Green", "Purple"))
hetPlotAll = ggplot(data = subset(hetMelt, subset = hetMelt$type == "All"), aes(x = Population, y = heterozygosity, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Heterozygosity (all loci)") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = hetAll_comp, label = "p.signif", label.y = c(0.00155))
#inbreeding
inbreedingPlot = ggplot(data = het, aes(x = Population, y = inbreed, fill = Population)) +
geom_point(aes(color = Population), shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
coord_cartesian(ylim = c(0, 0.12)) +
xlab("Lineage") +
ylab("Inbreeding coefficient") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme
hetPlots = ((depLin | hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
depLin = ggplot(data = popData_depth, aes(x = Population, y = Depth, fill = Population)) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Depth (m)") +
scale_y_reverse() +
scale_fill_manual(values = kColPal3) +
#    scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = depth_comp, label = "p.signif", label.y = c(-2))
depLin
depLin = ggplot(data = popData_depth, aes(x = Population, y = Depth, fill = Population)) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Depth (m)") +
scale_y_reverse() +
#    scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = depth_comp, label = "p.signif", label.y = c(-2))
depLin
depLin = ggplot(data = popData_depth, aes(x = Population, y = Depth, fill = Population)) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Depth (m)") +
scale_y_reverse() +
scale_fill_manual(values = kColPal3) +
#    scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = depth_comp, label = "p.signif", label.y = c(-2))
hetAll_comp <- list( c("Green", "Pink"), c("Green", "Purple"))
hetPlotAll = ggplot(data = subset(hetMelt, subset = hetMelt$type == "All"), aes(x = Population, y = heterozygosity, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Heterozygosity (all loci)") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = hetAll_comp, label = "p.signif", label.y = c(0.00155))
#inbreeding
inbreedingPlot = ggplot(data = het, aes(x = Population, y = inbreed, fill = Population)) +
geom_point(aes(color = Population), shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
coord_cartesian(ylim = c(0, 0.12)) +
xlab("Lineage") +
ylab("Inbreeding coefficient") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme
hetPlots = ((depLin | hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
hetPlots
ggsave("figures/heterozygosityPlot_pval.png", plot = hetPlots, width = 22, height = 10, units = "cm", dpi = 300)
knitr::opts_chunk$set(echo = TRUE)
# setup rmarkdown environment first
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.align = 'left')
options(timeout=600)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis", "ropensci/rnaturalearthhires")
pacman::p_load("cowplot", "ggrepel", "ggspatial", "maps", "paletteer", "patchwork", "rgdal", "rnaturalearth", "sf", "tidyverse", "reshape2", "MCMC.OTU", "pairwiseAdonis", "RColorBrewer", "Redmonder", "flextable", "lubridate", "officer", "adegenet", "dendextend", "gdata", "ggdendro", "hierfstat", "Imap", "kableExtra", "poppr", "StAMPP", "vcfR", "vegan", "boa", "measurements", "magick", "rgeos", "magrittr", "ggplot2", "rstatix", "ggpubr", "Hmisc")
#using data with clones included, but extra technical replicates removed
popData_depth = read.csv("data_files/poritesastreoidesMetaData_NOADMIX_notechreps.csv") %>% select("sample" = tube_id, "Population" = lineage, "Depth" = "collection_depth_m")
depthAov = aov(Depth ~ Population, data = popData_depth)
summary(depthAov)
#            Df   Sum Sq  Mean Sq   F value   Pr(>F)
#Population   2   925     462.6     10.14     0.000126 ***
#Residuals   75   3421    45.6
TukeyHSD(depthAov)
#$Population
#                  diff        lwr       upr     p adj
#Pink-Green    10.13446   4.030675 16.238253 0.0004748
#Purple-Green  -2.97000  -7.795469  1.855469 0.3102524
#Purple-Pink  -13.10446 -20.261791 -5.947137 0.0001124
#packages: tidyverse, rstatix
#Read in population data
popData = read.csv("data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "Population" = lineage)
popData$a = c(0:35)
popData$Population = factor(popData$Population)
#across all RAD loci, SNPs and not SNPs
#all loci within lineages, then thinned out to only ones present across all 3 sites
hetAll = read.table("data_files/pastHet")
colnames(hetAll) = c("sample", "All")
hetAll$sample = popData$sample
#remove admixed samples
hetAll <- hetAll[-c(3, 9, 15, 30), ]
pastBreed = read.delim("data_files/filtRelate")
pastBreed2 = pastBreed %>% group_by(a) %>% select("inbreed" = Fa)
pastBreed3 = pastBreed %>% group_by(b) %>% select("inbreed" = Fb)
pastBreed = bind_rows(pastBreed2, pastBreed3) %>% group_by(a) %>% summarise("inbreed" = mean(inbreed))
#removing admixed samples
pastBreed <- pastBreed[-c(3, 9, 15, 30), ]
#now that have removed admixed samples from above dataframes, import new popData with admixed samples removed
popData = read.csv("data_files/poritesastreoidesMetaData_clonesremoved_NOADMIX.csv") %>% select("sample" = tube_id, "Population" = lineage)
het = left_join(popData, hetAll, by = "sample") %>% mutate("inbreed" = pastBreed$inbreed)
hetStats = het %>% group_by() %>% dplyr::summarise(N = n(), meanAll = mean(All), sdAll = sd(All), seAll = sd(All)/sqrt(N), meanInbreed = mean(inbreed), sdInbreed = sd(inbreed), seInbreed = sd(inbreed)/sqrt(N))
min(hetStats$meanAll, na.rm = TRUE)
max(hetStats$meanAll, na.rm = TRUE)
hetAllLm = lm(data = het, All~Population)
inbreedLm = lm(data = het, inbreed~Population)
#summarizing ou
hetAllANOVA = summary(aov(hetAllLm))
hetAllANOVA
hetAllpwc <- het %>% tukey_hsd(All~Population)
hetAllpwc
#Green different from purple & pink, but purple & pink not diff from each other
#majority of non-clonal things were green, makes sense that across all loci it has higher hetero
inbreedANOVA = summary(aov(inbreedLm))
inbreedANOVA
#not significant
hetTab = hetStats
hetMelt = melt(het, id.vars = c("sample", "Population"), variable.name = "type", value.name = "heterozygosity")
kColPal3 = c("#AFDE62", "#FF8C8D", "mediumpurple3")
hetTheme = theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 10),
axis.ticks.y = element_line(color = "black"),
legend.position = "right",
legend.key.size = unit(0.5, 'cm'),
panel.border = element_rect(color = "black"),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
dodge <- position_dodge(width = 1)
#depth
depth_comp <- list(c("Pink", "Green"), c("Purple", "Pink"))
depLin = ggplot(data = popData_depth, aes(x = Population, y = Depth, fill = Population)) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Depth (m)") +
scale_y_reverse() +
scale_fill_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = depth_comp, label = "p.signif", label.y = c(-2.5, 5))
depLin
depLin = ggplot(data = popData_depth, aes(x = Population, y = Depth, fill = Population)) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Depth (m)") +
scale_y_reverse() +
scale_fill_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = depth_comp, label = "p.signif", label.y = c(-5, -2.5))
depLin
depLin = ggplot(data = popData_depth, aes(x = Population, y = Depth, fill = Population)) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Depth (m)") +
scale_y_reverse() +
scale_fill_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = depth_comp, label = "p.signif", label.y = c(-2.5, -5))
depLin
depLin = ggplot(data = popData_depth, aes(x = Population, y = Depth, fill = Population)) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Depth (m)") +
coord_cartesian(ylim = c(0, 25)) +
scale_y_reverse() +
scale_fill_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = depth_comp, label = "p.signif", label.y = c(-2.5, -5))
depLin
depLin = ggplot(data = popData_depth, aes(x = Population, y = Depth, fill = Population)) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Depth (m)") +
coord_cartesian(ylim = c(0, -25)) +
scale_y_reverse() +
scale_fill_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = depth_comp, label = "p.signif", label.y = c(-2.5, -5))
depLin
depLin = ggplot(data = popData_depth, aes(x = Population, y = Depth, fill = Population)) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Depth (m)") +
coord_cartesian(ymin = c(0)) +
scale_y_reverse() +
scale_fill_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = depth_comp, label = "p.signif", label.y = c(-2.5, -5))
depLin = ggplot(data = popData_depth, aes(x = Population, y = Depth, fill = Population)) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Depth (m)") +
scale_y_reverse() +
scale_fill_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = depth_comp, label = "p.signif", label.y = c(-2.5, -5))
depLin
depLin = ggplot(data = popData_depth, aes(x = Population, y = Depth, fill = Population)) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Depth (m)") +
scale_y_reverse() +
scale_fill_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = depth_comp, label = "p.signif", label.y = c(-3, -5))
depLin
depLin = ggplot(data = popData_depth, aes(x = Population, y = Depth, fill = Population)) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Depth (m)") +
scale_y_reverse() +
scale_fill_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = depth_comp, label = "p.signif", label.y = c(-2, -5))
depLin
#heterzygosity across all loci
hetAll_comp <- list( c("Green", "Pink"), c("Green", "Purple"))
hetPlotAll = ggplot(data = subset(hetMelt, subset = hetMelt$type == "All"), aes(x = Population, y = heterozygosity, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Heterozygosity (all loci)") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = hetAll_comp, label = "p.signif", label.y = c(0.00155, 0.00125))
hetPlotAll
inbreedingPlot = ggplot(data = het, aes(x = Population, y = inbreed, fill = Population)) +
geom_point(aes(color = Population), shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
coord_cartesian(ylim = c(0, 0.12)) +
xlab("Lineage") +
ylab("Inbreeding coefficient") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme
hetPlots = ((depLin | hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
hetPlots
ggsave("figures/heterozygosityPlot_pval.png", plot = hetPlots, width = 22, height = 10, units = "cm", dpi = 300)
