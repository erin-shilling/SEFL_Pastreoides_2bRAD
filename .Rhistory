theme_bw()
pastPcoaPlot = pastPcoaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pastPcoaPlot
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.png", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.pdf", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.tiff", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
# packages: tidyverse, paletteer, vegan if use vectors
#calculating depth & latitude vectors
pastMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat"))
pastMds = cmdscale(pastMa, eig = TRUE, x.ret = TRUE)
meta = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv")
env=dplyr::select(meta, collection_depth_m, site_lat)
#env=cbind(env,envData)
envDrivers=envfit(pastMds, env, permutations = 999)
envDriversScores <- as.data.frame(scores(envDrivers, display = "vectors"))
#extracts relevant scores from envifit
A <- as.list(envDrivers$vectors)
pvals<-as.data.frame(A$pvals)
arrows<-as.data.frame(A$arrows*sqrt(A$r))
C<-cbind(arrows, pvals)
#                         Dim1        Dim2 A$pvals
#collection_depth_m -0.5893338 -0.02474275   0.004
#site_lat           -0.5456895  0.20714215   0.004
#$r
#collection_depth_m           site_lat
#         0.3479266          0.3406849
#Cred<-subset(C,pvals<0.01) #Filters species with highly significant loadings
Cred <- cbind(C, Drivers = rownames(C))
Cred$Drivers <- as.character(Cred$Drivers)
Cred["popDepth", "Drivers"] <- "Depth"
Cred["lat", "Drivers"] <- "Latitude"
#remove from here if keep vectors
#pastMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat"))
#pastMds = cmdscale(pastMa, eig = TRUE, x.ret = TRUE)
# Determine percent variation captured on each axis
# Calculate the eigenvalues so later we can figure out % variation shown on each Principal Coordinate
pastPcoaVar = round(pastMds$eig/sum(pastMds$eig)*100, 1)
head(pastPcoaVar)
# Format data to plot
pastPcoaValues = pastMds$points
head(pastPcoaValues)
# 2-column tab-delimited table of individual assignments to populations; must be in the same order as samples in the bam list or vcf file.
pastI2P = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "pop" = region)
row.names(pastI2P) = pastI2P[,1]
pastPcoaValues=cbind(pastI2P, pastPcoaValues)
pastPcoaValues =as.data.frame(pastPcoaValues, sample = rownames(pastPcoaValues))
colnames(pastPcoaValues)[c(3,4)] = c("PCo1", "PCo2")
head(pastPcoaValues)
pastPCoA = merge(pastPcoaValues, aggregate(cbind(mean.x=PCo1,mean.y=PCo2)~pop, pastPcoaValues, mean), by="pop")
pastPCoA$pop = factor(pastPCoA$pop)
pastPCoA$pop = factor(pastPCoA$pop, levels(pastPCoA$pop)[c(4, 2, 5, 1, 3)])
flPal = paletteer_d("rcartocolor::Sunset")[c(7, 6, 4, 3, 1)]
pastPcoaPlotA = ggplot(pastPCoA, aes(x = PCo1, y = PCo2, color = pop, fill = pop)) +
geom_segment(data = Cred, aes(x = 0, xend = Dim1*0.348, y = 0,
yend = Dim2*0.28), arrow = arrow(length = unit(0.4, "cm")), color = "black", size=1, inherit.aes = FALSE) + # adds vectors
geom_text(data = Cred, aes(x = Dim1+0.3, y = Dim2, label = Drivers), size = 2, inherit.aes = FALSE)+ # adds labels to vectors
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
#ellipses
stat_ellipse(data = pastPCoA, type = "t", geom = "polygon", alpha = 0.1) +
#individuals indicated by small transparent circles
geom_point(aes(x = PCo1, y = PCo2), size = 3, alpha = 0.3, show.legend = FALSE) +
#population centroids indicated by large circles
geom_point(aes(x = mean.x, y = mean.y), size = 5, color = "black", shape = 21) +
annotate(geom = "text", x = 0.1, y = -0.25, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = flPal, guide = NULL) +
xlab(paste ("PCo 1 (", pastPcoaVar[1],"%)", sep = "")) + #Prints percent variation explained by first axis
ylab(paste ("PCo 2 (", pastPcoaVar[2],"%)", sep = "")) + #Prints percent variation explained by second axis
guides(shape = guide_legend(order = 2), linetype = guide_legend(override.aes = list(linetype = c(1,2), alpha = 1, color = "black", fill = NA), order = 3), fill = guide_legend(override.aes = list(shape = 22, size = 5, color = NA, alpha = NA), order = 1))+
theme_bw()
pastPcoaPlot = pastPcoaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pastPcoaPlot
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.png", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.pdf", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.tiff", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
# packages: tidyverse, paletteer, vegan if use vectors
#calculating depth & latitude vectors
pastMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat"))
pastMds = cmdscale(pastMa, eig = TRUE, x.ret = TRUE)
meta = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv")
env=dplyr::select(meta, collection_depth_m, site_lat)
#env=cbind(env,envData)
envDrivers=envfit(pastMds, env, permutations = 999)
envDriversScores <- as.data.frame(scores(envDrivers, display = "vectors"))
#extracts relevant scores from envifit
A <- as.list(envDrivers$vectors)
pvals<-as.data.frame(A$pvals)
arrows<-as.data.frame(A$arrows*sqrt(A$r))
C<-cbind(arrows, pvals)
#                         Dim1        Dim2 A$pvals
#collection_depth_m -0.5893338 -0.02474275   0.004
#site_lat           -0.5456895  0.20714215   0.004
#$r
#collection_depth_m           site_lat
#         0.3479266          0.3406849
#Cred<-subset(C,pvals<0.01) #Filters species with highly significant loadings
Cred <- cbind(C, Drivers = rownames(C))
Cred$Drivers <- as.character(Cred$Drivers)
Cred["popDepth", "Drivers"] <- "Depth"
Cred["lat", "Drivers"] <- "Latitude"
#remove from here if keep vectors
#pastMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat"))
#pastMds = cmdscale(pastMa, eig = TRUE, x.ret = TRUE)
# Determine percent variation captured on each axis
# Calculate the eigenvalues so later we can figure out % variation shown on each Principal Coordinate
pastPcoaVar = round(pastMds$eig/sum(pastMds$eig)*100, 1)
head(pastPcoaVar)
# Format data to plot
pastPcoaValues = pastMds$points
head(pastPcoaValues)
# 2-column tab-delimited table of individual assignments to populations; must be in the same order as samples in the bam list or vcf file.
pastI2P = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "pop" = region)
row.names(pastI2P) = pastI2P[,1]
pastPcoaValues=cbind(pastI2P, pastPcoaValues)
pastPcoaValues =as.data.frame(pastPcoaValues, sample = rownames(pastPcoaValues))
colnames(pastPcoaValues)[c(3,4)] = c("PCo1", "PCo2")
head(pastPcoaValues)
pastPCoA = merge(pastPcoaValues, aggregate(cbind(mean.x=PCo1,mean.y=PCo2)~pop, pastPcoaValues, mean), by="pop")
pastPCoA$pop = factor(pastPCoA$pop)
pastPCoA$pop = factor(pastPCoA$pop, levels(pastPCoA$pop)[c(4, 2, 5, 1, 3)])
flPal = paletteer_d("rcartocolor::Sunset")[c(7, 6, 4, 3, 1)]
pastPcoaPlotA = ggplot(pastPCoA, aes(x = PCo1, y = PCo2, color = pop, fill = pop)) +
geom_segment(data = Cred, aes(x = 0, xend = Dim1*0.348, y = 0,
yend = Dim2*0.28), arrow = arrow(length = unit(0.4, "cm")), color = "black", size=1, inherit.aes = FALSE) + # adds vectors
geom_text(data = Cred, aes(x = Dim1+0.4, y = Dim2, label = Drivers), size = 2, inherit.aes = FALSE)+ # adds labels to vectors
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
#ellipses
stat_ellipse(data = pastPCoA, type = "t", geom = "polygon", alpha = 0.1) +
#individuals indicated by small transparent circles
geom_point(aes(x = PCo1, y = PCo2), size = 3, alpha = 0.3, show.legend = FALSE) +
#population centroids indicated by large circles
geom_point(aes(x = mean.x, y = mean.y), size = 5, color = "black", shape = 21) +
annotate(geom = "text", x = 0.1, y = -0.25, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = flPal, guide = NULL) +
xlab(paste ("PCo 1 (", pastPcoaVar[1],"%)", sep = "")) + #Prints percent variation explained by first axis
ylab(paste ("PCo 2 (", pastPcoaVar[2],"%)", sep = "")) + #Prints percent variation explained by second axis
guides(shape = guide_legend(order = 2), linetype = guide_legend(override.aes = list(linetype = c(1,2), alpha = 1, color = "black", fill = NA), order = 3), fill = guide_legend(override.aes = list(shape = 22, size = 5, color = NA, alpha = NA), order = 1))+
theme_bw()
pastPcoaPlot = pastPcoaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pastPcoaPlot
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.png", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.pdf", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.tiff", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
# packages: tidyverse, paletteer, vegan if use vectors
#calculating depth & latitude vectors
pastMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat"))
pastMds = cmdscale(pastMa, eig = TRUE, x.ret = TRUE)
meta = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv")
env=dplyr::select(meta, collection_depth_m, site_lat)
#env=cbind(env,envData)
envDrivers=envfit(pastMds, env, permutations = 999)
envDriversScores <- as.data.frame(scores(envDrivers, display = "vectors"))
#extracts relevant scores from envifit
A <- as.list(envDrivers$vectors)
pvals<-as.data.frame(A$pvals)
arrows<-as.data.frame(A$arrows*sqrt(A$r))
C<-cbind(arrows, pvals)
#                         Dim1        Dim2 A$pvals
#collection_depth_m -0.5893338 -0.02474275   0.004
#site_lat           -0.5456895  0.20714215   0.004
#$r
#collection_depth_m           site_lat
#         0.3479266          0.3406849
#Cred<-subset(C,pvals<0.01) #Filters species with highly significant loadings
Cred <- cbind(C, Drivers = rownames(C))
Cred$Drivers <- as.character(Cred$Drivers)
Cred["popDepth", "Drivers"] <- "Depth"
Cred["lat", "Drivers"] <- "Latitude"
#remove from here if keep vectors
#pastMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat"))
#pastMds = cmdscale(pastMa, eig = TRUE, x.ret = TRUE)
# Determine percent variation captured on each axis
# Calculate the eigenvalues so later we can figure out % variation shown on each Principal Coordinate
pastPcoaVar = round(pastMds$eig/sum(pastMds$eig)*100, 1)
head(pastPcoaVar)
# Format data to plot
pastPcoaValues = pastMds$points
head(pastPcoaValues)
# 2-column tab-delimited table of individual assignments to populations; must be in the same order as samples in the bam list or vcf file.
pastI2P = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "pop" = region)
row.names(pastI2P) = pastI2P[,1]
pastPcoaValues=cbind(pastI2P, pastPcoaValues)
pastPcoaValues =as.data.frame(pastPcoaValues, sample = rownames(pastPcoaValues))
colnames(pastPcoaValues)[c(3,4)] = c("PCo1", "PCo2")
head(pastPcoaValues)
pastPCoA = merge(pastPcoaValues, aggregate(cbind(mean.x=PCo1,mean.y=PCo2)~pop, pastPcoaValues, mean), by="pop")
pastPCoA$pop = factor(pastPCoA$pop)
pastPCoA$pop = factor(pastPCoA$pop, levels(pastPCoA$pop)[c(4, 2, 5, 1, 3)])
flPal = paletteer_d("rcartocolor::Sunset")[c(7, 6, 4, 3, 1)]
pastPcoaPlotA = ggplot(pastPCoA, aes(x = PCo1, y = PCo2, color = pop, fill = pop)) +
geom_segment(data = Cred, aes(x = 0, xend = Dim1*0.348, y = 0,
yend = Dim2*0.28), arrow = arrow(length = unit(0.4, "cm")), color = "black", size=1, inherit.aes = FALSE) + # adds vectors
geom_text(data = Cred, aes(x = ((Dim1*0.348)+0.4), y = Dim2*0.28, label = Drivers), size = 2, inherit.aes = FALSE)+ # adds labels to vectors
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
#ellipses
stat_ellipse(data = pastPCoA, type = "t", geom = "polygon", alpha = 0.1) +
#individuals indicated by small transparent circles
geom_point(aes(x = PCo1, y = PCo2), size = 3, alpha = 0.3, show.legend = FALSE) +
#population centroids indicated by large circles
geom_point(aes(x = mean.x, y = mean.y), size = 5, color = "black", shape = 21) +
annotate(geom = "text", x = 0.1, y = -0.25, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = flPal, guide = NULL) +
xlab(paste ("PCo 1 (", pastPcoaVar[1],"%)", sep = "")) + #Prints percent variation explained by first axis
ylab(paste ("PCo 2 (", pastPcoaVar[2],"%)", sep = "")) + #Prints percent variation explained by second axis
guides(shape = guide_legend(order = 2), linetype = guide_legend(override.aes = list(linetype = c(1,2), alpha = 1, color = "black", fill = NA), order = 3), fill = guide_legend(override.aes = list(shape = 22, size = 5, color = NA, alpha = NA), order = 1))+
theme_bw()
pastPcoaPlot = pastPcoaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pastPcoaPlot
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.png", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.pdf", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.tiff", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
# packages: tidyverse, paletteer, vegan if use vectors
#calculating depth & latitude vectors
pastMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat"))
pastMds = cmdscale(pastMa, eig = TRUE, x.ret = TRUE)
meta = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv")
env=dplyr::select(meta, collection_depth_m, site_lat)
#env=cbind(env,envData)
envDrivers=envfit(pastMds, env, permutations = 999)
envDriversScores <- as.data.frame(scores(envDrivers, display = "vectors"))
#extracts relevant scores from envifit
A <- as.list(envDrivers$vectors)
pvals<-as.data.frame(A$pvals)
arrows<-as.data.frame(A$arrows*sqrt(A$r))
C<-cbind(arrows, pvals)
#                         Dim1        Dim2 A$pvals
#collection_depth_m -0.5893338 -0.02474275   0.004
#site_lat           -0.5456895  0.20714215   0.004
#$r
#collection_depth_m           site_lat
#         0.3479266          0.3406849
#Cred<-subset(C,pvals<0.01) #Filters species with highly significant loadings
Cred <- cbind(C, Drivers = rownames(C))
Cred$Drivers <- as.character(Cred$Drivers)
Cred["popDepth", "Drivers"] <- "Depth"
Cred["lat", "Drivers"] <- "Latitude"
#remove from here if keep vectors
#pastMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat"))
#pastMds = cmdscale(pastMa, eig = TRUE, x.ret = TRUE)
# Determine percent variation captured on each axis
# Calculate the eigenvalues so later we can figure out % variation shown on each Principal Coordinate
pastPcoaVar = round(pastMds$eig/sum(pastMds$eig)*100, 1)
head(pastPcoaVar)
# Format data to plot
pastPcoaValues = pastMds$points
head(pastPcoaValues)
# 2-column tab-delimited table of individual assignments to populations; must be in the same order as samples in the bam list or vcf file.
pastI2P = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "pop" = region)
row.names(pastI2P) = pastI2P[,1]
pastPcoaValues=cbind(pastI2P, pastPcoaValues)
pastPcoaValues =as.data.frame(pastPcoaValues, sample = rownames(pastPcoaValues))
colnames(pastPcoaValues)[c(3,4)] = c("PCo1", "PCo2")
head(pastPcoaValues)
pastPCoA = merge(pastPcoaValues, aggregate(cbind(mean.x=PCo1,mean.y=PCo2)~pop, pastPcoaValues, mean), by="pop")
pastPCoA$pop = factor(pastPCoA$pop)
pastPCoA$pop = factor(pastPCoA$pop, levels(pastPCoA$pop)[c(4, 2, 5, 1, 3)])
flPal = paletteer_d("rcartocolor::Sunset")[c(7, 6, 4, 3, 1)]
pastPcoaPlotA = ggplot(pastPCoA, aes(x = PCo1, y = PCo2, color = pop, fill = pop)) +
geom_segment(data = Cred, aes(x = 0, xend = Dim1*0.348, y = 0,
yend = Dim2*0.28), arrow = arrow(length = unit(0.4, "cm")), color = "black", size=1, inherit.aes = FALSE) + # adds vectors
geom_text(data = Cred, aes(x = Dim1*0.348, y = Dim2*0.28, label = Drivers), size = 2, inherit.aes = FALSE)+ # adds labels to vectors
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
#ellipses
stat_ellipse(data = pastPCoA, type = "t", geom = "polygon", alpha = 0.1) +
#individuals indicated by small transparent circles
geom_point(aes(x = PCo1, y = PCo2), size = 3, alpha = 0.3, show.legend = FALSE) +
#population centroids indicated by large circles
geom_point(aes(x = mean.x, y = mean.y), size = 5, color = "black", shape = 21) +
annotate(geom = "text", x = 0.1, y = -0.25, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = flPal, guide = NULL) +
xlab(paste ("PCo 1 (", pastPcoaVar[1],"%)", sep = "")) + #Prints percent variation explained by first axis
ylab(paste ("PCo 2 (", pastPcoaVar[2],"%)", sep = "")) + #Prints percent variation explained by second axis
guides(shape = guide_legend(order = 2), linetype = guide_legend(override.aes = list(linetype = c(1,2), alpha = 1, color = "black", fill = NA), order = 3), fill = guide_legend(override.aes = list(shape = 22, size = 5, color = NA, alpha = NA), order = 1))+
theme_bw()
pastPcoaPlot = pastPcoaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pastPcoaPlot
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.png", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.pdf", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.tiff", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
# packages: tidyverse, paletteer, vegan if use vectors
#calculating depth & latitude vectors
pastMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat"))
pastMds = cmdscale(pastMa, eig = TRUE, x.ret = TRUE)
meta = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv")
env=dplyr::select(meta, collection_depth_m, site_lat)
#env=cbind(env,envData)
envDrivers=envfit(pastMds, env, permutations = 999)
envDriversScores <- as.data.frame(scores(envDrivers, display = "vectors"))
#extracts relevant scores from envifit
A <- as.list(envDrivers$vectors)
pvals<-as.data.frame(A$pvals)
arrows<-as.data.frame(A$arrows*sqrt(A$r))
C<-cbind(arrows, pvals)
#                         Dim1        Dim2 A$pvals
#collection_depth_m -0.5893338 -0.02474275   0.004
#site_lat           -0.5456895  0.20714215   0.004
#$r
#collection_depth_m           site_lat
#         0.3479266          0.3406849
#Cred<-subset(C,pvals<0.01) #Filters species with highly significant loadings
Cred <- cbind(C, Drivers = rownames(C))
Cred$Drivers <- as.character(Cred$Drivers)
Cred["popDepth", "Drivers"] <- "Depth"
Cred["lat", "Drivers"] <- "Latitude"
#remove from here if keep vectors
#pastMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat"))
#pastMds = cmdscale(pastMa, eig = TRUE, x.ret = TRUE)
# Determine percent variation captured on each axis
# Calculate the eigenvalues so later we can figure out % variation shown on each Principal Coordinate
pastPcoaVar = round(pastMds$eig/sum(pastMds$eig)*100, 1)
head(pastPcoaVar)
# Format data to plot
pastPcoaValues = pastMds$points
head(pastPcoaValues)
# 2-column tab-delimited table of individual assignments to populations; must be in the same order as samples in the bam list or vcf file.
pastI2P = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "pop" = region)
row.names(pastI2P) = pastI2P[,1]
pastPcoaValues=cbind(pastI2P, pastPcoaValues)
pastPcoaValues =as.data.frame(pastPcoaValues, sample = rownames(pastPcoaValues))
colnames(pastPcoaValues)[c(3,4)] = c("PCo1", "PCo2")
head(pastPcoaValues)
pastPCoA = merge(pastPcoaValues, aggregate(cbind(mean.x=PCo1,mean.y=PCo2)~pop, pastPcoaValues, mean), by="pop")
pastPCoA$pop = factor(pastPCoA$pop)
pastPCoA$pop = factor(pastPCoA$pop, levels(pastPCoA$pop)[c(4, 2, 5, 1, 3)])
flPal = paletteer_d("rcartocolor::Sunset")[c(7, 6, 4, 3, 1)]
pastPcoaPlotA = ggplot(pastPCoA, aes(x = PCo1, y = PCo2, color = pop, fill = pop)) +
geom_segment(data = Cred, aes(x = 0, xend = Dim1*0.348, y = 0,
yend = Dim2*0.28), arrow = arrow(length = unit(0.4, "cm")), color = "black", size=1, inherit.aes = FALSE) + # adds vectors
geom_text(data = Cred, aes(x = Dim1*0.348, y = ((Dim2*0.28)-0.02), label = Drivers), size = 2, inherit.aes = FALSE)+ # adds labels to vectors
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
#ellipses
stat_ellipse(data = pastPCoA, type = "t", geom = "polygon", alpha = 0.1) +
#individuals indicated by small transparent circles
geom_point(aes(x = PCo1, y = PCo2), size = 3, alpha = 0.3, show.legend = FALSE) +
#population centroids indicated by large circles
geom_point(aes(x = mean.x, y = mean.y), size = 5, color = "black", shape = 21) +
annotate(geom = "text", x = 0.1, y = -0.25, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = flPal, guide = NULL) +
xlab(paste ("PCo 1 (", pastPcoaVar[1],"%)", sep = "")) + #Prints percent variation explained by first axis
ylab(paste ("PCo 2 (", pastPcoaVar[2],"%)", sep = "")) + #Prints percent variation explained by second axis
guides(shape = guide_legend(order = 2), linetype = guide_legend(override.aes = list(linetype = c(1,2), alpha = 1, color = "black", fill = NA), order = 3), fill = guide_legend(override.aes = list(shape = 22, size = 5, color = NA, alpha = NA), order = 1))+
theme_bw()
pastPcoaPlot = pastPcoaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pastPcoaPlot
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.png", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.pdf", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot.tiff", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300)
#packages: tidyverse, vcfR, adegenet, StAMPP, gdata, reshape2, paletteer
pastVcf = read.vcfR("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.bcf", verbose = FALSE)
pastGenlightPopulation = vcfR2genlight(pastVcf, n.cores = 1)
locNames(pastGenlightPopulation) = paste(pastVcf@fix[,1],pastVcf@fix[,2],sep="_")
popData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "pop" = region)
strata(pastGenlightPopulation) = data.frame(popData)
setPop(pastGenlightPopulation) = ~pop
pastGenlightPopulation$pop = factor(pastGenlightPopulation$pop)
pastGenlightPopulation$pop = factor(pastGenlightPopulation$pop,
levels(pastGenlightPopulation$pop)[c(4, 1, 2, 3, 5)])
set.seed(694)
#99 permutations
sefl.fst <- stamppFst(pastGenlightPopulation, nboots = 99, percent = 95, nclusters = 2)
sefl.fst$Fsts
sefl.fst$Pvalues
#Generating heat map of pairwise Fst values
#reordering my samples to stay formatted properly for the matrix, and still have them go north to south
pop.order = c("Pompano/LBTS", "Boynton Beach", "West Palm Beach", "Jupiter", "St. Lucie Reef")
#reads in Fst matrix
snpFstMa <- as.matrix(sefl.fst$Fsts)
#rebuilding the matrix based on order of populations
upperTriangle(snpFstMa, byrow = TRUE) <- lowerTriangle(snpFstMa)
snpFstMa <- snpFstMa[,pop.order] %>% .[pop.order,]
snpFstMa[upper.tri(snpFstMa)] <- NA
snpFstMa <- as.data.frame(snpFstMa)
snpFstMa$Pop = factor(row.names(snpFstMa))
snpQMa <- as.matrix(sefl.fst$Pvalues)
upperTriangle(snpQMa, byrow=TRUE) <- lowerTriangle(snpQMa)
snpQMa <- snpQMa[,pop.order] %>%
.[pop.order,]
snpQMa[upper.tri(snpQMa)] <- NA
snpQMa <- as.data.frame(snpQMa)
snpQMa$Pop = factor(row.names(snpQMa), levels = unique(pop.order))
snpFstMa$Pop = factor(row.names(snpFstMa), levels = unique(pop.order))
snpFst = melt(snpFstMa, id.vars = "Pop", value.name = "Fst", variable.name = "Pop2", na.rm = FALSE)
snpFst$Fst = round(snpFst$Fst, 3)
snpFst = snpFst %>% mutate(Fst = replace(Fst, Fst < 0, 0))
snpQ = melt(snpQMa, id.vars = "Pop", value.name = "Pval", variable.name = "Pop2", na.rm = FALSE)
snpQ$Qval = p.adjust(snpQ$Pval, method = "BH")
snpFst$region = snpFst$Pop
snpFst$region = factor(gsub("\\n.*", "", snpFst$region))
snpFst$region = factor(snpFst$region, levels = levels(snpFst$region)[c(4, 2, 5, 1, 3)])
snpFst$region2 = snpFst$Pop2
snpFst$region2 = factor(gsub("\\n.*", "", snpFst$region2))
snpFst$region2 = factor(snpFst$region2, levels = levels(snpFst$region2)[c(4, 2, 5, 1, 3)])
snpFst$Fst = sprintf('%.3f', snpFst$Fst)
snpFst$Fst = factor(gsub("\\NA", NA, snpFst$Fst))
snpFst$Fst = factor(gsub("\\.000", "", snpFst$Fst))
snpFst$Fst = factor(gsub("\\-", "", snpFst$Fst))
snpHeatmapA = ggplot(data = snpFst, aes(Pop, Pop2, fill = as.numeric(as.character(Fst))))+
geom_tile(color = "white") +
geom_segment(data = snpFst, aes(x = 0.48, xend = -0.62, y = Pop, yend = Pop, color = region), size = 19) +
geom_segment(data = snpFst, aes(x = Pop2, xend = Pop2, y = 0.45, yend = -0.6, color = region2), size = 62.5) +
scale_color_manual(values = flPal[], guide = NULL) +
scale_fill_gradient(low = "white", high = "red", limit = c(0, 0.07), space = "Lab", name = expression(paste(italic("F")[ST])), na.value = "white",  guide = "colourbar")+
geom_text(data = snpFst, aes(Pop, Pop2, label = Fst), color = ifelse(snpQ$Qval <= 0.05,"black", "darkgrey"), size = ifelse(snpQ$Qval < 0.05, 6, 5), fontface = ifelse (snpQ$Qval < 0.05, "bold", "plain")) +
guides(fill = guide_colorbar(barwidth = 12, barheight = 1, title.position = "top", title.hjust = 0.5)) +
scale_y_discrete(position = "left") +
scale_x_discrete(limits = rev(levels(snpFst$Pop))[c(1:5)]) +
coord_cartesian(xlim = c(1, 5), ylim = c(1, 5), clip = "off") +
theme_minimal()
snpHeatmap = snpHeatmapA + theme(
axis.text.x = element_text(vjust = 1, size = 16, hjust = 0.5, color = "black"),
axis.text.y = element_text(size = 16, color = "black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
legend.position = c(0.5, 0.87),
legend.direction = "horizontal",
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
plot.title = element_text(size = 16)
)
snpHeatmap
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/fstHeatMap.png", plot = snpHeatmap, width = 30, height = 9, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/fstHeatMap.eps", plot = snpHeatmap, width = 30, height = 9, units = "cm", dpi = 300)
