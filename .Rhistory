geom_segment(data = seflpastAF, aes(x = -5, xend = -196, y = pop, yend = pop, color = pop), size = 10.5) +
scale_color_manual(values = flPal, guide = NULL) +
scale_fill_gradientn(colours = paletteer_d("RColorBrewer::RdPu"), limit = c(0, 1), name = "Minor allele \nfrequency")+
xlab("Outlier locus") +
ylab("Population") +
coord_cartesian(xlim = c(-1, 11), clip = "off") +
theme_bw()
mafPlot = mafPlotA +
theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "gray90", size = 10),
axis.ticks.y = element_blank(),
legend.position = "right",
legend.key.size = unit(0.3, 'cm'),
panel.border = element_rect(color = "black", size = 0.25),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
mafPlot
mafPlotA = ggplot(data = seflpastAF, aes(x = chromLoc, y = pop, fill = minFreq)) +
geom_tile()+
geom_segment(data = seflpastAF, aes(x = -5, xend = -196, y = pop, yend = pop, color = pop), size = 10.5) +
scale_color_manual(values = flPal, guide = NULL) +
scale_fill_gradientn(colours = paletteer_d("RColorBrewer::RdPu"), limit = c(0, 1), name = "Minor allele \nfrequency")+
xlab("Outlier locus") +
ylab("Population") +
#coord_cartesian(xlim = c(-1, 11), clip = "off") +
theme_bw()
mafPlot = mafPlotA +
theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "gray90", size = 10),
axis.ticks.y = element_blank(),
legend.position = "right",
legend.key.size = unit(0.3, 'cm'),
panel.border = element_rect(color = "black", size = 0.25),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
mafPlot
mafPlotA = ggplot(data = seflpastAF, aes(x = chromLoc, y = pop, fill = minFreq)) +
geom_tile()+
geom_segment(data = seflpastAF, aes(x = -5, xend = -196, y = pop, yend = pop, color = pop), size = 10.5) +
scale_color_manual(values = flPal, guide = NULL) +
scale_fill_gradientn(colours = paletteer_d("RColorBrewer::RdPu"), limit = c(0, 1), name = "Minor allele \nfrequency")+
xlab("Outlier locus") +
ylab("Population") +
coord_cartesian(xlim = c(0, 11), clip = "off") +
theme_bw()
mafPlot = mafPlotA +
theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "gray90", size = 10),
axis.ticks.y = element_blank(),
legend.position = "right",
legend.key.size = unit(0.3, 'cm'),
panel.border = element_rect(color = "black", size = 0.25),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
mafPlot
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/outlierMiAF.pdf", plot = mafPlot, width = 14, height = 8, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/outlierMiAF.png", plot = mafPlot, width = 14, height = 8, units = "cm", dpi = 300)
mafPlotA = ggplot(data = seflpastAF, aes(x = chromLoc, y = pop, fill = minFreq)) +
geom_tile()+
geom_segment(data = seflpastAF, aes(x = -5, xend = -80, y = pop, yend = pop, color = pop), size = 10.5) +
scale_color_manual(values = flPal, guide = NULL) +
scale_fill_gradientn(colours = paletteer_d("RColorBrewer::RdPu"), limit = c(0, 1), name = "Minor allele \nfrequency")+
xlab("Outlier locus") +
ylab("Population") +
coord_cartesian(xlim = c(0, 11), clip = "off") +
theme_bw()
mafPlot = mafPlotA +
theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "gray90", size = 10),
axis.ticks.y = element_blank(),
legend.position = "right",
legend.key.size = unit(0.3, 'cm'),
panel.border = element_rect(color = "black", size = 0.25),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
mafPlot
mafPlotA = ggplot(data = seflpastAF, aes(x = chromLoc, y = pop, fill = minFreq)) +
geom_tile() +
geom_segment(data = seflpastAF, aes(x = 0, xend = -4, y = pop, yend = pop, color = pop), size = 10.5) +
scale_color_manual(values = flPal, guide = NULL) +
scale_fill_gradientn(colours = paletteer_d("RColorBrewer::RdPu"), limit = c(0, 1), name = "Minor allele \nfrequency") +
xlab("Outlier locus") +
ylab("Population") +
coord_cartesian(xlim = c(0, 11), clip = "off") +
theme_bw()
mafPlot = mafPlotA +
theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "gray90", size = 10),
axis.ticks.y = element_blank(),
legend.position = "right",
legend.key.size = unit(0.3, 'cm'),
panel.border = element_rect(color = "black", size = 0.25),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
mafPlot
mafPlotA = ggplot(data = seflpastAF, aes(x = chromLoc, y = pop, fill = minFreq)) +
geom_tile() +
geom_segment(data = seflpastAF, aes(x = -1, xend = -5, y = pop, yend = pop, color = pop), size = 10.5) +
scale_color_manual(values = flPal, guide = NULL) +
scale_fill_gradientn(colours = paletteer_d("RColorBrewer::RdPu"), limit = c(0, 1), name = "Minor allele \nfrequency") +
xlab("Outlier locus") +
ylab("Population") +
coord_cartesian(xlim = c(0, 11), clip = "off") +
theme_bw()
mafPlot = mafPlotA +
theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "gray90", size = 10),
axis.ticks.y = element_blank(),
legend.position = "right",
legend.key.size = unit(0.3, 'cm'),
panel.border = element_rect(color = "black", size = 0.25),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
mafPlot
mafPlotA = ggplot(data = seflpastAF, aes(x = chromLoc, y = pop, fill = minFreq)) +
geom_tile() +
geom_segment(data = seflpastAF, aes(x = -0.5, xend = -5.5, y = pop, yend = pop, color = pop), size = 10.5) +
scale_color_manual(values = flPal, guide = NULL) +
scale_fill_gradientn(colours = paletteer_d("RColorBrewer::RdPu"), limit = c(0, 1), name = "Minor allele \nfrequency") +
xlab("Outlier locus") +
ylab("Population") +
coord_cartesian(xlim = c(0, 11), clip = "off") +
theme_bw()
mafPlot = mafPlotA +
theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "gray90", size = 10),
axis.ticks.y = element_blank(),
legend.position = "right",
legend.key.size = unit(0.3, 'cm'),
panel.border = element_rect(color = "black", size = 0.25),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
mafPlot
seflpastAF$pop = factor(seflpastAF$pop, levels = levels(seflpastAF$pop)[c(4, 2, 5, 1, 3)], labels = c("St. Lucie", "Jupiter", "West Palm", "Boynton", "LBTS"))
mafPlotA = ggplot(data = seflpastAF, aes(x = chromLoc, y = pop, fill = minFreq)) +
geom_tile() +
geom_segment(data = seflpastAF, aes(x = -0.5, xend = -5.5, y = pop, yend = pop, color = pop), size = 10.5) +
scale_color_manual(values = flPal, guide = NULL) +
scale_fill_gradientn(colours = paletteer_d("RColorBrewer::RdPu"), limit = c(0, 1), name = "Minor allele \nfrequency") +
xlab("Outlier locus") +
ylab("Population") +
coord_cartesian(xlim = c(0, 11), clip = "off") +
theme_bw()
mafPlot = mafPlotA +
theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "gray90", size = 10),
axis.ticks.y = element_blank(),
legend.position = "right",
legend.key.size = unit(0.3, 'cm'),
panel.border = element_rect(color = "black", size = 0.25),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
mafPlot
mafPlotA = ggplot(data = seflpastAF, aes(x = chromLoc, y = pop, fill = minFreq)) +
geom_tile() +
geom_segment(data = seflpastAF, aes(x = -0.4, xend = -4.5, y = pop, yend = pop, color = pop), size = 10.5) +
scale_color_manual(values = flPal, guide = NULL) +
scale_fill_gradientn(colours = paletteer_d("RColorBrewer::RdPu"), limit = c(0, 1), name = "Minor allele \nfrequency") +
xlab("Outlier locus") +
ylab("Population") +
coord_cartesian(xlim = c(0, 11), clip = "off") +
theme_bw()
mafPlot = mafPlotA +
theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "gray90", size = 10),
axis.ticks.y = element_blank(),
legend.position = "right",
legend.key.size = unit(0.3, 'cm'),
panel.border = element_rect(color = "black", size = 0.25),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
mafPlot
mafPlotA = ggplot(data = seflpastAF, aes(x = chromLoc, y = pop, fill = minFreq)) +
geom_tile() +
geom_segment(data = seflpastAF, aes(x = -0.4, xend = -3.5, y = pop, yend = pop, color = pop), size = 10.5) +
scale_color_manual(values = flPal, guide = NULL) +
scale_fill_gradientn(colours = paletteer_d("RColorBrewer::RdPu"), limit = c(0, 1), name = "Minor allele \nfrequency") +
xlab("Outlier locus") +
ylab("Population") +
coord_cartesian(xlim = c(0, 11), clip = "off") +
theme_bw()
mafPlot = mafPlotA +
theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "gray90", size = 10),
axis.ticks.y = element_blank(),
legend.position = "right",
legend.key.size = unit(0.3, 'cm'),
panel.border = element_rect(color = "black", size = 0.25),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
mafPlot
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/outlierMiAF.pdf", plot = mafPlot, width = 14, height = 8, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/outlierMiAF.png", plot = mafPlot, width = 14, height = 8, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/outlierMiAF.png", plot = mafPlot, width = 14, height = 8, units = "cm", dpi = 300)
knitr::opts_chunk$set(echo = TRUE)
# setup rmarkdown environment first
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.align = 'left')
bayeScEnv = read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/seflpast.bayeS_fst.txt", header=T) %>% filter(qval_g < 0.05) %>% mutate(loc = rownames(.), depthOut = 1) %>% select(loc, depthOut)
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis", "ropensci/rnaturalearthhires")
pacman::p_load("cowplot", "ggrepel", "ggspatial", "maps", "paletteer", "patchwork", "rgdal", "rnaturalearth", "sf", "tidyverse", "reshape2", "MCMC.OTU", "pairwiseAdonis", "RColorBrewer", "Redmonder", "flextable", "lubridate", "officer", "adegenet", "dendextend", "gdata", "ggdendro", "hierfstat", "Imap", "kableExtra", "poppr", "reshape2", "StAMPP", "vcfR", "vegan", "boa", "measurements", "magick", "rgeos")
bayeScEnv = read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/seflpast.bayeS_fst.txt", header=T) %>% filter(qval_g < 0.05) %>% mutate(loc = rownames(.), depthOut = 1) %>% select(loc, depthOut)
bayescan = read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/seflpast.baye_fst.txt",header=T) %>% mutate(loc = rownames(.), out.05 = ifelse(qval < 0.05, 1, 0), out.1 = ifelse(qval < 0.1, 1, 0))
bayescan[bayescan[, 3]<=0.0001, 3] = 0.0001
bayeScEnv = read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/seflpast.bayeS_fst.txt", header=T) %>% filter(qval_g < 0.05) %>% mutate(loc = rownames(.), depthOut = 1) %>% select(loc, depthOut)
bayescan = bayescan %>% left_join(bayeScEnv)
bayescan$depthOut = bayescan$depthOut %>% replace_na(0)
sum(bayescan$out.05)
sum(bayescan$out.1)
sum(bayescan$depthOut)
for(i in 1:nrow(bayescan)){
if(bayescan$depthOut[i] == 1){
bayescan$out.05[i] = 2
}
}
bayescanPlotA = ggplot(data = bayescan, aes(x = log10(qval), y = fst, color = as.factor(out.05), alpha = as.factor(out.05))) +
geom_point(size = 1) +
geom_vline(xintercept = log10(0.05), linetype = 2, color = "purple") +
xlab(expression(log[10]*"("*italic("q")*"-value)")) +
ylab(expression(italic("F")[ST])) +
scale_x_reverse() +
scale_color_manual(values = c("grey45", "purple", "pink")) +
scale_alpha_manual(values = c(0.25, 0.25, 0.5)) +
theme_bw()
bayescanPlot = bayescanPlotA +
theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_text(color = "black", size = 12),
axis.ticks.x = element_line(color = "black"),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 10),
axis.ticks.y = element_line(color = "black"),
legend.position = "none",
legend.key.size = unit(0.3, 'cm'),
panel.border = element_rect(color = "black"),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
bayescanPlot
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/outliers.pdf", plot = bayescanPlot, width = 14, height = 8, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/outliers.png", plot = bayescanPlot, width = 14, height = 8, units = "cm", dpi = 300)
seflpastAF = read.delim("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/seflpastAlleleFreq.txt")
seflpastAF$chromLoc = paste(seflpastAF$chrom,seflpastAF$pos)
seflpastAF$pop = factor(seflpastAF$pop)
seflpastAF$pop = factor(seflpastAF$pop, levels = levels(seflpastAF$pop)[c(4, 2, 5, 1, 3)], labels = c("St. Lucie", "Jupiter", "West Palm", "Boynton", "LBTS"))
#beginning plot generation
flPal = paletteer_d("rcartocolor::Sunset")[c(7, 6, 4, 3, 1)]
mafPlotA = ggplot(data = seflpastAF, aes(x = chromLoc, y = pop, fill = minFreq)) +
geom_tile() +
geom_segment(data = seflpastAF, aes(x = -0.4, xend = -3.5, y = pop, yend = pop, color = pop), size = 10.5) +
scale_color_manual(values = flPal, guide = NULL) +
scale_fill_gradientn(colours = paletteer_d("RColorBrewer::RdPu"), limit = c(0, 1), name = "Minor allele \nfrequency") +
xlab("Outlier locus") +
ylab("Population") +
coord_cartesian(xlim = c(0, 11), clip = "off") +
theme_bw()
mafPlot = mafPlotA +
theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "gray90", size = 10),
axis.ticks.y = element_blank(),
legend.position = "right",
legend.key.size = unit(0.3, 'cm'),
panel.border = element_rect(color = "black", size = 0.25),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
mafPlot
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/outlierMiAF.pdf", plot = mafPlot, width = 14, height = 8, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/outlierMiAF.png", plot = mafPlot, width = 14, height = 8, units = "cm", dpi = 300)
pastIBS = read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat")%>% as.matrix() %>% as.dist(diag = FALSE)
pastDepths = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select(name = tube_id, collection_depth_m) %>% dist(method = "maximum")
set.seed(694)
seflpastMantel = mantel.randtest(pastIBS, pastDepths, nrepet = 9999)
seflpastMantel
mantelObs = round(seflpastMantel$obs, 3)
mantelP = seflpastMantel$pvalue
pastIBSdist =  melt(as.matrix(pastIBS), varnames = c("row", "col"), value.name = "ibs")
pastIBSdist = pastIBSdist[pastIBSdist$row != pastIBSdist$col,]
pastDepth = melt(as.matrix(pastDepths), varnames = c("row", "col"), value.name = "depth")
pastDepth = pastDepth[pastDepth$row != pastDepth$col,]
snpMantelDF = data.frame(cbind(pastIBSdist$ibs, pastDepth$depth))
colnames(snpMantelDF) = c("ibs", "depth")
#start building plot
pastIBSdepthMantelA = ggplot(data = snpMantelDF, aes(x = depth, y = ibs)) + scale_fill_gradientn(colors = paletteer_d("wesanderson::Zissou1")) +
geom_point(shape = 21, fill = "gray40", alpha = 0.25, size = 0.5) +
stat_density_2d(aes(fill = stat(density)), n = 300, contour = FALSE, geom = "raster", alpha = 0.75) +
geom_smooth(method = lm, col = "black", fill = "gray40", fullrange = TRUE, size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
annotate(geom = "text", x = 10, y = 0.24, label = bquote(~italic(r)~" = "~.(mantelObs)*", "~italic(p)~" = "~.(mantelP)), size = 3) +
labs(x = expression(paste(Delta," depth (m)")), y = "Genetic distance (1 - IBS)") +
theme_bw()
pastIBSdepthMantel = pastIBSdepthMantelA + theme(
axis.title.x = element_text(size = 12, color = "black"),
axis.text.x = element_text(size = 12, color = "black"),
axis.ticks.x = element_line(color = "black"),
axis.line.x = element_blank(),
axis.title.y = element_text(size = 12, color = "black"),
axis.text.y = element_text(size = 12, color = "black"),
axis.ticks.y = element_line(color = "black"),
axis.line.y = element_blank(),
panel.border = element_rect(size = 1.2, color = "black"),
plot.margin = margin(0.2,0.5,0.1,0.1, unit = "cm"),
legend.position = "none")
pastIBSdepthMantel
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/depth_mantelPlot.tiff", plot = pasIBSdepthMantel, width = 12, height = 7, units = "cm", dpi = 300)
pastIBSdepthMantel = pastIBSdepthMantelA + theme(
axis.title.x = element_text(size = 12, color = "black"),
axis.text.x = element_text(size = 12, color = "black"),
axis.ticks.x = element_line(color = "black"),
axis.line.x = element_blank(),
axis.title.y = element_text(size = 12, color = "black"),
axis.text.y = element_text(size = 12, color = "black"),
axis.ticks.y = element_line(color = "black"),
axis.line.y = element_blank(),
panel.border = element_rect(size = 1.2, color = "black"),
plot.margin = margin(0.2,0.5,0.1,0.1, unit = "cm"),
legend.position = "none")
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/depth_mantelPlot.tiff", plot = pastIBSdepthMantel, width = 12, height = 7, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/depth_mantelPlot.pdf", plot = pastIBSdepthMantel, width = 12, height = 7, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/depth_mantelPlot.png", plot = pastIBSdepthMantel, width = 12, height = 7, units = "cm", dpi = 300)
#read in sample metadata with clones, remove technical replicates
popDataClones = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData.csv") [-c(27, 28, 46, 47, 79, 80),] %>% select("sample" = tube_id, "pop" = region)
#treat populations as a factor & order them North-->South
popDataClones$pop = factor(popDataClones$pop)
popDataClones$pop = factor(popDataClones$pop, levels = levels(popDataClones$pop)[c(4, 2, 5, 1, 3)])
#read in zoox reads data with clones incl, technical replicates removed
##why are samples 16, 17, 41 not in this file?? removed in koko step?
zoox = read.delim("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/zooxReads_withclones_techrepsrem", header = FALSE, check.names = FALSE)
head(zoox)
zoox$V2[is.na(zoox$V2)] <- as.character(zoox$V1[is.na(zoox$V2)])
zoox$V1 = gsub("P.*", "chr", zoox$V1)
zoox$V2 = gsub(".trim.*", "", zoox$V2)
zoox = zoox %>% filter(zoox$V1 != "*")
zooxLst = split(zoox$V2, as.integer(gl(length(zoox$V2), 20, length(zoox$V2))))
zooxMaps = NULL
for(i in zooxLst){
zooxMaps = rbind(zooxMaps, data.frame(t(i)))
}
colnames(zooxMaps) = c("sample", zoox$V1[c(2:20)])
for(i in c(2:20)){
zooxMaps[,i] = as.numeric(zooxMaps[,i])
}
str(zooxMaps)
zooxMaps$Symbiodinium = rowSums(zooxMaps[2:6])
zooxMaps$Breviolum = rowSums(zooxMaps[7:10])
zooxMaps$Cladocopium = rowSums(zooxMaps[11:16])
zooxMaps$Durusdinium = rowSums(zooxMaps[17:20])
zooxMaps = zooxMaps[,c(1, 21:24)]
zooxProp = zooxMaps
zooxProp$sum = apply(zooxProp[, c(2:length(zooxProp[1,]))], 1, function(x) {
sum(x, na.rm = T)
})
#turn them into proportions
zooxProp = cbind(zooxProp$sample, (zooxProp[, c(2:(ncol(zooxProp)-1))]
/ zooxProp$sum))
colnames(zooxProp)[1] = "sample"
head(zooxProp)
apply(zooxProp[, c(2:(ncol(zooxProp)))], 1, function(x) {
sum(x, na.rm = T)
})
#bind it to metadata
dfZoox = popDataClones %>% left_join(zooxProp)
dfZoox$pop = as.factor(dfZoox$pop)
# setting up for plotting
dfZoox = dfZoox[order(dfZoox$pop),]
sampleCounts = plyr::count(dfZoox, c('pop'))
meltedList = reshape2::melt(lapply(sampleCounts$freq,function(x){c(1:x)}))
dfZoox$barPlotOrder = meltedList$value
dfZoox = dfZoox[c(1,ncol(dfZoox),2:(ncol(dfZoox)-1))]
zDat = melt(dfZoox, id.vars = c("sample", "pop", "barPlotOrder"), variable.name = "Symbiont", value.name = "Fraction")
# colors
colPalZoox = brewer.pal(4, "BrBG")
names(colPalZoox) = levels(zDat$Symbiont)
# plotting
colPalZoox = c("#247EA3", "#FFBF46", "#6A9FA1", "Purple3")
flPal = paletteer_d("rcartocolor::Sunset")[c(7, 6, 4, 3, 1)]
popAnno = data.frame(x1 = c(0.5, 0.5, 0.5, 0.5, 0.5), x2 = c(30.5, 15.5, 13.5, 14.5, 15.5),
y1 = -0.065, y2 = -0.065, pop = c("St. Lucie Reef", "Jupiter", "West Palm Beach", "Boynton Beach", "Pompano/LBTS"))
popAnno$pop = factor(popAnno$pop)
popAnno$pop = factor(popAnno$pop, levels = levels(popAnno$pop)[c(4, 2, 5, 1, 3)])
dfZoox = zDat %>% left_join(popAnno, by = "pop")
zooxSNPA = ggplot(data = dfZoox, aes(x = barPlotOrder, y = Fraction, fill = Symbiont, order = barPlotOrder)) +
geom_bar(stat = "identity", position = "stack", colour = "grey25", width = 1, size = 0.2) +
xlab("Population") +
scale_x_discrete(expand = c(0.001, 0.001)) +
scale_y_continuous(expand = c(-.001, -0.001)) +
scale_color_manual(values = flPal) +
geom_segment(aes(x = x1, xend = x2, y = y1, yend = y2, color = pop), size = 7) +
scale_fill_manual(values = colPalZoox, name = "Symbiodiniaceae genus") +
coord_cartesian(ylim = c(-.01,1.01), clip = "off") +
facet_grid(~ pop, drop = TRUE, space = "free", scales = "free", switch = "both") +
guides(color = "none") +
theme_bw()
zooxSNP = zooxSNPA + theme(plot.title = element_text(),
panel.grid = element_blank(),
panel.background = element_rect(fill = "gray25", colour = "grey25"),
panel.border = element_rect(fill = NA, color = "black", size = 1, linetype = "solid"),
panel.spacing.x = grid:::unit(0.05, "lines"),
panel.spacing.y = grid:::unit(0.05, "lines"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title = element_blank(),
strip.background.x = element_blank(),
strip.background.y = element_blank(),
strip.text = element_text(size = 10),
strip.text.y.left = element_text(size = 10, angle = 90),
strip.text.x.bottom = element_text(vjust = -.05, color = "black"),
legend.key.size = unit(0.75, "line"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
legend.key = element_blank(),
legend.position = "bottom")
# zooxSNP figure with clones
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/zooxSNP.png", plot = zooxSNP, width = 20, height = 8, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/zooxSNP.eps", plot = zooxSNP, width = 20, height = 8, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/zooxSNP.tiff", plot = zooxSNP, width = 20, height = 8, units = "cm", dpi = 300)
pastIBS = read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat")%>% as.matrix() %>% as.dist(diag = FALSE)
pastDepths = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select(name = tube_id, collection_depth_m) %>% dist(method = "maximum")
set.seed(694)
seflpastMantel = mantel.randtest(pastIBS, pastDepths, nrepet = 9999)
seflpastMantel
mantelObs = round(seflpastMantel$obs, 3)
mantelP = seflpastMantel$pvalue
pastIBSdist =  melt(as.matrix(pastIBS), varnames = c("row", "col"), value.name = "ibs")
pastIBSdist = pastIBSdist[pastIBSdist$row != pastIBSdist$col,]
pastDepth = melt(as.matrix(pastDepths), varnames = c("row", "col"), value.name = "depth")
pastDepth = pastDepth[pastDepth$row != pastDepth$col,]
snpMantelDF = data.frame(cbind(pastIBSdist$ibs, pastDepth$depth))
colnames(snpMantelDF) = c("ibs", "depth")
#start building plot
pastIBSdepthMantelA = ggplot(data = snpMantelDF, aes(x = depth, y = ibs)) + scale_fill_gradientn(colors = paletteer_d("wesanderson::Zissou1")) +
geom_point(shape = 21, fill = "gray40", alpha = 0.25, size = 0.5) +
stat_density_2d(aes(fill = stat(density)), n = 300, contour = FALSE, geom = "raster", alpha = 0.75) +
geom_smooth(method = lm, col = "black", fill = "gray40", fullrange = TRUE, size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
annotate(geom = "text", x = 10, y = 0.24, label = bquote(~italic(r)~" = "~.(mantelObs)*", "~italic(p)~" = "~.(mantelP)), size = 3) +
labs(x = expression(paste(Delta," depth (m)")), y = "Genetic distance (1 - IBS)") +
theme_bw()
pastIBSdepthMantel = pastIBSdepthMantelA + theme(
axis.title.x = element_text(size = 12, color = "black"),
axis.text.x = element_text(size = 12, color = "black"),
axis.ticks.x = element_line(color = "black"),
axis.line.x = element_blank(),
axis.title.y = element_text(size = 12, color = "black"),
axis.text.y = element_text(size = 12, color = "black"),
axis.ticks.y = element_line(color = "black"),
axis.line.y = element_blank(),
panel.border = element_rect(size = 1.2, color = "black"),
plot.margin = margin(0.2,0.5,0.1,0.1, unit = "cm"),
legend.position = "none")
pastIBSdepthMantel
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/depth_mantelPlot.tiff", plot = pastIBSdepthMantel, width = 12, height = 7, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/depth_mantelPlot.pdf", plot = pastIBSdepthMantel, width = 12, height = 7, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/depth_mantelPlot.png", plot = pastIBSdepthMantel, width = 12, height = 7, units = "cm", dpi = 300)
