pastSamples$region = factor(pastSamples$region, levels = levels(pastSamples$region)[c(4, 2, 5, 1, 3)])
pastSamples$collection_date = mdy(pastSamples$collection_date) %>% format("%d %b %Y")
pastSamples$depthM = conv_unit(pastSamples$collection_depth_ft, from = "ft", to = "m") %>% round(1)
seflSites = pastSamples %>% group_by(region)%>% summarize(latDD = first(site_lat), longDD = first(site_long), depthRangeM = paste(min(depthM), "-", max(depthM), sep = ""), n = n(), date = as.character(min(collection_date))) %>% droplevels() %>% as.data.frame()
View(seflSites)
seflPastPopsMigrate = seflSites %>% group_by(region, depthZone, site) %>% summarise(latDD = first(latDD), longDD = first(longDD)) %>% filter(site %in% c("St. Lucie Reef", "Jupiter", "West Palm Beach", "Boynton Beach", "Pompano/LBTS")) %>% dplyr::select(-site) %>% droplevels()
seflPastPopsMigrate = seflSites %>% group_by(region) %>% summarise(latDD = first(latDD), longDD = first(longDD)) %>% filter(site %in% c("St. Lucie Reef", "Jupiter", "West Palm Beach", "Boynton Beach", "Pompano/LBTS")) %>% dplyr::select(-site) %>% droplevels()
seflPastPopsMigrate = seflSites %>% group_by(region) %>% summarise(latDD = first(latDD), longDD = first(longDD)) %>% filter(region %in% c("St. Lucie Reef", "Jupiter", "West Palm Beach", "Boynton Beach", "Pompano/LBTS")) %>% dplyr::select(-site) %>% droplevels()
seflPastPopsMigrate = seflSites %>% group_by(region) %>% summarise(latDD = first(latDD), longDD = first(longDD)) %>% filter(region %in% c("St. Lucie Reef", "Jupiter", "West Palm Beach", "Boynton Beach", "Pompano/LBTS")) %>% dplyr::select(-region) %>% droplevels()
View(seflPastPopsMigrate)
seflPastPopsMigrate = seflSites %>% group_by(region) %>% summarise(latDD = first(latDD), longDD = first(longDD)) %>% filter(region %in% c("St. Lucie Reef", "Jupiter", "West Palm Beach", "Boynton Beach", "Pompano/LBTS")) %>% droplevels()
View(seflPastPopsMigrate)
seflPastPopsMigrate = seflPastPopsMigrate[-5,]
migratePal = c("St. Lucie Reef" = flPal[1], "Jupiter" = flPal[2], "West Palm Beach" = flPal[3], "Boynton Beach" = flPal[4], "Pompano/LBTS = flPal[5]")
baMapData = baSumm %>% left_join(seflPastPopsMigrate, by = c("region.i" = "region")) %>% left_join(seflPastPopsMigrate, by = c("region.j" = "region"), suffix = c(".i", ".j")) %>% filter(mean >= 0.02)
for(x in 1:nrow(baMapData)) {
if (baMapData$pop.i[x] == baMapData$pop.j[x]) {
baMapData$latDD.i[x] = NA;
baMapData$latDD.j[x] = NA;
baMapData$longDD.i[x] = NA;
baMapData$longDD.j[x] = NA;
baMapData$mean[x] = NA;
baMapData$median[x] = NA
}
}
migrateMap = ggplot() +
geom_sf(data = florida, fill = "white", size = 0.25) +
#I need this one
geom_curve(data = baMapData, aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "closed", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE)
florida = read_sf("data_files/shp/flCountiesLo.shp") %>% st_transform(crs = 4326)
library(sf)
florida = read_sf("data_files/shp/flCountiesLo.shp") %>% st_transform(crs = 4326)
migrateMap = ggplot() +
geom_sf(data = florida, fill = "white", size = 0.25) +
#I need this one
geom_curve(data = baMapData, aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i, color = region.j, size = mean), arrow = arrow(type = "closed", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE)
geom_point(data = seflPastPopsMigrate, aes(x = longDD, y = latDD, fill = region), size = 3.5) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = migratePal, guide = NULL) +
scale_size(range = c(0.5, 2), breaks = c(0.02,0.06,0.1,0.14,0.18,0.22),name = expression(paste(italic("m")))) +
# scale_size_binned(range = c(0.25, 1.5), breaks = seq(0.02,0.2, by = 0.04), name = expression(paste(italic("m")))) +
scale_linetype_manual(values = lines, name = "Source depth") +
coord_sf(xlim = c(-83.1, -80.25), ylim = c(24.3, 25.3)) +
scale_x_continuous(breaks = c(seq(-84, -80, by = .5))) +
scale_y_continuous(breaks = c(seq(24, 26, by = .2))) +
annotation_scale(location = "br") +
annotation_north_arrow(location = "br", which_north = "true", style = north_arrow_minimal(), pad_x = unit(-0.25, "cm") , pad_y = unit(0.75, "cm")) +
guides(fill = guide_legend(override.aes = list(shape = 22, color = NA, size = 4),ncol = 2, order = 1), shape = guide_legend(override.aes = list(size = 3), order = 2), size = guide_legend(override.aes = list(linetype = 1, shape = NA, alpha = 1, arrow = arrow(length = unit(0, "pt"))), order = 3, ncol = 3)) +
theme_bw() +
theme(panel.background = element_rect(fill = "aliceblue"),
panel.border = element_rect(color = "black", size = 0.75, fill = NA),
axis.title = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
legend.position = "bottom",
legend.direction = "vertical",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_blank()
)
migrateMap = ggplot() +
geom_sf(data = florida, fill = "white", size = 0.25) +
#I need this one
geom_curve(data = baMapData, aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i, color = region.j, size = mean), arrow = arrow(type = "closed", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
geom_point(data = seflPastPopsMigrate, aes(x = longDD, y = latDD, fill = region), size = 3.5) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = migratePal, guide = NULL) +
scale_size(range = c(0.5, 2), breaks = c(0.02,0.06,0.1,0.14,0.18,0.22),name = expression(paste(italic("m")))) +
# scale_size_binned(range = c(0.25, 1.5), breaks = seq(0.02,0.2, by = 0.04), name = expression(paste(italic("m")))) +
scale_linetype_manual(values = lines, name = "Source depth") +
coord_sf(xlim = c(-83.1, -80.25), ylim = c(24.3, 25.3)) +
scale_x_continuous(breaks = c(seq(-84, -80, by = .5))) +
scale_y_continuous(breaks = c(seq(24, 26, by = .2))) +
annotation_scale(location = "br") +
annotation_north_arrow(location = "br", which_north = "true", style = north_arrow_minimal(), pad_x = unit(-0.25, "cm") , pad_y = unit(0.75, "cm")) +
guides(fill = guide_legend(override.aes = list(shape = 22, color = NA, size = 4),ncol = 2, order = 1), shape = guide_legend(override.aes = list(size = 3), order = 2), size = guide_legend(override.aes = list(linetype = 1, shape = NA, alpha = 1, arrow = arrow(length = unit(0, "pt"))), order = 3, ncol = 3)) +
theme_bw() +
theme(panel.background = element_rect(fill = "aliceblue"),
panel.border = element_rect(color = "black", size = 0.75, fill = NA),
axis.title = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
legend.position = "bottom",
legend.direction = "vertical",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_blank()
)
migrateMap = ggplot() +
geom_sf(data = florida, fill = "white", size = 0.25) +
#I need this one
geom_curve(data = baMapData, aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i, color = region.j, size = mean), arrow = arrow(type = "closed", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
##then can edit them/make them prettier using this code, won't need as many as Ryan possibly?
geom_curve(data = baMapData[c(2),], aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i-0.03, color = region.j, linetype = depth.j, size = mean), alpha = 0.7, arrow = arrow(type = "open", length = unit(0.0225, "npc")), curvature = -3) +
geom_curve(data = baMapData[c(3, 6),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.02, yend = latDD.i-0.02, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
geom_curve(data = baMapData[c(11),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.02, yend = latDD.i-0.02, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 0.2, na.rm = TRUE) +
geom_curve(data = baMapData[c(25),], aes(x = longDD.j, y = latDD.j, xend = longDD.i-0.05, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
geom_curve(data = baMapData[c(12),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.02, yend = latDD.i-0.04, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.35, na.rm = TRUE) +
geom_curve(data = baMapData[c(14),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.02, yend = latDD.i+0.02, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
geom_curve(data = baMapData[c(4),], aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i+0.03, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -3, na.rm = TRUE) +
geom_curve(data = baMapData[c(21),], aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i-0.02, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -9, na.rm = TRUE) +
geom_curve(data = baMapData[c(27),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.03, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 2, na.rm = TRUE) +
geom_curve(data = baMapData[c(24, 29),], aes(x = longDD.j, y = latDD.j, xend = longDD.i-0.03, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 0.2, na.rm = TRUE) +
geom_curve(data = baMapData[c(8, 13),], aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i+0.03, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 0.2, na.rm = TRUE) +
geom_curve(data = baMapData[c(10, 16),], aes(x = longDD.j, y = latDD.j, xend = longDD.i +0.03, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.25, na.rm = TRUE) +
geom_curve(data = baMapData[c(23, 28),], aes(x = longDD.j, y = latDD.j, xend = longDD.i-0.04, yend = latDD.i+0.01, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
geom_curve(data = baMapData[c(19, 20),], aes(x = longDD.j, y = latDD.j, xend = longDD.i-0.04, yend = latDD.i+0.02, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
geom_curve(data = baMapData[c(7),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.03, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 0.25, na.rm = TRUE) +
geom_curve(data = baMapData[c(17),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.03, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -.35, na.rm = TRUE) +
#Ryan's from another version, will only be helpful as reference maybe
# geom_curve(data = baMapData[c(3, 6),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.02, yend = latDD.i-0.01, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(11),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.02, yend = latDD.i-0.01, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 0.2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(24),], aes(x = longDD.j, y = latDD.j, xend = longDD.i-0.04, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(12),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.01, yend = latDD.i-0.03, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.35, na.rm = TRUE) +
# geom_curve(data = baMapData[c(14),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.01, yend = latDD.i+0.01, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(2),], aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i-0.02, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -3, na.rm = TRUE) +
# geom_curve(data = baMapData[c(4),], aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i+0.02, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -3, na.rm = TRUE) +
# geom_curve(data = baMapData[c(20),], aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i-0.015, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -9, na.rm = TRUE) +
#  geom_curve(data = baMapData[c(26),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.02, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(23, 28),], aes(x = longDD.j, y = latDD.j, xend = longDD.i-0.02, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 0.2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(8, 13),], aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i+0.02, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 0.2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(10, 16),], aes(x = longDD.j, y = latDD.j, xend = longDD.i +0.02, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.25, na.rm = TRUE) +
# geom_curve(data = baMapData[c(22, 27),], aes(x = longDD.j, y = latDD.j, xend = longDD.i-0.03, yend = latDD.i+0.01, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(18, 19),], aes(x = longDD.j, y = latDD.j, xend = longDD.i-0.03, yend = latDD.i+0.01, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(7),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.02, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 0.25, na.rm = TRUE) +
library(ggspatial)
migrateMap = ggplot() +
geom_sf(data = florida, fill = "white", size = 0.25) +
#I need this one
geom_curve(data = baMapData, aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i, color = region.j, size = mean), arrow = arrow(type = "closed", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
##then can edit them/make them prettier using this code, won't need as many as Ryan possibly?
#  geom_curve(data = baMapData[c(2),], aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i-0.03, color = region.j, linetype = depth.j, size = mean), alpha = 0.7, arrow = arrow(type = "open", length = unit(0.0225, "npc")), curvature = -3) +
#  geom_curve(data = baMapData[c(3, 6),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.02, yend = latDD.i-0.02, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
#  geom_curve(data = baMapData[c(11),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.02, yend = latDD.i-0.02, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 0.2, na.rm = TRUE) +
#  geom_curve(data = baMapData[c(25),], aes(x = longDD.j, y = latDD.j, xend = longDD.i-0.05, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
#  geom_curve(data = baMapData[c(12),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.02, yend = latDD.i-0.04, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.35, na.rm = TRUE) +
#  geom_curve(data = baMapData[c(14),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.02, yend = latDD.i+0.02, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
#  geom_curve(data = baMapData[c(4),], aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i+0.03, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -3, na.rm = TRUE) +
#  geom_curve(data = baMapData[c(21),], aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i-0.02, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -9, na.rm = TRUE) +
#  geom_curve(data = baMapData[c(27),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.03, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 2, na.rm = TRUE) +
#  geom_curve(data = baMapData[c(24, 29),], aes(x = longDD.j, y = latDD.j, xend = longDD.i-0.03, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 0.2, na.rm = TRUE) +
#  geom_curve(data = baMapData[c(8, 13),], aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i+0.03, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 0.2, na.rm = TRUE) +
#  geom_curve(data = baMapData[c(10, 16),], aes(x = longDD.j, y = latDD.j, xend = longDD.i +0.03, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.25, na.rm = TRUE) +
#  geom_curve(data = baMapData[c(23, 28),], aes(x = longDD.j, y = latDD.j, xend = longDD.i-0.04, yend = latDD.i+0.01, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
#  geom_curve(data = baMapData[c(19, 20),], aes(x = longDD.j, y = latDD.j, xend = longDD.i-0.04, yend = latDD.i+0.02, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
#  geom_curve(data = baMapData[c(7),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.03, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 0.25, na.rm = TRUE) +
#  geom_curve(data = baMapData[c(17),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.03, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -.35, na.rm = TRUE) +
#Ryan's from another version, will only be helpful as reference maybe
# geom_curve(data = baMapData[c(3, 6),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.02, yend = latDD.i-0.01, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(11),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.02, yend = latDD.i-0.01, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 0.2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(24),], aes(x = longDD.j, y = latDD.j, xend = longDD.i-0.04, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(12),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.01, yend = latDD.i-0.03, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.35, na.rm = TRUE) +
# geom_curve(data = baMapData[c(14),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.01, yend = latDD.i+0.01, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(2),], aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i-0.02, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -3, na.rm = TRUE) +
# geom_curve(data = baMapData[c(4),], aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i+0.02, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -3, na.rm = TRUE) +
# geom_curve(data = baMapData[c(20),], aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i-0.015, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -9, na.rm = TRUE) +
#  geom_curve(data = baMapData[c(26),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.02, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(23, 28),], aes(x = longDD.j, y = latDD.j, xend = longDD.i-0.02, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 0.2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(8, 13),], aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i+0.02, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 0.2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(10, 16),], aes(x = longDD.j, y = latDD.j, xend = longDD.i +0.02, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.25, na.rm = TRUE) +
# geom_curve(data = baMapData[c(22, 27),], aes(x = longDD.j, y = latDD.j, xend = longDD.i-0.03, yend = latDD.i+0.01, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(18, 19),], aes(x = longDD.j, y = latDD.j, xend = longDD.i-0.03, yend = latDD.i+0.01, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
# geom_curve(data = baMapData[c(7),], aes(x = longDD.j, y = latDD.j, xend = longDD.i+0.02, yend = latDD.i, color = region.j, linetype = depth.j, size = mean), arrow = arrow(type = "open", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = 0.25, na.rm = TRUE) +
library(ggspatial)
library(ggspatial)
migrateMap = ggplot() +
geom_sf(data = florida, fill = "white", size = 0.25) +
#I need this one
geom_curve(data = baMapData, aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i, color = region.j, size = mean), arrow = arrow(type = "closed", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
geom_point(data = seflPastPopsMigrate, aes(x = longDD, y = latDD, fill = region), size = 3.5) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = migratePal, guide = NULL) +
scale_size(range = c(0.5, 2), breaks = c(0.02,0.06,0.1,0.14,0.18,0.22),name = expression(paste(italic("m")))) +
# scale_size_binned(range = c(0.25, 1.5), breaks = seq(0.02,0.2, by = 0.04), name = expression(paste(italic("m")))) +
scale_linetype_manual(values = lines, name = "Source depth") +
coord_sf(xlim = c(-83.1, -80.25), ylim = c(24.3, 25.3)) +
scale_x_continuous(breaks = c(seq(-84, -80, by = .5))) +
scale_y_continuous(breaks = c(seq(24, 26, by = .2))) +
annotation_scale(location = "br") +
annotation_north_arrow(location = "br", which_north = "true", style = north_arrow_minimal(), pad_x = unit(-0.25, "cm") , pad_y = unit(0.75, "cm")) +
guides(fill = guide_legend(override.aes = list(shape = 22, color = NA, size = 4),ncol = 2, order = 1), shape = guide_legend(override.aes = list(size = 3), order = 2), size = guide_legend(override.aes = list(linetype = 1, shape = NA, alpha = 1, arrow = arrow(length = unit(0, "pt"))), order = 3, ncol = 3)) +
theme_bw() +
theme(panel.background = element_rect(fill = "aliceblue"),
panel.border = element_rect(color = "black", size = 0.75, fill = NA),
axis.title = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
legend.position = "bottom",
legend.direction = "vertical",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_blank()
)
migrateMap
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/migrateMap.png", plot = migrateMap, width = 25.5, height = 15, units = "cm",
dpi = 300)
migrateMap = ggplot() +
geom_sf(data = florida, fill = "white", size = 0.25) +
#I need this one
geom_curve(data = baMapData, aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i, color = region.j, size = mean), arrow = arrow(type = "closed", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
geom_point(data = seflPastPopsMigrate, aes(x = longDD, y = latDD, fill = region), size = 3.5) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = migratePal, guide = NULL) +
scale_size(range = c(0.5, 2), breaks = c(0.02,0.06,0.1,0.14,0.18,0.22),name = expression(paste(italic("m")))) +
# scale_size_binned(range = c(0.25, 1.5), breaks = seq(0.02,0.2, by = 0.04), name = expression(paste(italic("m")))) +
scale_linetype_manual(values = lines, name = "Source depth") +
coord_sf(xlim = c(-80.2, -80.00), ylim = c(26.5, 27.2)) +
scale_x_continuous(breaks = c(seq(-81, -80, by = 0.05))) +
scale_y_continuous(breaks = c(seq(26, 28, by = .2))) +
annotation_scale(location = "br") +
annotation_north_arrow(location = "br", which_north = "true", style = north_arrow_minimal(), pad_x = unit(-0.25, "cm") , pad_y = unit(0.75, "cm")) +
guides(fill = guide_legend(override.aes = list(shape = 22, color = NA, size = 4),ncol = 2, order = 1), shape = guide_legend(override.aes = list(size = 3), order = 2), size = guide_legend(override.aes = list(linetype = 1, shape = NA, alpha = 1, arrow = arrow(length = unit(0, "pt"))), order = 3, ncol = 3)) +
theme_bw() +
theme(panel.background = element_rect(fill = "aliceblue"),
panel.border = element_rect(color = "black", size = 0.75, fill = NA),
axis.title = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
legend.position = "bottom",
legend.direction = "vertical",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_blank()
)
migrateMap
?scale_size
migrateMap = ggplot() +
geom_sf(data = florida, fill = "white", size = 0.25) +
#I need this one
geom_curve(data = baMapData, aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i, color = region.j, size = mean), arrow = arrow(type = "closed", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
geom_point(data = seflPastPopsMigrate, aes(x = longDD, y = latDD, fill = region), size = 3.5) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = migratePal, guide = NULL) +
#  scale_size(range = c(0.5, 2), breaks = c(0.02,0.06,0.1,0.14,0.18,0.22), name = expression(paste(italic("m")))) +
# scale_size_binned(range = c(0.25, 1.5), breaks = seq(0.02,0.2, by = 0.04), name = expression(paste(italic("m")))) +
#  scale_linetype_manual(values = lines, name = "Source depth") +
coord_sf(xlim = c(-80.2, -80.00), ylim = c(26.5, 27.2)) +
scale_x_continuous(breaks = c(seq(-81, -80, by = 0.05))) +
scale_y_continuous(breaks = c(seq(26, 28, by = .2))) +
annotation_scale(location = "br") +
annotation_north_arrow(location = "br", which_north = "true", style = north_arrow_minimal(), pad_x = unit(-0.25, "cm") , pad_y = unit(0.75, "cm")) +
guides(fill = guide_legend(override.aes = list(shape = 22, color = NA, size = 4),ncol = 2, order = 1), shape = guide_legend(override.aes = list(size = 3), order = 2), size = guide_legend(override.aes = list(linetype = 1, shape = NA, alpha = 1, arrow = arrow(length = unit(0, "pt"))), order = 3, ncol = 3)) +
theme_bw() +
theme(panel.background = element_rect(fill = "aliceblue"),
panel.border = element_rect(color = "black", size = 0.75, fill = NA),
axis.title = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
legend.position = "bottom",
legend.direction = "vertical",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_blank()
)
migrateMap
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/migrateMap.png", plot = migrateMap, width = 25.5, height = 15, units = "cm",
dpi = 300)
View(seflPastPopsMigrate)
seflPastPopsMigrate = seflSites %>% group_by(region) %>% summarise(latDD = first(latDD), longDD = first(longDD)) %>% filter(region %in% c("St. Lucie Reef", "Jupiter", "West Palm Beach", "Boynton Beach", "Pompano/LBTS")) %>% droplevels()
View(seflPastPopsMigrate)
migratePal = c("St. Lucie Reef" = flPal[1], "Jupiter" = flPal[2], "West Palm Beach" = flPal[3], "Boynton Beach" = flPal[4], "Pompano/LBTS = flPal[5]")
baMapData = baSumm %>% left_join(seflPastPopsMigrate, by = c("region.i" = "region")) %>% left_join(seflPastPopsMigrate, by = c("region.j" = "region"), suffix = c(".i", ".j")) %>% filter(mean >= 0.02)
for(x in 1:nrow(baMapData)) {
if (baMapData$pop.i[x] == baMapData$pop.j[x]) {
baMapData$latDD.i[x] = NA;
baMapData$latDD.j[x] = NA;
baMapData$longDD.i[x] = NA;
baMapData$longDD.j[x] = NA;
baMapData$mean[x] = NA;
baMapData$median[x] = NA
}
}
florida = read_sf("data_files/shp/flCountiesLo.shp") %>% st_transform(crs = 4326)
migrateMap = ggplot() +
geom_sf(data = florida, fill = "white", size = 0.25) +
#I need this one
geom_curve(data = baMapData, aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i, color = region.j, size = mean), arrow = arrow(type = "closed", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
geom_point(data = seflPastPopsMigrate, aes(x = longDD, y = latDD, fill = region), size = 3.5) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = migratePal, guide = NULL) +
#  scale_size(range = c(0.5, 2), breaks = c(0.02,0.06,0.1,0.14,0.18,0.22), name = expression(paste(italic("m")))) +
# scale_size_binned(range = c(0.25, 1.5), breaks = seq(0.02,0.2, by = 0.04), name = expression(paste(italic("m")))) +
#  scale_linetype_manual(values = lines, name = "Source depth") +
coord_sf(xlim = c(-80.6, -79.2), ylim = c(26, 27.2)) +
scale_x_continuous(breaks = c(seq(-80.6, -79.2, by = 0.2)), labels = longLab) +
scale_y_continuous(breaks = c(seq(26, 27.2, by = 0.2)), labels = latLab) +
annotation_scale(location = "br") +
annotation_north_arrow(location = "br", which_north = "true", style = north_arrow_minimal(), pad_x = unit(-0.25, "cm") , pad_y = unit(0.75, "cm")) +
guides(fill = guide_legend(override.aes = list(shape = 22, color = NA, size = 4),ncol = 2, order = 1), shape = guide_legend(override.aes = list(size = 3), order = 2), size = guide_legend(override.aes = list(linetype = 1, shape = NA, alpha = 1, arrow = arrow(length = unit(0, "pt"))), order = 3, ncol = 3)) +
theme_bw() +
theme(panel.background = element_rect(fill = "aliceblue"),
panel.border = element_rect(color = "black", size = 0.75, fill = NA),
axis.title = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
legend.position = "bottom",
legend.direction = "vertical",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_blank()
)
migrateMap = ggplot() +
geom_sf(data = florida, fill = "white", size = 0.25) +
#I need this one
geom_curve(data = baMapData, aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i, color = region.j, size = mean), arrow = arrow(type = "closed", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
geom_point(data = seflPastPopsMigrate, aes(x = longDD, y = latDD, fill = region), size = 3.5) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = migratePal, guide = NULL) +
#  scale_size(range = c(0.5, 2), breaks = c(0.02,0.06,0.1,0.14,0.18,0.22), name = expression(paste(italic("m")))) +
# scale_size_binned(range = c(0.25, 1.5), breaks = seq(0.02,0.2, by = 0.04), name = expression(paste(italic("m")))) +
#  scale_linetype_manual(values = lines, name = "Source depth") +
coord_sf(xlim = c(-80.6, -79.2), ylim = c(26, 27.2)) +
scale_x_continuous(breaks = c(seq(-80.6, -79.2, by = 0.2))) +
scale_y_continuous(breaks = c(seq(26, 27.2, by = 0.2))) +
annotation_scale(location = "br") +
annotation_north_arrow(location = "br", which_north = "true", style = north_arrow_minimal(), pad_x = unit(-0.25, "cm") , pad_y = unit(0.75, "cm")) +
guides(fill = guide_legend(override.aes = list(shape = 22, color = NA, size = 4),ncol = 2, order = 1), shape = guide_legend(override.aes = list(size = 3), order = 2), size = guide_legend(override.aes = list(linetype = 1, shape = NA, alpha = 1, arrow = arrow(length = unit(0, "pt"))), order = 3, ncol = 3)) +
theme_bw() +
theme(panel.background = element_rect(fill = "aliceblue"),
panel.border = element_rect(color = "black", size = 0.75, fill = NA),
axis.title = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
legend.position = "bottom",
legend.direction = "vertical",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_blank()
)
migrateMap
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/migrateMap.png", plot = migrateMap, width = 25.5, height = 15, units = "cm",
dpi = 300)
View(seflPastPopsMigrate)
View(migrateMap)
View(pastSamples)
seflSites = pastSamples %>% group_by(region)%>% summarize(latDD = first(site_lat), longDD = first(site_long), depthRangeM = paste(min(depthM), "-", max(depthM), sep = ""), n = n(), date = as.character(min(collection_date))) %>% droplevels(collection_date) %>% as.data.frame()
View(seflPastPopsMigrate)
View(pastSamples)
pastSamples = read.csv("data_files/poritesastreoidesMetaData_clonesremoved.csv", header = TRUE) %>% select(sample = tube_id, !sample_id)
library(lubridate)
library(measurements)
pastSamples$region = factor(pastSamples$region)
pastSamples$region = factor(pastSamples$region, levels = levels(pastSamples$region)[c(4, 2, 5, 1, 3)])
#pastSamples$collection_date = mdy(pastSamples$collection_date) %>% format("%d %b %Y")
pastSamples$depthM = conv_unit(pastSamples$collection_depth_ft, from = "ft", to = "m") %>% round(1)
seflSites = pastSamples %>% group_by(region)%>% summarize(latDD = first(site_lat), longDD = first(site_long), depthRangeM = paste(min(depthM), "-", max(depthM), sep = ""), n = n(), date = as.character(min(collection_date))) %>% droplevels() %>% as.data.frame()
seflSites = pastSamples %>% group_by(region)%>% summarize(latDD = first(site_lat), longDD = first(site_long), depthRangeM = paste(min(depthM), "-", max(depthM), sep = ""), n = n()) %>% droplevels() %>% as.data.frame()
seflPastPopsMigrate = seflSites %>% group_by(region) %>% summarise(latDD = first(latDD), longDD = first(longDD)) %>% filter(region %in% c("St. Lucie Reef", "Jupiter", "West Palm Beach", "Boynton Beach", "Pompano/LBTS")) %>% droplevels()
migratePal = c("St. Lucie Reef" = flPal[1], "Jupiter" = flPal[2], "West Palm Beach" = flPal[3], "Boynton Beach" = flPal[4], "Pompano/LBTS = flPal[5]")
baMapData = baSumm %>% left_join(seflPastPopsMigrate, by = c("region.i" = "region")) %>% left_join(seflPastPopsMigrate, by = c("region.j" = "region"), suffix = c(".i", ".j")) %>% filter(mean >= 0.02)
for(x in 1:nrow(baMapData)) {
if (baMapData$pop.i[x] == baMapData$pop.j[x]) {
baMapData$latDD.i[x] = NA;
baMapData$latDD.j[x] = NA;
baMapData$longDD.i[x] = NA;
baMapData$longDD.j[x] = NA;
baMapData$mean[x] = NA;
baMapData$median[x] = NA
}
}
library(sf)
florida = read_sf("data_files/shp/flCountiesLo.shp") %>% st_transform(crs = 4326)
migrateMap = ggplot() +
geom_sf(data = florida, fill = "white", size = 0.25) +
#I need this one
geom_curve(data = baMapData, aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i, color = region.j, size = mean), arrow = arrow(type = "closed", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
geom_point(data = seflPastPopsMigrate, aes(x = longDD, y = latDD, fill = region), size = 3.5) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = migratePal, guide = NULL) +
#  scale_size(range = c(0.5, 2), breaks = c(0.02,0.06,0.1,0.14,0.18,0.22), name = expression(paste(italic("m")))) +
# scale_size_binned(range = c(0.25, 1.5), breaks = seq(0.02,0.2, by = 0.04), name = expression(paste(italic("m")))) +
#  scale_linetype_manual(values = lines, name = "Source depth") +
coord_sf(xlim = c(-80.6, -79.2), ylim = c(26, 27.2)) +
scale_x_continuous(breaks = c(seq(-80.6, -79.2, by = 0.2))) +
scale_y_continuous(breaks = c(seq(26, 27.2, by = 0.2))) +
annotation_scale(location = "br") +
annotation_north_arrow(location = "br", which_north = "true", style = north_arrow_minimal(), pad_x = unit(-0.25, "cm") , pad_y = unit(0.75, "cm")) +
guides(fill = guide_legend(override.aes = list(shape = 22, color = NA, size = 4),ncol = 2, order = 1), shape = guide_legend(override.aes = list(size = 3), order = 2), size = guide_legend(override.aes = list(linetype = 1, shape = NA, alpha = 1, arrow = arrow(length = unit(0, "pt"))), order = 3, ncol = 3)) +
theme_bw() +
theme(panel.background = element_rect(fill = "aliceblue"),
panel.border = element_rect(color = "black", size = 0.75, fill = NA),
axis.title = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
legend.position = "bottom",
legend.direction = "vertical",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_blank()
)
migrateMap
View(florida)
View(migrateA)
View(migrateA)
View(pastSamples)
pastSamples = read.csv("data_files/poritesastreoidesMetaData_clonesremoved.csv", header = TRUE) %>% select(sample = tube_id, !sample_id)
pastSamples$region = factor(pastSamples$region)
pastSamples$region = factor(pastSamples$region, levels = levels(pastSamples$region)[c(4, 2, 5, 1, 3)])
#pastSamples$collection_date = mdy(pastSamples$collection_date) %>% format("%d %b %Y")
pastSamples$depthM = conv_unit(pastSamples$collection_depth_ft, from = "ft", to = "m") %>% round(1)
seflSites = pastSamples %>% group_by(region)%>% summarize(latDD = first(site_lat), longDD = first(site_long), depthRangeM = paste(min(depthM), "-", max(depthM), sep = ""), n = n()) %>% droplevels() %>% as.data.frame()
seflPastPopsMigrate = seflSites %>% group_by(region) %>% summarise(latDD = first(latDD), longDD = first(longDD)) %>% filter(region %in% c("St. Lucie Reef", "Jupiter", "West Palm Beach", "Boynton Beach", "Pompano/LBTS")) %>% droplevels()
baMapData = baSumm %>% left_join(seflPastPopsMigrate, by = c("region.i" = "region")) %>% left_join(seflPastPopsMigrate, by = c("region.j" = "region"), suffix = c(".i", ".j")) %>% filter(mean >= 0.02)
for(x in 1:nrow(baMapData)) {
if (baMapData$pop.i[x] == baMapData$pop.j[x]) {
baMapData$latDD.i[x] = NA;
baMapData$latDD.j[x] = NA;
baMapData$longDD.i[x] = NA;
baMapData$longDD.j[x] = NA;
baMapData$mean[x] = NA;
baMapData$median[x] = NA
}
}
migrateMap = ggplot() +
geom_sf(data = florida, fill = "white", size = 0.25) +
#I need this one
geom_curve(data = baMapData, aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i, color = region.j, size = mean), arrow = arrow(type = "closed", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
geom_point(data = seflPastPopsMigrate, aes(x = longDD, y = latDD, fill = region), size = 3.5) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = migratePal, guide = NULL) +
#  scale_size(range = c(0.5, 2), breaks = c(0.02,0.06,0.1,0.14,0.18,0.22), name = expression(paste(italic("m")))) +
# scale_size_binned(range = c(0.25, 1.5), breaks = seq(0.02,0.2, by = 0.04), name = expression(paste(italic("m")))) +
#  scale_linetype_manual(values = lines, name = "Source depth") +
coord_sf(xlim = c(-80.6, -79.2), ylim = c(26, 27.2)) +
scale_x_continuous(breaks = c(seq(-80.6, -79.2, by = 0.2))) +
scale_y_continuous(breaks = c(seq(26, 27.2, by = 0.2))) +
annotation_scale(location = "br") +
annotation_north_arrow(location = "br", which_north = "true", style = north_arrow_minimal(), pad_x = unit(-0.25, "cm") , pad_y = unit(0.75, "cm")) +
guides(fill = guide_legend(override.aes = list(shape = 22, color = NA, size = 4),ncol = 2, order = 1), shape = guide_legend(override.aes = list(size = 3), order = 2), size = guide_legend(override.aes = list(linetype = 1, shape = NA, alpha = 1, arrow = arrow(length = unit(0, "pt"))), order = 3, ncol = 3)) +
theme_bw() +
theme(panel.background = element_rect(fill = "aliceblue"),
panel.border = element_rect(color = "black", size = 0.75, fill = NA),
axis.title = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
legend.position = "bottom",
legend.direction = "vertical",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_blank()
)
migrateMap
View(seflPastPopsMigrate)
migrateMap = ggplot() +
geom_sf(data = florida, fill = "white", size = 0.25) +
#I need this one
geom_curve(data = baMapData, aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i, color = region.j, size = mean), arrow = arrow(type = "closed", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.2, na.rm = TRUE) +
geom_point(data = seflPastPopsMigrate, aes(x = longDD, y = latDD, fill = region), size = 3.5) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = migratePal, guide = NULL) +
#  scale_size(range = c(0.5, 2), breaks = c(0.02,0.06,0.1,0.14,0.18,0.22), name = expression(paste(italic("m")))) +
# scale_size_binned(range = c(0.25, 1.5), breaks = seq(0.02,0.2, by = 0.04), name = expression(paste(italic("m")))) +
#  scale_linetype_manual(values = lines, name = "Source depth") +
coord_sf(xlim = c(-80.6, -79.2), ylim = c(26, 27.2)) +
scale_x_continuous(breaks = c(seq(-80.6, -79.2, by = 0.2))) +
scale_y_continuous(breaks = c(seq(26, 27.2, by = 0.2))) +
annotation_scale(location = "br") +
#  annotation_north_arrow(location = "br", which_north = "true", style = north_arrow_minimal(), pad_x = unit(-0.25, "cm") , pad_y = unit(0.75, "cm")) +
guides(fill = guide_legend(override.aes = list(shape = 22, color = NA, size = 4),ncol = 2, order = 1), shape = guide_legend(override.aes = list(size = 3), order = 2), size = guide_legend(override.aes = list(linetype = 1, shape = NA, alpha = 1, arrow = arrow(length = unit(0, "pt"))), order = 3, ncol = 3)) +
theme_bw() +
theme(panel.background = element_rect(fill = "aliceblue"),
panel.border = element_rect(color = "black", size = 0.75, fill = NA),
axis.title = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
legend.position = "bottom",
legend.direction = "vertical",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_blank()
)
migrateMap
View(seflPastPopsMigrate)
View(baMapData)
library(tidyverse)
fileList = substr(list.files("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/bayesAss/", "BA3trace.*.txt$"),1,10)
bayesian_deviance <- function(trace, burnin = 0, sampling.interval = 0){
if(burnin == 0) stop('No burnin specified')
if(sampling.interval == 0) stop('No sampling interval specified')
range <- (trace$State > burnin & trace$State %% sampling.interval == 0)
D <- -2*mean(trace$LogProb[range])
return(D)
}
for(i in 1:length(fileList)){
assign(fileList[i], read.delim(paste("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/bayesAss/", fileList[i], ".txt", sep = ""))) %>% dplyr::select(-last_col())
print(paste(fileList[i], bayesian_deviance(get(fileList[i]), burnin = 2000000, sampling.interval = 100)))
}
bayesAss = read.delim("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/bayesAss/BA3trace07.txt") %>% filter(State > 2000000) %>% dplyr::select(-State, -LogProb, -X)
baMean = bayesAss %>% summarise(across(everything(), list(mean))) %>% t() %>% as_tibble() %>% rename(., mean=V1) %>% mutate(pops = colnames(bayesAss))
baSumm = bayesAss %>% summarise(across(everything(), list(median))) %>% t() %>% as_tibble() %>% rename(., median=V1) %>% mutate(pops = baMean$pops, mean = round(baMean$mean, 3)) %>% relocate(median, .after = mean)
baSumm$median = round(baSumm$median, 3)
library(TeachingDemos)
baHpd =as.data.frame(t(sapply(bayesAss, emp.hpd)))
colnames(baHpd) = c("hpdLow", "hpdHigh")
baHpd$pops = rownames(baHpd)
library(LaplacesDemon)
ESS = as.data.frame(sapply(bayesAss, ESS))
baSumm = baSumm %>% left_join(baHpd)
baSumm$hpdLow = round(baSumm$hpdLow, 3)
baSumm$hpdHigh = round(baSumm$hpdHigh, 3)
baSumm$ESS = ESS
popi = rep(c("jupiter", "westpalm", "boynton", "stlucie", "pompano"), each = 5)
popj = rep(c("jupiter", "westpalm", "boynton", "stlucie", "pompano"), times = 5)
baSumm = baSumm %>% mutate(pop.i = popi, pop.j = popj) %>% relocate(c(pop.i, pop.j), .after = pops) %>% dplyr::select(-pops)
baSumm$pop.i = factor(baSumm$pop.i)
baSumm$pop.i = factor(baSumm$pop.i, levels = levels(baSumm$pop.i)[c(4, 2, 5, 1, 3)])
baSumm$pop.j = factor(baSumm$pop.j)
baSumm$pop.j = factor(baSumm$pop.j, levels = levels(baSumm$pop.j)[c(4, 2, 5, 1, 3)])
baSumm$region.i = word(baSumm$pop.i, 1, sep = "\n")
baSumm$region.i = factor(baSumm$region.i)
baSumm$region.i = factor(baSumm$region.i, levels = levels(baSumm$region.i)[c(4, 1, 3, 2)])
View(baSumm)
