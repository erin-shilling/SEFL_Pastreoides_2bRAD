scale_fill_manual(values = flPal, name = "Population") +
geom_hline(yintercept = 0.165, color = "red", lty = 5, size = 0.75) + # creating a dashed line to indicate a clonal distance threshold
geom_text(data = subset(cloneDendPoints, subset = label %in% techReps), aes(x = (x + 0.25), y = (y - .004), label = "*"), angle = 90, size = 10) + # spacing technical replicates further from leaf
#  geom_text(data = subset(cloneDendPoints, subset = !label %in% techReps), aes(x = x, y = (y - .010), label = "label"), angle = 90) +
labs(y = "Genetic distance (1 - IBS)") +
theme_classic()
cloneDend = cloneDendA + theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(size = 16, color = "black", angle = 90),
axis.text.y = element_text(size = 14, color = "black"),
axis.line.y = element_line(),
axis.ticks.y = element_line(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = "bottom")
cloneDend
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/cloneDend_nolabels.png", plot = cloneDend, height = 5, width = 16, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/cloneDend_nolabels.eps", plot = cloneDend, height = 5, width = 16, units = "in", dpi = 300)
library(tidyverse)
library(vcfR)
library(adegenet)
library(StAMPP)
library(gdata)
library(reshape2)
library(paletteer)
knitr::opts_chunk$set(echo = TRUE)
# setup rmarkdown environment first
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.align = 'left')
pastVcf = read.vcfR("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.bcf", verbose = FALSE)
pastGenlightPopulation = vcfR2genlight(pastVcf, n.cores = 1)
locNames(pastGenlightPopulation) = paste(pastVcf@fix[,1],pastVcf@fix[,2],sep="_")
popData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "pop" = region)
strata(pastGenlightPopulation) = data.frame(popData)
setPop(pastGenlightPopulation) = ~pop
View(popData)
pastGenlightPopulation$pop = factor(pastGenlightPopulation$pop)
levels(pastGenlightPopulation$pop)
pastGenlightPopulation$pop = factor(pastGenlightPopulation$pop,
levels(pastGenlightPopulation$pop)[c(4, 1, 2, 3, 5)])
set.seed(694)
sefl.fst <- stamppFst(pastGenlightPopulation, nboots = 99, percent = 95, nclusters = 2)
sefl.fst$Fsts
sefl.fst$Pvalues
View(sefl.fst)
pop.order = c("Pompano/LBTS", "Boynton Beach", "West Palm Beach", "Jupiter", "St. Lucie Reef")
#reads in Fst matrix
snpFstMa <- as.matrix(sefl.fst$Fsts)
View(snpFstMa)
colnames(snpFstMa) <- c(Jupiter, West Palm Beach, Boynton Beach, St. Lucie Reef, Ft. Lauderdale)
colnames(snpFstMa) <- c(Jupiter, West_Palm_Beach, Boynton_Beach, St._Lucie_Reef, Ft._Lauderdale)
colnames(snpFstMa)[5] <- "Ft. Lauderdale"
View(snpFstMa)
sefl.fst$Pvalues
pop.order = c("Pompano/LBTS", "Boynton Beach", "West Palm Beach", "Jupiter", "St. Lucie Reef")
#reads in Fst matrix
snpFstMa <- as.matrix(sefl.fst$Fsts)
colnames(snpFstMa)[5] <- "Ft. Lauderdale"
upperTriangle(snpFstMa, byrow = TRUE) <- lowerTriangle(snpFstMa)
snpFstMa <- snpFstMa[,pop.order] %>% .[pop.order,]
rownames(snpFstMa)[5] <- "Ft. Lauderdale"
View(snpFstMa)
pop.order = c("Ft. Lauderdale", "Boynton Beach", "West Palm Beach", "Jupiter", "St. Lucie Reef")
upperTriangle(snpFstMa, byrow = TRUE) <- lowerTriangle(snpFstMa)
snpFstMa <- snpFstMa[,pop.order] %>% .[pop.order,]
snpFstMa[upper.tri(snpFstMa)] <- NA
snpFstMa <- as.data.frame(snpFstMa)
snpFstMa$Pop = factor(row.names(snpFstMa))
snpQMa <- as.matrix(sefl.fst$Pvalues)
upperTriangle(snpQMa, byrow=TRUE) <- lowerTriangle(snpQMa)
snpQMa <- snpQMa[,pop.order] %>%
.[pop.order,]
snpQMa <- as.matrix(sefl.fst$Pvalues)
View(snpQMa)
pop.order = c("Pompano/LBTS", "Boynton Beach", "West Palm Beach", "Jupiter", "St. Lucie Reef")
#reads in Fst matrix
snpFstMa <- as.matrix(sefl.fst$Fsts)
View(snpFstMa)
upperTriangle(snpFstMa, byrow = TRUE) <- lowerTriangle(snpFstMa)
snpFstMa <- snpFstMa[,pop.order] %>% .[pop.order,]
snpFstMa[upper.tri(snpFstMa)] <- NA
snpFstMa <- as.data.frame(snpFstMa)
snpFstMa$Pop = factor(row.names(snpFstMa))
snpQMa <- as.matrix(sefl.fst$Pvalues)
upperTriangle(snpQMa, byrow=TRUE) <- lowerTriangle(snpQMa)
snpQMa <- snpQMa[,pop.order] %>%
.[pop.order,]
snpQMa[upper.tri(snpQMa)] <- NA
snpQMa <- as.data.frame(snpQMa)
snpQMa$Pop = factor(row.names(snpQMa), levels = unique(pop.order))
snpFstMa$Pop = factor(row.names(snpFstMa), levels = unique(pop.order))
snpFst = melt(snpFstMa, id.vars = "Pop", value.name = "Fst", variable.name = "Pop2", na.rm = FALSE)
snpFst$Fst = round(snpFst$Fst, 3)
snpFst = snpFst %>% mutate(Fst = replace(Fst, Fst < 0, 0))
snpQ = melt(snpQMa, id.vars = "Pop", value.name = "Pval", variable.name = "Pop2", na.rm = FALSE)
snpQ$Qval = p.adjust(snpQ$Pval, method = "BH")
snpFst$region = snpFst$Pop
snpFst$region = factor(gsub("\\n.*", "", snpFst$region))
snpFst$region = factor(snpFst$region, levels = levels(snpFst$region)[c(4, 2, 5, 1, 3)])
snpFst$region2 = snpFst$Pop2
snpFst$region2 = factor(gsub("\\n.*", "", snpFst$region2))
snpFst$region2 = factor(snpFst$region2, levels = levels(snpFst$region2)[c(4, 2, 5, 1, 3)])
snpFst$Fst = sprintf('%.3f', snpFst$Fst)
snpFst$Fst = factor(gsub("\\NA", NA, snpFst$Fst))
snpFst$Fst = factor(gsub("\\.000", "", snpFst$Fst))
snpFst$Fst = factor(gsub("\\-", "", snpFst$Fst))
View(snpFst)
snpFst$Pop[snpFst$Pop=="Pompano/LBTS"]<-"Ft. Lauderdale"
snpFst$Fst = sprintf('%.3f', snpFst$Fst)
snpFst$Fst = factor(gsub("\\NA", NA, snpFst$Fst))
snpFst$Fst = factor(gsub("\\.000", "", snpFst$Fst))
snpFst$Fst = factor(gsub("\\-", "", snpFst$Fst))
snpFst$region = snpFst$Pop
snpFst$region = factor(gsub("\\n.*", "", snpFst$region))
snpFst$region = factor(snpFst$region, levels = levels(snpFst$region)[c(4, 2, 5, 1, 3)])
snpFst$region2 = snpFst$Pop2
snpFst$region2 = factor(gsub("\\n.*", "", snpFst$region2))
snpFst$region2 = factor(snpFst$region2, levels = levels(snpFst$region2)[c(4, 2, 5, 1, 3)])
#reads in Fst matrix
snpFstMa <- as.matrix(sefl.fst$Fsts)
upperTriangle(snpFstMa, byrow = TRUE) <- lowerTriangle(snpFstMa)
snpFstMa <- snpFstMa[,pop.order] %>% .[pop.order,]
snpFstMa[upper.tri(snpFstMa)] <- NA
snpFstMa <- as.data.frame(snpFstMa)
snpFstMa$Pop = factor(row.names(snpFstMa))
snpQMa <- as.matrix(sefl.fst$Pvalues)
upperTriangle(snpQMa, byrow=TRUE) <- lowerTriangle(snpQMa)
snpQMa <- snpQMa[,pop.order] %>%
.[pop.order,]
snpQMa[upper.tri(snpQMa)] <- NA
snpQMa <- as.data.frame(snpQMa)
snpQMa$Pop = factor(row.names(snpQMa), levels = unique(pop.order))
snpFstMa$Pop = factor(row.names(snpFstMa), levels = unique(pop.order))
snpFst = melt(snpFstMa, id.vars = "Pop", value.name = "Fst", variable.name = "Pop2", na.rm = FALSE)
snpFst$Fst = round(snpFst$Fst, 3)
snpFst = snpFst %>% mutate(Fst = replace(Fst, Fst < 0, 0))
snpQ = melt(snpQMa, id.vars = "Pop", value.name = "Pval", variable.name = "Pop2", na.rm = FALSE)
snpQ$Qval = p.adjust(snpQ$Pval, method = "BH")
snpFst$region = snpFst$Pop
snpFst$region = factor(gsub("\\n.*", "", snpFst$region))
snpFst$region = factor(snpFst$region, levels = levels(snpFst$region)[c(4, 2, 5, 1, 3)])
snpFst$region2 = snpFst$Pop2
snpFst$region2 = factor(gsub("\\n.*", "", snpFst$region2))
snpFst$region2 = factor(snpFst$region2, levels = levels(snpFst$region2)[c(4, 2, 5, 1, 3)])
snpFst$Fst = sprintf('%.3f', snpFst$Fst)
snpFst$Fst = factor(gsub("\\NA", NA, snpFst$Fst))
snpFst$Fst = factor(gsub("\\.000", "", snpFst$Fst))
snpFst$Fst = factor(gsub("\\-", "", snpFst$Fst))
library(ggplot2)
library(paletteer)
baSumm$mean = sprintf('%.3f', baSumm$mean)
bayesAss = read.delim("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/bayesAss/BA3trace07.txt") %>% filter(State > 2000000) %>% dplyr::select(-State, -LogProb, -X)
baMean = bayesAss %>% summarise(across(everything(), list(mean))) %>% t() %>% as_tibble() %>% rename(., mean=V1) %>% mutate(pops = colnames(bayesAss))
baSumm = bayesAss %>% summarise(across(everything(), list(median))) %>% t() %>% as_tibble() %>% rename(., median=V1) %>% mutate(pops = baMean$pops, mean = round(baMean$mean, 3)) %>% relocate(median, .after = mean)
#takes median and makes it only 3 decimal places
baSumm$median = round(baSumm$median, 3)
library(TeachingDemos)
baHpd =as.data.frame(t(sapply(bayesAss, emp.hpd)))
colnames(baHpd) = c("hpdLow", "hpdHigh")
baHpd$pops = rownames(baHpd)
library(LaplacesDemon)
ESS = as.data.frame(sapply(bayesAss, ESS))
baSumm = baSumm %>% left_join(baHpd)
baSumm$hpdLow = round(baSumm$hpdLow, 3)
baSumm$hpdHigh = round(baSumm$hpdHigh, 3)
baSumm$ESS = ESS
#figure out how your pops are numbered by looking at one of your BAOut files
## Population Index -> Population Label:
#0->jupiter
#1->westpalm
#2->boynton
#3->stlucie
#4->pompano
#i and j are the sink & source populations
#i is the sink, j is the source
#write out how you want it to appear on your stepwise plot
popi = rep(c("Jupiter", "West Palm Beach", "Boynton Beach", "St. Lucie Reef", "Ft. Lauderdale"), each = 5)
popj = rep(c("Jupiter", "West Palm Beach", "Boynton Beach", "St. Lucie Reef", "Ft. Lauderdale"), times = 5)
baSumm = baSumm %>% mutate(pop.i = popi, pop.j = popj) %>% relocate(c(pop.i, pop.j), .after = pops) %>% dplyr::select(-pops)
# %>% filter(pop1!=pop2) %>% select(-pops)
baSumm$pop.i = factor(baSumm$pop.i)
#levels(baSumm$pop.i)
baSumm$pop.i = factor(baSumm$pop.i, levels = levels(baSumm$pop.i)[c(4, 3, 5, 1, 2)])
baSumm$pop.j = factor(baSumm$pop.j)
baSumm$pop.j = factor(baSumm$pop.j, levels = levels(baSumm$pop.j)[c(4, 3, 5, 1, 2)])
library(ggplot2)
library(paletteer)
baSumm$mean = sprintf('%.3f', baSumm$mean)
baSumm$hpdLow = sprintf('%.3f', baSumm$hpdLow)
baSumm$hpdHigh = sprintf('%.3f', baSumm$hpdHigh)
#flPal = paletteer_d("rcartocolor::Sunset")[c(7, 6, 4, 3, 1)]
flPal = paletteer_d("LaCroixColoR::PeachPear")[c(1,2,3,4,5)]
migrateA = ggplot(data = baSumm, aes(pop.i, pop.j, fill = as.numeric(as.character(mean)))) +
geom_tile(color = "white") +
geom_segment(data = baSumm, aes(x = 0.4755, xend = -0.65, y = pop.j, yend = pop.j, color = pop.j), size = 16) + #changing y bar of pop names
geom_segment(data = baSumm, aes(x = pop.i, xend = pop.i, y = 0.45, yend = -0.1, color = pop.i), size = 35) + #changing x bar of pop names
scale_color_manual(values = flPal[c(1:5, 1:5)], guide = NULL) +
scale_fill_gradientn(colours = paletteer_c("viridis::viridis", n = 10)[3:10], limit = c(0,0.17), space = "Lab", name = expression(paste(italic("m"))), na.value = "gray85",  guide = "colourbar", values = c(0, 0.05, 0.1, 0.15, 0.2,0.5,0.75,1)) + #color scale of heatmap
geom_text(data = baSumm, aes(x = pop.i, y = pop.j, label = paste(mean, "\n", sep = "")), color = ifelse(baSumm$mean > 0.6, "red", "gray5"), fontface = "bold") + #format for center values (i.e. PMP vs PMP)
geom_text(data = baSumm, aes(x = pop.i, y = pop.j, label = paste("\n(",hpdLow,"–",hpdHigh, ")", sep = "")), color = ifelse(baSumm$mean > 0.6, "red", "gray5"), size = 3.25) +
labs(x = "Sink", y = "Source") +
guides(fill = guide_colorbar(barwidth = 1, barheight = 10, title.position = "top", title.hjust = 0.5, frame.colour = "black", frame.linewidth = 1, ticks.colour = "black")) + #m coefficient scale key
scale_y_discrete(limits = rev(levels(baSumm$pop.i))[c(1:5)], position = "left") +
# scale_x_discrete() +
coord_cartesian(xlim = c(1, 5), ylim = c(1, 5), clip = "off") +
theme_minimal()
migrate = migrateA + theme(
axis.text.x = element_text(vjust = 1, size = 9, hjust = 0.5, color = "black"),
axis.text.y = element_text(size = 9, color = "black"),
axis.title.x = element_text(size = 14, vjust = -1.5),
axis.title.y = element_text(size = 14),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 14, face = "bold"),
legend.text = element_text(size = 10)
)
migrate
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/migrate.png", plot = migrate, width = 20, height = 8, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/migrate.svg", plot = migrate, width = 20, height = 8, units = "cm", dpi = 300)
baSumm$mean = as.numeric(baSumm$mean)
baSumm$hpdLow = as.numeric(baSumm$hpdLow)
baSumm$hpdHigh = as.numeric(baSumm$hpdHigh)
pastSamples = read.csv("data_files/poritesastreoidesMetaData_clonesremoved.csv", header = TRUE) %>% select(sample = tube_id, !sample_id)
pastSamples$region[pastSamples$region=="Pompano/LBTS"]<-"Ft. Lauderdale"
library(lubridate)
library(measurements)
pastSamples$region = factor(pastSamples$region)
levels(pastSamples$region)
pastSamples$region = factor(pastSamples$region, levels = levels(pastSamples$region)[c(4, 3, 5, 1, 2)])
pastSamples$depthM = conv_unit(pastSamples$collection_depth_ft, from = "ft", to = "m") %>% round(1)
seflSites = pastSamples %>% group_by(region)%>% summarize(latDD = first(site_lat), longDD = first(site_long),
depthRangeM = paste(min(depthM), "-", max(depthM), sep = ""),
n = n()) %>% droplevels() %>% as.data.frame()
seflPastPopsMigrate = seflSites %>% group_by(region) %>% summarise(latDD = first(latDD), longDD = first(longDD)) %>% filter(region %in% c("St. Lucie Reef", "Jupiter", "West Palm Beach", "Boynton Beach", "Ft. Lauderdale")) %>% droplevels()
migratePal = c("St. Lucie Reef" = flPal[1], "Jupiter" = flPal[2], "West Palm Beach" = flPal[3], "Boynton Beach" = flPal[4], "Ft. Lauderdale" = flPal[5])
baMapData = baSumm %>% left_join(seflPastPopsMigrate, by = c("pop.i" = "region")) %>% left_join(seflPastPopsMigrate, by = c("pop.j" = "region"), suffix = c(".i", ".j")) %>% filter(mean >= 0.05)
for(x in 1:nrow(baMapData)) {
if (baMapData$pop.i[x] == baMapData$pop.j[x]) {
baMapData$latDD.i[x] = NA;
baMapData$latDD.j[x] = NA;
baMapData$longDD.i[x] = NA;
baMapData$longDD.j[x] = NA;
baMapData$mean[x] = NA;
baMapData$median[x] = NA
}
}
library(sf)
florida = read_sf("data_files/shp/flCountiesLo.shp") %>% st_transform(crs = 4326)
library(ggspatial)
migrateMap = ggplot() +
geom_sf(data = florida, fill = "white", size = 0.25) +
geom_curve(data = baMapData, aes(x = longDD.j, y = latDD.j, xend = longDD.i, yend = latDD.i, color = pop.j, size = mean), arrow = arrow(type = "closed", length = unit(0.0225, "npc")), alpha = 0.7,  curvature = -0.3, na.rm = TRUE) +
geom_point(data = seflPastPopsMigrate, aes(x = longDD, y = latDD, fill = region), size = 3.5, shape = 21) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = migratePal, guide = NULL) +
scale_size(range = c(0.5, 2), breaks = c(0.05,0.1,0.15), name = expression(paste(italic("m")))) +
coord_sf(xlim = c(-80.6, -79.6), ylim = c(26, 27.2)) +
scale_x_continuous(breaks = c(seq(-80.6, -79.6, by = 0.2))) +
scale_y_continuous(breaks = c(seq(26, 27.2, by = 0.2))) +
annotation_scale(location = "br") +
annotation_north_arrow(location = "br", which_north = "true", style = north_arrow_minimal(), pad_x = unit(-0.25, "cm") , pad_y = unit(0.75, "cm")) +
guides(fill = guide_legend(override.aes = list(shape = 22, color = NA, size = 4), order = 1)) +
#size = guide_legend(override.aes = list(linetype = 1, shape = NA, alpha = 1), order = 2, ncol = 3)) +
theme_bw() +
theme(panel.background = element_rect(fill = "aliceblue"),
panel.border = element_rect(color = "black", size = 0.75, fill = NA),
axis.title = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
legend.position = "right",
#legend.direction = "horizontal",
#legend.box = "vertical",
#legend.key = element_blank(),
legend.background = element_blank()
)
migrateMap
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/migrateMap.png", plot = migrateMap, width = 25.5, height = 15, units = "cm",dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/migrateMap.svg", plot = migrateMap, width = 25.5, height = 15, units = "cm",dpi = 300)
knitr::opts_chunk$set(echo = TRUE)
# setup rmarkdown environment first
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.align = 'left')
envData2 = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/Sites_w_Env_Data_2.csv")
corData = rcorr(as.matrix(envData[,c(6:ncol(envData))]), type = "pearson")
library(Hmisc)
library(reshape2)
corData = rcorr(as.matrix(envData[,c(6:ncol(envData))]), type = "pearson")
corData = rcorr(as.matrix(envData2[,c(6:ncol(envData))]), type = "pearson")
corData = rcorr(as.matrix(envData2[,c(6:ncol(envData2))]), type = "pearson")
corDataFlat = melt(corData$r, value.name = "r")
pDataFlat = melt(corData$P, value.name = "p")
corDataBind = corDataFlat %>% left_join(pDataFlat, by = c("Var1","Var2"))
library(tidyverse)
corDataBind = corDataFlat %>% left_join(pDataFlat, by = c("Var1","Var2"))
EnvPlotCor = ggplot(corDataBind) +
geom_tile(aes(x = Var1, y = Var2, fill = r)) +
scale_fill_gradient2(low = "#3B9AB2FF", high = "#F21A00FF") +
geom_text(data = filter(corDataBind, r >= 0.7, p < 0.05),aes(x = Var1,    y = Var2, label = round(r, 2))) +
geom_text(data = filter(corDataBind, r <= -0.7, p < 0.05),aes(x = Var1,    y = Var2, label = round(r, 2))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/EnvPlotCor.png", plot = EnvPlotCor, width = 50, height = 50, units = "cm", dpi = 300)
envData3 = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/Sites_w_Env_Data_3.csv")
corData = rcorr(as.matrix(envData3[,c(7:ncol(envData3))]), type = "pearson")
corDataFlat = melt(corData$r, value.name = "r")
pDataFlat = melt(corData$P, value.name = "p")
corDataBind = corDataFlat %>% left_join(pDataFlat, by = c("Var1","Var2"))
EnvPlotCor = ggplot(corDataBind) +
geom_tile(aes(x = Var1, y = Var2, fill = r)) +
scale_fill_gradient2(low = "#3B9AB2FF", high = "#F21A00FF") +
geom_text(data = filter(corDataBind, r >= 0.7, p < 0.05),aes(x = Var1,    y = Var2, label = round(r, 2))) +
geom_text(data = filter(corDataBind, r <= -0.7, p < 0.05),aes(x = Var1,    y = Var2, label = round(r, 2))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/EnvPlotCor.png", plot = EnvPlotCor, width = 50, height = 50, units = "cm", dpi = 300)
envData4 = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/Sites_w_Env_Data_4.csv")
corData = rcorr(as.matrix(envData4[,c(7:ncol(envData4))]), type = "pearson")
corDataFlat = melt(corData$r, value.name = "r")
pDataFlat = melt(corData$P, value.name = "p")
corDataBind = corDataFlat %>% left_join(pDataFlat, by = c("Var1","Var2"))
EnvPlotCor = ggplot(corDataBind) +
geom_tile(aes(x = Var1, y = Var2, fill = r)) +
scale_fill_gradient2(low = "#3B9AB2FF", high = "#F21A00FF") +
geom_text(data = filter(corDataBind, r >= 0.7, p < 0.05),aes(x = Var1,    y = Var2, label = round(r, 2))) +
geom_text(data = filter(corDataBind, r <= -0.7, p < 0.05),aes(x = Var1,    y = Var2, label = round(r, 2))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/EnvPlotCor.png", plot = EnvPlotCor, width = 50, height = 50, units = "cm", dpi = 300)
envData4 = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/Sites_w_Env_Data_4.csv")
corData = rcorr(as.matrix(envData4[,c(6:ncol(envData4))]), type = "pearson")
corDataFlat = melt(corData$r, value.name = "r")
pDataFlat = melt(corData$P, value.name = "p")
corDataBind = corDataFlat %>% left_join(pDataFlat, by = c("Var1","Var2"))
EnvPlotCor = ggplot(corDataBind) +
geom_tile(aes(x = Var1, y = Var2, fill = r)) +
scale_fill_gradient2(low = "#3B9AB2FF", high = "#F21A00FF") +
geom_text(data = filter(corDataBind, r >= 0.7, p < 0.05),aes(x = Var1,    y = Var2, label = round(r, 2))) +
geom_text(data = filter(corDataBind, r <= -0.7, p < 0.05),aes(x = Var1,    y = Var2, label = round(r, 2))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/EnvPlotCor.png", plot = EnvPlotCor, width = 50, height = 50, units = "cm", dpi = 300)
envData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/Sites_w_Env_Data_5.csv")
envData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/Sites_w_Env_Data_5.csv")
envSummary=envData %>% group_by(region, lat, lon) %>% summarise(temperature=min(temperature), chlorophyll=min(chlorophyll), currents = min(currents), nitrate = min(nitrate), phosphate=min(phosphate), prod=min(prod), salinity=min(salinity), silicate=min(silicate), iron=min(iron))
envSummary=envData %>% group_by(region, lat, lon) %>% summarise(calcite=min(calcite), parmean=min(parmean), ph = min(ph), currents = min(curvelmean_ss),  do=min(dissoxmean_bdmean), botlight=(lightbotmean_bdmean))
View(envSummary)
popData=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "region" = region, "depth" = collection_depth_m, "lat" = site_lat, "lon" = site_long)
#Create Moran Eigenvector's Maps (MEMs) to be the spatial variables
coordsxy = dplyr::select(popData, lat, lon)
plot(coordsxy, asp=1)
distSpatial=gcd.hf(coordsxy)
install.packages("codep")
library(codep)
distSpatial=gcd.hf(coordsxy)
dbmem = dbmem(distSpatial)
install.packages("adespatial")
library(adespatial)
summary(dbmem)
dbmem = dbmem(distSpatial)
adegraphics::s.label(coordsxy, nb = attr(dbmem, "listw"))
distSpatial=gcd.hf(coordsxy)
knitr::opts_chunk$set(echo = TRUE)
# setup rmarkdown environment first
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.align = 'left')
popData=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "region" = region, "depth" = collection_depth_m, "lat" = site_lat, "lon" = site_long)
library(tidyverse)
popData=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "region" = region, "depth" = collection_depth_m, "lat" = site_lat, "lon" = site_long)
envData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/Sites_w_Env_Data_5.csv")
rm(popData)
envSummary=envData %>% group_by(region, lat, lon) %>% summarise(calcite=min(calcite), parmean=min(parmean), ph = min(ph), currents = min(curvelmean_ss),  do=min(dissoxmean_bdmean), botlight=(lightbotmean_bdmean))
View(envData)
envData[,c(3, 7:ncol(envData))]
View(envData)
test = envData[,c(3, 7:ncol(envData))]
View(test)
rm(test)
#beginning to build model to examine for vif
snpMa = as.matrix(read.table("pastNoClones.ibsMat"))
snpMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat"))
Pcoa=pcoa(snpMa)
library(ape)
Pcoa=pcoa(snpMa)
Pcoa$values$Cum_corr_eig
snpMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat"))
View(snpMa)
Pcoa=pcoa(snpMa)
View(Pcoa)
Pcoa
Pcoa$values$Cum_corr_eig
ibs=Pcoa$vectors
rda=rda(ibs, envData[,c(3, 6:ncol(envData))])
library(Hmisc)
install.packages("klaR")
library(klaR)
rda=rda(ibs, envData[,c(3, 6:ncol(envData))])
library(psych)
install.packages("psych")
library(psych)
rda=rda(ibs, envData[,c(3, 6:ncol(envData))])
library(vegan)
rda=rda(ibs, envData[,c(3, 6:ncol(envData))])
vif(rda)
library(car)
vif(rda)
test = envData[c(3, 6:ncol9envData))]
test = envData[,c(3, 6:ncol(envData))]
View(test)
rda=rda(ibs, envData[,c(3, 6:ncol(envData))])
rda
envData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/Sites_w_Env_Data_5.csv")
envSummary=envData %>% group_by(region, lat, lon) %>% summarise(depth=min(depth), calcite=min(calcite), parmean=min(parmean), ph = min(ph), currents = min(curvelmean_ss),  do=min(dissoxmean_bdmean), botlight=min(lightbotmean_bdmean))
View(envSummary)
envData5 = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/Sites_w_Env_Data_5.csv")
corData = rcorr(as.matrix(envData5[,c(3:ncol(envData5))]), type = "pearson")
corDataFlat = melt(corData$r, value.name = "r")
library(reshape2)
corDataFlat = melt(corData$r, value.name = "r")
pDataFlat = melt(corData$P, value.name = "p")
corDataBind = corDataFlat %>% left_join(pDataFlat, by = c("Var1","Var2"))
EnvPlotCor = ggplot(corDataBind) +
geom_tile(aes(x = Var1, y = Var2, fill = r)) +
scale_fill_gradient2(low = "#3B9AB2FF", high = "#F21A00FF") +
geom_text(data = filter(corDataBind, r >= 0.7, p < 0.05),aes(x = Var1,    y = Var2, label = round(r, 2))) +
geom_text(data = filter(corDataBind, r <= -0.7, p < 0.05),aes(x = Var1,    y = Var2, label = round(r, 2))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/EnvPlotCor.png", plot = EnvPlotCor, width = 50, height = 50, units = "cm", dpi = 300)
envData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/Sites_w_Env_Data_5.csv")
envSummary=envData %>% group_by(region, lat, lon) %>% summarise(depth=min(depth), calcite=min(calcite), parmean=min(parmean), ph = min(ph),  do=min(dissoxmean_bdmean), botlight=min(lightbotmean_bdmean))
View(envSummary)
snpMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat"))
library(ape)
Pcoa=pcoa(snpMa)
Pcoa$values$Cum_corr_eig
ibs=Pcoa$vectors
rda=rda(ibs, envData[,c(3, 6:ncol(envData))])
rda
View(envData)
envData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/Sites_w_Env_Data_5.csv")
View(envData)
snpMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat"))
View(envData)
rda=rda(ibs, envData[,c(3, 6:ncol(envData))])
rda
vif(rda)
View(envData)
envData5 = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/Sites_w_Env_Data_5.csv")
corData = rcorr(as.matrix(envData5[,c(3, 6:ncol(envData5))]), type = "pearson")
corDataFlat = melt(corData$r, value.name = "r")
pDataFlat = melt(corData$P, value.name = "p")
corDataBind = corDataFlat %>% left_join(pDataFlat, by = c("Var1","Var2"))
EnvPlotCor = ggplot(corDataBind) +
geom_tile(aes(x = Var1, y = Var2, fill = r)) +
scale_fill_gradient2(low = "#3B9AB2FF", high = "#F21A00FF") +
geom_text(data = filter(corDataBind, r >= 0.7, p < 0.05),aes(x = Var1,    y = Var2, label = round(r, 2))) +
geom_text(data = filter(corDataBind, r <= -0.7, p < 0.05),aes(x = Var1,    y = Var2, label = round(r, 2))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
corData = rcorr(as.matrix(envData5[,c(3, 6:ncol(envData5))]), type = "pearson")
View(corData)
knitr::opts_chunk$set(echo = TRUE)
# setup rmarkdown environment first
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.align = 'left')
envData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/Sites_w_Env_Data_5.csv")
corData = rcorr(as.matrix(envData[,c(3, 6:ncol(envData))]), type = "pearson")
library(Hmisc)
library(reshape2)
library(tidyverse)
corData = rcorr(as.matrix(envData[,c(3, 6:ncol(envData))]), type = "pearson")
corDataFlat = melt(corData$r, value.name = "r")
pDataFlat = melt(corData$P, value.name = "p")
corDataBind = corDataFlat %>% left_join(pDataFlat, by = c("Var1","Var2"))
EnvPlotCor = ggplot(corDataBind) +
geom_tile(aes(x = Var1, y = Var2, fill = r)) +
scale_fill_gradient2(low = "#3B9AB2FF", high = "#F21A00FF") +
geom_text(data = filter(corDataBind, r >= 0.7, p < 0.05),aes(x = Var1,    y = Var2, label = round(r, 2))) +
geom_text(data = filter(corDataBind, r <= -0.7, p < 0.05),aes(x = Var1,    y = Var2, label = round(r, 2))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/EnvPlotCor_final.png", plot = EnvPlotCor, width = 50, height = 50, units = "cm", dpi = 300)
snpMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat"))
library(ape)
Pcoa=pcoa(snpMa)
Pcoa$values$Cum_corr_eig
ibs=Pcoa$vectors
#stopped here, checking if depth is colinear
library(vegan)
rda=rda(ibs, envData[,c(3, 6:ncol(envData))])
rda
View(envData)
test = envData[,c(3, 6:ncol(envData))]
View(test)
library(car)
vif(rda)
rda=rda(ibs, envData[,c(3, 6:ncol(envData))])
rda
envData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/test.csv")
View(envData)
rda=rda(ibs, envData)
rda
View(corDataBind)
test = envData[,c(3, 6:ncol(envData))]
View(test)
envData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/Sites_w_Env_Data.csv")
