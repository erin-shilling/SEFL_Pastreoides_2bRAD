legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
#        legend.background = element_rect(fill = "transparent", colour = NA),
#        legend.key = element_rect(fill = "transparent", colour = NA),
#        plot.background = element_rect(fill = "transparent", colour = NA)
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pastDbrdaPlot1
#set.seed(0874)
# pastDbrda = dbrda(pastMa ~ Depth + Latitude, model)
pastDbrda = capscale(pastMa ~ Depth + Latitude, model)
pastRdaVar = round(pastDbrda$CA$eig/sum(pastDbrda$CA$eig)*100, 1)
head(pastRdaVar)
pastRdaPoints = as.data.frame(scores(pastDbrda)$sites)
pastRdaPoints$sample = popData$sample
head(pastRdaPoints)
pastDbrdaData1 = popData %>% left_join(pastRdaPoints)
head(pastDbrdaData1)
tail(pastDbrdaData1)
envLoad = as.data.frame(pastDbrda$CCA$biplot)
envLoad$var = row.names(envLoad)
colnames(pastDbrdaData1)[6] = "dbRDA1"
colnames(pastDbrdaData1)[7] = "dbRDA2"
pastDbrdaData = merge(pastDbrdaData1, aggregate(cbind(mean.x = dbRDA1, mean.y = dbRDA2)~Population, pastDbrdaData1, mean), by="Population")
pastDbrdaData$Population = factor(pastDbrdaData$Population)
levels(pastDbrdaData$Population)
pastDbrdaData$Population = factor(pastDbrdaData$Population, levels(pastDbrdaData$Population)[c(4, 3, 5, 1, 2)])
flPal = paletteer_d("LaCroixColoR::PeachPear")[c(1,2,3,4,5)]
#building plot
pastDbrdaPlotA = ggplot(pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, color = Population, fill = Population)) +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) + #x axis
geom_vline(xintercept = 0, color = "gray90", size = 0.5) + #y axis
geom_point(data = pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, fill = Population, color = Population), size = 2, shape = 21, alpha = 0.5, show.legend = FALSE) +
stat_ellipse(data = pastDbrdaData, type = "t", geom = "polygon", alpha = 0.1, show.legend = FALSE) + #adds ellipses
geom_segment(data = envLoad, aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), color = "black", arrow = arrow(length = unit(0.25, "cm"), type = "open"), size = 0.65, inherit.aes = FALSE) +
geom_text(data = envLoad, aes(x = dbRDA1+0.1, y = dbRDA2+0.1, label = var), color = "black", size = 3, inherit.aes = FALSE) +
geom_point(data = pastDbrdaData, aes(x = mean.x, y = mean.y, fill = Population), shape = 21, size = 5, color = "black") + #pop centroids indicated by large circles
annotate(geom = "text", x = 0.7, y = -1.5, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
labs(x = paste("dbRDA1 (", pastRdaVar[1]," %)", sep = ""), y =  paste("dbRDA2 (", pastRdaVar[2], " %)", sep = "")) +
scale_fill_manual(values = flPal, name = "Population") +
scale_color_manual(values = flPal, name = "Population") +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.5, alpha = NA), order = 2), fill = guide_legend(override.aes = list(shape =   22, size = 4, color = flPal, alpha = NA), order = 1)) +
theme_bw()
pastDbrdaPlot1
#building plot
pastDbrdaPlotA = ggplot(pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, color = Population, fill = Population))
pastDbrdaPlot
pastDbrdaPlotA
#building plot
pastDbrdaPlotA = ggplot(pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, color = Population, fill = Population))+
geom_hline(yintercept = 0, color = "gray90", size = 0.5) + #x axis
geom_vline(xintercept = 0, color = "gray90", size = 0.5) + #y axis
geom_point(data = pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, fill = Population, color = Population), size = 2, shape = 21, alpha = 0.5, show.legend = FALSE) +
stat_ellipse(data = pastDbrdaData, type = "t", geom = "polygon", alpha = 0.1, show.legend = FALSE) + #adds ellipses
geom_segment(data = envLoad, aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), color = "black", arrow = arrow(length = unit(0.25, "cm"), type = "open"), size = 0.65, inherit.aes = FALSE) +
geom_text(data = envLoad, aes(x = dbRDA1+0.1, y = dbRDA2+0.1, label = var), color = "black", size = 3, inherit.aes = FALSE) +
geom_point(data = pastDbrdaData, aes(x = mean.x, y = mean.y, fill = Population), shape = 21, size = 5, color = "black") + #pop centroids indicated by large circles
annotate(geom = "text", x = 0.7, y = -1.5, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
labs(x = paste("dbRDA1 (", pastRdaVar[1]," %)", sep = ""), y =  paste("dbRDA2 (", pastRdaVar[2], " %)", sep = "")) +
scale_fill_manual(values = flPal, name = "Population") +
scale_color_manual(values = flPal, name = "Population") +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.5, alpha = NA), order = 2), fill = guide_legend(override.aes = list(shape =   22, size = 4, color = flPal, alpha = NA), order = 1)) +
theme_bw()
#building plot
pastDbrdaPlotA = ggplot(pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, color = Population, fill = Population))
+
geom_hline(yintercept = 0, color = "gray90", size = 0.5) + #x axis
geom_vline(xintercept = 0, color = "gray90", size = 0.5) + #y axis
geom_point(data = pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, fill = Population, color = Population), size = 2, shape = 21, alpha = 0.5, show.legend = FALSE) +
stat_ellipse(data = pastDbrdaData, type = "t", geom = "polygon", alpha = 0.1, show.legend = FALSE) + #adds ellipses
geom_segment(data = envLoad, aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), color = "black", arrow = arrow(length = unit(0.25, "cm"), type = "open"), size = 0.65, inherit.aes = FALSE) +
geom_text(data = envLoad, aes(x = dbRDA1+0.1, y = dbRDA2+0.1, label = var), color = "black", size = 3, inherit.aes = FALSE) +
geom_point(data = pastDbrdaData, aes(x = mean.x, y = mean.y, fill = Population), shape = 21, size = 5, color = "black") + #pop centroids indicated by large circles
annotate(geom = "text", x = 0.7, y = -1.5, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
labs(x = paste("dbRDA1 (", pastRdaVar[1]," %)", sep = ""), y =  paste("dbRDA2 (", pastRdaVar[2], " %)", sep = "")) +
scale_fill_manual(values = flPal, name = "Population") +
scale_color_manual(values = flPal, name = "Population") +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.5, alpha = NA), order = 2), fill = guide_legend(override.aes = list(shape =   22, size = 4, color = flPal, alpha = NA), order = 1)) +
theme_bw()
#building plot
pastDbrdaPlotA = ggplot(pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, color = Population, fill = Population))
#building plot
pastDbrdaPlotA = ggplot(pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, color = Population, fill = Population))
pastDbrdaPlotA
#set.seed(0874)
pastDbrda = dbrda(pastMa ~ Depth + Latitude, model)
pastRdaVar = round(pastDbrda$CA$eig/sum(pastDbrda$CA$eig)*100, 1)
head(pastRdaVar)
pastRdaPoints = as.data.frame(scores(pastDbrda)$sites)
pastRdaPoints$sample = popData$sample
head(pastRdaPoints)
pastDbrdaData1 = popData %>% left_join(pastRdaPoints)
head(pastDbrdaData1)
tail(pastDbrdaData1)
envLoad = as.data.frame(pastDbrda$CCA$biplot)
envLoad$var = row.names(envLoad)
pastDbrdaData = merge(pastDbrdaData1, aggregate(cbind(mean.x = dbRDA1, mean.y = dbRDA2)~Population, pastDbrdaData1, mean), by="Population")
pastDbrdaData$Population = factor(pastDbrdaData$Population)
levels(pastDbrdaData$Population)
pastDbrdaData$Population = factor(pastDbrdaData$Population, levels(pastDbrdaData$Population)[c(4, 3, 5, 1, 2)])
flPal = paletteer_d("LaCroixColoR::PeachPear")[c(1,2,3,4,5)]
#building plot
pastDbrdaPlotA = ggplot(pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, color = Population, fill = Population)) +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) + #x axis
geom_vline(xintercept = 0, color = "gray90", size = 0.5) + #y axis
geom_point(data = pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, fill = Population, color = Population), size = 2, shape = 21, alpha = 0.5, show.legend = FALSE)
+
stat_ellipse(data = pastDbrdaData, type = "t", geom = "polygon", alpha = 0.1, show.legend = FALSE) + #adds ellipses
geom_segment(data = envLoad, aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), color = "black", arrow = arrow(length = unit(0.25, "cm"), type = "open"), size = 0.65, inherit.aes = FALSE) +
geom_text(data = envLoad, aes(x = dbRDA1+0.1, y = dbRDA2+0.1, label = var), color = "black", size = 3, inherit.aes = FALSE) +
geom_point(data = pastDbrdaData, aes(x = mean.x, y = mean.y, fill = Population), shape = 21, size = 5, color = "black") + #pop centroids indicated by large circles
annotate(geom = "text", x = 0.7, y = -1.5, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
labs(x = paste("dbRDA1 (", pastRdaVar[1]," %)", sep = ""), y =  paste("dbRDA2 (", pastRdaVar[2], " %)", sep = "")) +
scale_fill_manual(values = flPal, name = "Population") +
scale_color_manual(values = flPal, name = "Population") +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.5, alpha = NA), order = 2), fill = guide_legend(override.aes = list(shape =   22, size = 4, color = flPal, alpha = NA), order = 1)) +
theme_bw()
#building plot
pastDbrdaPlotA = ggplot(pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, color = Population, fill = Population)) +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) + #x axis
geom_vline(xintercept = 0, color = "gray90", size = 0.5) + #y axis
geom_point(data = pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, fill = Population, color = Population), size = 2, shape = 21, alpha = 0.5, show.legend = FALSE) +
stat_ellipse(data = pastDbrdaData, type = "t", geom = "polygon", alpha = 0.1, show.legend = FALSE) + #adds ellipses
geom_segment(data = envLoad, aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), color = "black", arrow = arrow(length = unit(0.25, "cm"), type = "open"), size = 0.65, inherit.aes = FALSE) +
geom_text(data = envLoad, aes(x = dbRDA1+0.1, y = dbRDA2+0.1, label = var), color = "black", size = 3, inherit.aes = FALSE) +
geom_point(data = pastDbrdaData, aes(x = mean.x, y = mean.y, fill = Population), shape = 21, size = 5, color = "black") + #pop centroids indicated by large circles
annotate(geom = "text", x = 0.7, y = -1.5, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
labs(x = paste("dbRDA1 (", pastRdaVar[1]," %)", sep = ""), y =  paste("dbRDA2 (", pastRdaVar[2], " %)", sep = "")) +
scale_fill_manual(values = flPal, name = "Population") +
scale_color_manual(values = flPal, name = "Population") +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.5, alpha = NA), order = 2), fill = guide_legend(override.aes = list(shape =   22, size = 4, color = flPal, alpha = NA), order = 1)) +
theme_bw()
pastDbrdaPlot1 = pastDbrdaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
#        legend.background = element_rect(fill = "transparent", colour = NA),
#        legend.key = element_rect(fill = "transparent", colour = NA),
#        plot.background = element_rect(fill = "transparent", colour = NA)
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pastDbrdaPlot1
pastDbrdaPlotA = ggplot(pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, color = Population, fill = Population)) +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) + #x axis
geom_vline(xintercept = 0, color = "gray90", size = 0.5) + #y axis
geom_point(data = pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, fill = Population, color = Population), size = 2, shape = 21, alpha = 0.5, show.legend = FALSE) +
stat_ellipse(data = pastDbrdaData, type = "t", geom = "polygon", alpha = 0.1, show.legend = FALSE) + #adds ellipses
geom_segment(data = envLoad, aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), color = "black", arrow = arrow(length = unit(0.25, "cm"), type = "open"), size = 0.65, inherit.aes = FALSE) +
geom_text(data = envLoad, aes(x = dbRDA1+0.1, y = dbRDA2-0.1, label = var), color = "black", size = 3, inherit.aes = FALSE) +
geom_point(data = pastDbrdaData, aes(x = mean.x, y = mean.y, fill = Population), shape = 21, size = 5, color = "black") + #pop centroids indicated by large circles
annotate(geom = "text", x = 0.7, y = -1.5, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
labs(x = paste("dbRDA1 (", pastRdaVar[1]," %)", sep = ""), y =  paste("dbRDA2 (", pastRdaVar[2], " %)", sep = "")) +
scale_fill_manual(values = flPal, name = "Population") +
scale_color_manual(values = flPal, name = "Population") +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.5, alpha = NA), order = 2), fill = guide_legend(override.aes = list(shape =   22, size = 4, color = flPal, alpha = NA), order = 1)) +
theme_bw()
pastDbrdaPlot1 = pastDbrdaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
#        legend.background = element_rect(fill = "transparent", colour = NA),
#        legend.key = element_rect(fill = "transparent", colour = NA),
#        plot.background = element_rect(fill = "transparent", colour = NA)
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pastDbrdaPlot1
pastDbrdaPlotA = ggplot(pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, color = Population, fill = Population)) +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) + #x axis
geom_vline(xintercept = 0, color = "gray90", size = 0.5) + #y axis
geom_point(data = pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, fill = Population, color = Population), size = 2, shape = 21, alpha = 0.5, show.legend = FALSE) +
stat_ellipse(data = pastDbrdaData, type = "t", geom = "polygon", alpha = 0.1, show.legend = FALSE) + #adds ellipses
geom_segment(data = envLoad, aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), color = "black", arrow = arrow(length = unit(0.25, "cm"), type = "open"), size = 0.65, inherit.aes = FALSE) +
geom_text(data = envLoad, aes(x = dbRDA1-0.1, y = dbRDA2-0.1, label = var), color = "black", size = 3, inherit.aes = FALSE) +
geom_point(data = pastDbrdaData, aes(x = mean.x, y = mean.y, fill = Population), shape = 21, size = 5, color = "black") + #pop centroids indicated by large circles
annotate(geom = "text", x = 0.7, y = -1.5, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
labs(x = paste("dbRDA1 (", pastRdaVar[1]," %)", sep = ""), y =  paste("dbRDA2 (", pastRdaVar[2], " %)", sep = "")) +
scale_fill_manual(values = flPal, name = "Population") +
scale_color_manual(values = flPal, name = "Population") +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.5, alpha = NA), order = 2), fill = guide_legend(override.aes = list(shape =   22, size = 4, color = flPal, alpha = NA), order = 1)) +
theme_bw()
pastDbrdaPlot1 = pastDbrdaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
#        legend.background = element_rect(fill = "transparent", colour = NA),
#        legend.key = element_rect(fill = "transparent", colour = NA),
#        plot.background = element_rect(fill = "transparent", colour = NA)
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pastDbrdaPlot1
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/DbrdaPlot.png", plot = pastDbrdaPlot1, height = 3.5, width = 7, units = "in", dpi = 300)
pastDbrdaPlotA = ggplot(pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, color = Population, fill = Population)) +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) + #x axis
geom_vline(xintercept = 0, color = "gray90", size = 0.5) + #y axis
geom_point(data = pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, fill = Population, color = Population), size = 2, shape = 21, alpha = 0.5, show.legend = FALSE) +
stat_ellipse(data = pastDbrdaData, type = "t", geom = "polygon", alpha = 0.1, show.legend = FALSE) + #adds ellipses
geom_segment(data = envLoad, aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), color = "black", arrow = arrow(length = unit(0.25, "cm"), type = "open"), size = 0.65, inherit.aes = FALSE) +
geom_text(data = envLoad, aes(x = dbRDA1, y = dbRDA2, label = var), color = "black", size = 3, inherit.aes = FALSE) +
geom_point(data = pastDbrdaData, aes(x = mean.x, y = mean.y, fill = Population), shape = 21, size = 5, color = "black") + #pop centroids indicated by large circles
annotate(geom = "text", x = 0.7, y = -1.5, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
labs(x = paste("dbRDA1 (", pastRdaVar[1]," %)", sep = ""), y =  paste("dbRDA2 (", pastRdaVar[2], " %)", sep = "")) +
scale_fill_manual(values = flPal, name = "Population") +
scale_color_manual(values = flPal, name = "Population") +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.5, alpha = NA), order = 2), fill = guide_legend(override.aes = list(shape =   22, size = 4, color = flPal, alpha = NA), order = 1)) +
theme_bw()
pastDbrdaPlot1 = pastDbrdaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
#        legend.background = element_rect(fill = "transparent", colour = NA),
#        legend.key = element_rect(fill = "transparent", colour = NA),
#        plot.background = element_rect(fill = "transparent", colour = NA)
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pastDbrdaPlot1
pastDbrdaPlotA = ggplot(pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, color = Population, fill = Population)) +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) + #x axis
geom_vline(xintercept = 0, color = "gray90", size = 0.5) + #y axis
geom_point(data = pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, fill = Population, color = Population), size = 2, shape = 21, alpha = 0.5, show.legend = FALSE) +
stat_ellipse(data = pastDbrdaData, type = "t", geom = "polygon", alpha = 0.1, show.legend = FALSE) + #adds ellipses
geom_segment(data = envLoad, aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), color = "black", arrow = arrow(length = unit(0.25, "cm"), type = "open"), size = 0.65, inherit.aes = FALSE) +
geom_text(data = envLoad, aes(x = dbRDA1+0.1, y = dbRDA2, label = var), color = "black", size = 3, inherit.aes = FALSE) +
geom_point(data = pastDbrdaData, aes(x = mean.x, y = mean.y, fill = Population), shape = 21, size = 5, color = "black") + #pop centroids indicated by large circles
annotate(geom = "text", x = 0.7, y = -1.5, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
labs(x = paste("dbRDA1 (", pastRdaVar[1]," %)", sep = ""), y =  paste("dbRDA2 (", pastRdaVar[2], " %)", sep = "")) +
scale_fill_manual(values = flPal, name = "Population") +
scale_color_manual(values = flPal, name = "Population") +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.5, alpha = NA), order = 2), fill = guide_legend(override.aes = list(shape =   22, size = 4, color = flPal, alpha = NA), order = 1)) +
theme_bw()
pastDbrdaPlot1 = pastDbrdaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
#        legend.background = element_rect(fill = "transparent", colour = NA),
#        legend.key = element_rect(fill = "transparent", colour = NA),
#        plot.background = element_rect(fill = "transparent", colour = NA)
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pastDbrdaPlot1
pastDbrdaPlotA = ggplot(pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, color = Population, fill = Population)) +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) + #x axis
geom_vline(xintercept = 0, color = "gray90", size = 0.5) + #y axis
geom_point(data = pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, fill = Population, color = Population), size = 2, shape = 21, alpha = 0.5, show.legend = FALSE) +
stat_ellipse(data = pastDbrdaData, type = "t", geom = "polygon", alpha = 0.1, show.legend = FALSE) + #adds ellipses
geom_segment(data = envLoad, aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), color = "black", arrow = arrow(length = unit(0.25, "cm"), type = "open"), size = 0.65, inherit.aes = FALSE) +
geom_text(data = envLoad, aes(x = dbRDA1+0.17, y = dbRDA2, label = var), color = "black", size = 3, inherit.aes = FALSE) +
geom_point(data = pastDbrdaData, aes(x = mean.x, y = mean.y, fill = Population), shape = 21, size = 5, color = "black") + #pop centroids indicated by large circles
annotate(geom = "text", x = 0.7, y = -1.5, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
labs(x = paste("dbRDA1 (", pastRdaVar[1]," %)", sep = ""), y =  paste("dbRDA2 (", pastRdaVar[2], " %)", sep = "")) +
scale_fill_manual(values = flPal, name = "Population") +
scale_color_manual(values = flPal, name = "Population") +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.5, alpha = NA), order = 2), fill = guide_legend(override.aes = list(shape =   22, size = 4, color = flPal, alpha = NA), order = 1)) +
theme_bw()
pastDbrdaPlot1 = pastDbrdaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
#        legend.background = element_rect(fill = "transparent", colour = NA),
#        legend.key = element_rect(fill = "transparent", colour = NA),
#        plot.background = element_rect(fill = "transparent", colour = NA)
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pastDbrdaPlot1
pastDbrdaPlotA = ggplot(pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, color = Population, fill = Population)) +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) + #x axis
geom_vline(xintercept = 0, color = "gray90", size = 0.5) + #y axis
geom_point(data = pastDbrdaData, aes(x = dbRDA1, y = dbRDA2, fill = Population, color = Population), size = 2, shape = 21, alpha = 0.5, show.legend = FALSE) +
stat_ellipse(data = pastDbrdaData, type = "t", geom = "polygon", alpha = 0.1, show.legend = FALSE) + #adds ellipses
geom_segment(data = envLoad, aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), color = "black", arrow = arrow(length = unit(0.25, "cm"), type = "open"), size = 0.65, inherit.aes = FALSE) +
geom_text(data = envLoad, aes(x = dbRDA1+0.22, y = dbRDA2, label = var), color = "black", size = 3, inherit.aes = FALSE) +
geom_point(data = pastDbrdaData, aes(x = mean.x, y = mean.y, fill = Population), shape = 21, size = 5, color = "black") + #pop centroids indicated by large circles
annotate(geom = "text", x = 0.7, y = -1.5, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
labs(x = paste("dbRDA1 (", pastRdaVar[1]," %)", sep = ""), y =  paste("dbRDA2 (", pastRdaVar[2], " %)", sep = "")) +
scale_fill_manual(values = flPal, name = "Population") +
scale_color_manual(values = flPal, name = "Population") +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.5, alpha = NA), order = 2), fill = guide_legend(override.aes = list(shape =   22, size = 4, color = flPal, alpha = NA), order = 1)) +
theme_bw()
pastDbrdaPlot1 = pastDbrdaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
#        legend.background = element_rect(fill = "transparent", colour = NA),
#        legend.key = element_rect(fill = "transparent", colour = NA),
#        plot.background = element_rect(fill = "transparent", colour = NA)
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pastDbrdaPlot1
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/DbrdaPlot.png", plot = pastDbrdaPlot1, height = 3.5, width = 7, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/DbrdaPlot.pdf", plot = pastDbrdaPlot1, height = 3.5, width = 7, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/DbrdaPlot.tiff", plot = pastDbrdaPlot1, height = 3.5, width = 7, units = "in", dpi = 300)
??stat_ellipse
bestDbrda$anova
knitr::opts_chunk$set(echo = TRUE)
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis", "ropensci/rnaturalearthhires")
pacman::p_load("cowplot", "ggrepel", "ggspatial", "maps", "paletteer", "patchwork", "rgdal", "rnaturalearth", "sf", "tidyverse", "reshape2", "MCMC.OTU", "pairwiseAdonis", "RColorBrewer", "Redmonder", "flextable", "lubridate", "officer", "adegenet", "dendextend", "gdata", "ggdendro", "hierfstat", "Imap", "kableExtra", "poppr", "StAMPP", "vcfR", "vegan", "boa", "measurements", "magick", "rgeos", "magrittr", "ggplot2", "rstatix")
cloneBams = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData.csv")
cloneMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/genome_mapped/data_files/pastClones.ibsMat"))
dimnames(cloneMa) = list(cloneBams[,1],cloneBams[,1])
clonesHc = hclust(as.dist(cloneMa),"ave")
clonePops = cloneBams$region
cloneDend = cloneMa %>% as.dist() %>% hclust(.,"ave") %>%
as.dendrogram()
cloneDData = cloneDend %>% dendro_data()
cloneDData$segments$yend2 = cloneDData$segments$yend
for(i in 1:nrow(cloneDData$segments)) {
if (cloneDData$segments$yend2[i] == 0) {
cloneDData$segments$yend2[i] = (cloneDData$segments$y[i] - 0.01)}}
cloneDendPoints = cloneDData$labels
cloneDendPoints$pop = clonePops[order.dendrogram(cloneDend)]
rownames(cloneDendPoints) = cloneDendPoints$label
# Making points at the leaves to place symbols for populations
point = as.vector(NA)
for(i in 1:nrow(cloneDData$segments)) {
if (cloneDData$segments$yend[i] == 0) {
point[i] = cloneDData$segments$y[i] - 0.01
} else {
point[i] = NA}}
cloneDendPoints$y = point[!is.na(point)]
techReps = c("P028-1", "P028-2", "P028-3", "P046-1", "P046-2", "P046-3", "P077-1", "P077-2", "P077-3")
flPal = paletteer_d("LaCroixColoR::PeachPear")[c(1,2,3,4,5)]
cloneDendPoints$pop = factor(cloneDendPoints$pop)
cloneDendPoints$pop = factor(cloneDendPoints$pop,levels(cloneDendPoints$pop)[c(4,3,5,1,2)])
cloneDendA = ggplot() +
geom_segment(data = segment(cloneDData), aes(x = x, y = y, xend = xend, yend = yend2), size = 0.5) +
geom_point(data = cloneDendPoints, aes(x = x, y = y, fill = pop), size = 4, stroke = 0.25, shape = 24) +
scale_fill_manual(values = flPal, name = "Population") +
geom_hline(yintercept = 0.165, color = "red", lty = 5, size = 0.75) + # creating a dashed line to indicate a clonal distance threshold
geom_text(data = subset(cloneDendPoints, subset = label %in% techReps), aes(x = (x + 0.53), y = (y - .0055), label = "*"), angle = 90, size = 10) + # spacing technical replicates further from leaf
geom_text(data = subset(cloneDendPoints, subset = !label %in% techReps), aes(x = x, y = (y - .010), label = "label"), angle = 90) +
labs(y = "Genetic distance (1 - IBS)") +
theme_classic()
cloneDend = cloneDendA + theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(size = 16, color = "black", angle = 90),
axis.text.y = element_text(size = 14, color = "black"),
axis.line.y = element_line(),
axis.ticks.y = element_line(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank(),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = "bottom")
cloneDend
View(cloneBams)
cloneDendA = ggplot() +
geom_segment(data = segment(cloneDData), aes(x = x, y = y, xend = xend, yend = yend2), size = 0.5) +
geom_point(data = cloneDendPoints, aes(x = x, y = y, fill = pop), size = 4, stroke = 0.25, shape = 24) +
scale_fill_manual(values = flPal, name = "Population") +
geom_hline(yintercept = 0.165, color = "red", lty = 5, size = 0.75) + # creating a dashed line to indicate a clonal distance threshold
geom_text(data = subset(cloneDendPoints, subset = label %in% techReps), aes(x = (x + 0.53), y = (y - .0055), label = "*"), angle = 90, size = 10) + # spacing technical replicates further from leaf
geom_text(data = subset(cloneDendPoints, subset = !label %in% techReps), aes(x = x, y = (y - .010), label = "tube_ID"), angle = 90) +
labs(y = "Genetic distance (1 - IBS)") +
theme_classic()
cloneDend = cloneDendA + theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(size = 16, color = "black", angle = 90),
axis.text.y = element_text(size = 14, color = "black"),
axis.line.y = element_line(),
axis.ticks.y = element_line(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank(),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = "bottom")
cloneDend
cloneDendA = ggplot() +
geom_segment(data = segment(cloneDData), aes(x = x, y = y, xend = xend, yend = yend2), size = 0.5) +
geom_point(data = cloneDendPoints, aes(x = x, y = y, fill = pop), size = 4, stroke = 0.25, shape = 24) +
scale_fill_manual(values = flPal, name = "Population") +
geom_hline(yintercept = 0.165, color = "red", lty = 5, size = 0.75) + # creating a dashed line to indicate a clonal distance threshold
geom_text(data = subset(cloneDendPoints, subset = label %in% techReps), aes(x = (x + 0.53), y = (y - .0055), label = "*"), angle = 90, size = 10) + # spacing technical replicates further from leaf
geom_text(data = subset(cloneDendPoints, subset = !label %in% techReps), aes(x = x, y = (y - .010), label = tube_ID), angle = 90) +
labs(y = "Genetic distance (1 - IBS)") +
theme_classic()
cloneDend = cloneDendA + theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(size = 16, color = "black", angle = 90),
axis.text.y = element_text(size = 14, color = "black"),
axis.line.y = element_line(),
axis.ticks.y = element_line(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank(),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = "bottom")
cloneDend
View(cloneDendPoints)
cloneDendA = ggplot() +
geom_segment(data = segment(cloneDData), aes(x = x, y = y, xend = xend, yend = yend2), size = 0.5) +
geom_point(data = cloneDendPoints, aes(x = x, y = y, fill = pop), size = 4, stroke = 0.25, shape = 24) +
scale_fill_manual(values = flPal, name = "Population") +
geom_hline(yintercept = 0.165, color = "red", lty = 5, size = 0.75) + # creating a dashed line to indicate a clonal distance threshold
geom_text(data = subset(cloneDendPoints, subset = label %in% techReps), aes(x = (x + 0.53), y = (y - .0055), label = "*"), angle = 90, size = 10) + # spacing technical replicates further from leaf
geom_text(data = subset(cloneDendPoints, subset = !label %in% techReps), aes(x = x, y = (y - .010), label = label), angle = 90) +
labs(y = "Genetic distance (1 - IBS)") +
theme_classic()
cloneDend = cloneDendA + theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(size = 16, color = "black", angle = 90),
axis.text.y = element_text(size = 14, color = "black"),
axis.line.y = element_line(),
axis.ticks.y = element_line(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank(),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = "bottom")
cloneDend
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/cloneDend_GENOME.png", plot = cloneDend, height = 5, width = 16, units = "in", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/cloneDend_GENOME.eps", plot = cloneDend, height = 5, width = 16, units = "in", dpi = 300)
