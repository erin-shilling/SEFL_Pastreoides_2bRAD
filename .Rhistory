pastRelate = read.delim("data_files/filtRelate")
pastRelate2 = pastRelate %>% group_by(a, b) %>% select("relate" = rab)
pastRelate2 = pastRelate2 %>% left_join(popData, by = "a") %>% left_join(popData, by = c("b" = "a"), suffix = c(".a", ".b"))
pastRelate = pastRelate2 %>% filter(Population.a == Population.b) %>% rename(Population = Population.a)
View(pastRelate)
het = left_join(popData, hetAll, by = "sample") %>% mutate("inbreed" = pastBreed$inbreed)
popData = read.csv("data_files/poritesastreoidesMetaData_clonesremoved_NOADMIX.csv") %>% select("sample" = tube_id, "Population" = lineage)
het = left_join(popData, hetAll, by = "sample") %>% mutate("inbreed" = pastBreed$inbreed)
View(het)
hetStats = het %>% group_by() %>% dplyr::summarise(N = n(), meanAll = mean(All), sdAll = sd(All), seAll = sd(All)/sqrt(N), meanInbreed = mean(inbreed), sdInbreed = sd(inbreed), seInbreed = sd(inbreed)/sqrt(N))
min(hetStats$meanAll, na.rm = TRUE)
max(hetStats$meanAll, na.rm = TRUE)
hetAllLm = lm(data = het, All~Population)
inbreedLm = lm(data = het, inbreed~Population)
hetAllANOVA = summary(aov(hetAllLm))
hetAllANOVA
View(hetAll)
View(hetStats)
View(het)
View(pastBreed)
popData = read.csv("data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "Population" = lineage)
popData$a = c(0:35)
popData$Population = factor(popData$Population)
hetAll = read.table("data_files/pastHet")
colnames(hetAll) = c("sample", "All")
hetAll$sample = popData$sample
#remove admixed samples
hetAll <- hetAll[-c(3, 9, 15, 30), ]
pastBreed = read.delim("data_files/filtRelate")
pastBreed2 = pastBreed %>% group_by(a) %>% select("inbreed" = Fa)
pastBreed3 = pastBreed %>% group_by(b) %>% select("inbreed" = Fb)
pastBreed = bind_rows(pastBreed2, pastBreed3) %>% group_by(a) %>% summarise("inbreed" = mean(inbreed))
pastBreed <- pastBreed[-c(3, 9, 15, 30), ]
popData = read.csv("data_files/poritesastreoidesMetaData_clonesremoved_NOADMIX.csv") %>% select("sample" = tube_id, "Population" = lineage)
het = left_join(popData, hetAll, by = "sample") %>% mutate("inbreed" = pastBreed$inbreed)
hetStats = het %>% group_by() %>% dplyr::summarise(N = n(), meanAll = mean(All), sdAll = sd(All), seAll = sd(All)/sqrt(N), meanInbreed = mean(inbreed), sdInbreed = sd(inbreed), seInbreed = sd(inbreed)/sqrt(N))
min(hetStats$meanAll, na.rm = TRUE)
max(hetStats$meanAll, na.rm = TRUE)
hetAllLm = lm(data = het, All~Population)
inbreedLm = lm(data = het, inbreed~Population)
hetAllANOVA = summary(aov(hetAllLm))
hetAllANOVA
hetAllpwc <- het %>% tukey_hsd(All~Population)
hetAllpwc
View(hetAllANOVA)
View(popData)
#summarizing outputs
hetAllANOVA = summary(aov(hetAllLm))
hetAllANOVA
hetAllpwc <- het %>% tukey_hsd(All~Population)
hetAllpwc
hetMelt = melt(het, id.vars = c("sample", "Population"), variable.name = "type", value.name = "heterozygosity")
kColPal3 = c("#AFDE62", "#FF8C8D", "mediumpurple3")
hetTheme = theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 10),
axis.ticks.y = element_line(color = "black"),
legend.position = "right",
legend.key.size = unit(0.5, 'cm'),
panel.border = element_rect(color = "black"),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
dodge <- position_dodge(width = 1)
hetAll_comp <- list( c("Green", "Pink"), c("Green", "Purple"))
hetPlotAll = ggplot(data = subset(hetMelt, subset = hetMelt$type == "All"), aes(x = Population, y = heterozygosity, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Population") +
ylab("Heterozygosity") +
ggtitle("All loci") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = hetAll_comp, label = "p.signif", label.y = c(0.0017))
hetPlotAll
inbreedingPlot = ggplot(data = het, aes(x = Population, y = inbreed, fill = Population)) +
geom_point(aes(color = Population), shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
coord_cartesian(ylim = c(0, 0.12)) +
xlab("Lineage") +
ylab("Inbreeding coefficient") +
ggtitle("Inbreeding") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme
inbreedingPlot
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
hetPlotAll
hetPlots
ggsave("figures/heterozygosityPlot_pval.png", plot = hetPlots, width = 22, height = 16, units = "cm", dpi = 300)
View(hetMelt)
colnames(hetMelt) <- c('sample','Lineage','type', 'heterozygosity')
View(hetMelt)
hetTheme = theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 10),
axis.ticks.y = element_line(color = "black"),
legend.position = "right",
legend.key.size = unit(0.5, 'cm'),
panel.border = element_rect(color = "black"),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
dodge <- position_dodge(width = 1)
hetAll_comp <- list( c("Green", "Pink"), c("Green", "Purple"))
hetPlotAll = ggplot(data = subset(hetMelt, subset = hetMelt$type == "All"), aes(x = Population, y = heterozygosity, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Heterozygosity") +
ggtitle("All loci") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = hetAll_comp, label = "p.signif", label.y = c(0.0017))
inbreedingPlot = ggplot(data = het, aes(x = Population, y = inbreed, fill = Population)) +
geom_point(aes(color = Population), shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
coord_cartesian(ylim = c(0, 0.12)) +
xlab("Lineage") +
ylab("Inbreeding coefficient") +
ggtitle("Inbreeding") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
View(hetMelt)
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
hetTheme = theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 10),
axis.ticks.y = element_line(color = "black"),
legend.position = "right",
legend.key.size = unit(0.5, 'cm'),
panel.border = element_rect(color = "black"),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
dodge <- position_dodge(width = 1)
hetAll_comp <- list( c("Green", "Pink"), c("Green", "Purple"))
hetPlotAll = ggplot(data = subset(hetMelt, subset = hetMelt$type == "All"), aes(x = Lineage, y = heterozygosity, fill = Lineage)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Heterozygosity") +
ggtitle("All loci") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = hetAll_comp, label = "p.signif", label.y = c(0.0017))
inbreedingPlot = ggplot(data = het, aes(x = Lineage, y = inbreed, fill = Lineage)) +
geom_point(aes(color = Lineage), shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
coord_cartesian(ylim = c(0, 0.12)) +
xlab("Lineage") +
ylab("Inbreeding coefficient") +
ggtitle("Inbreeding") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
hetPlotAll = ggplot(data = subset(hetMelt, subset = hetMelt$type == "All"), aes(x = Lineage, y = heterozygosity, fill = Lineage)) +
geom_point(aes(color = Lineage),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Heterozygosity") +
ggtitle("All loci") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = hetAll_comp, label = "p.signif", label.y = c(0.0017))
inbreedingPlot = ggplot(data = het, aes(x = Lineage, y = inbreed, fill = Lineage)) +
geom_point(aes(color = Lineage), shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
coord_cartesian(ylim = c(0, 0.12)) +
xlab("Lineage") +
ylab("Inbreeding coefficient") +
ggtitle("Inbreeding") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme
#results still look weird, talk to Ryan
#relate_comp <- list( c("Green", "Pink"), c("Green", "Purple"), c("Pink", "Purple"))
#relatePlot = ggplot(data = pastRelate, aes(x = Lineage, y = relate, fill = Population)) +
#  geom_point(aes(color = Lineage),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
#  geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
#  xlab("Lineage") +
#  ylab("Relatedness") +
#  ggtitle("Relatedness") +
#  scale_fill_manual(values = kColPal3) +
#  scale_color_manual(values = kColPal3) +
#  theme_bw() +
#  hetTheme +
#  stat_compare_means(comparisons = relate_comp, label = "p.signif", label.y = c(0.90, 0.25, 0.85))
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
View(hetMelt)
View(hetPlotAll)
hetMelt = melt(het, id.vars = c("sample", "Population"), variable.name = "type", value.name = "heterozygosity")
hetMelt = melt(het, id.vars = c("sample", "Population"), variable.name = "type", value.name = "heterozygosity")
hetPlotAll = ggplot(data = subset(hetMelt, subset = hetMelt$type == "All"), aes(x = Lineage, y = heterozygosity, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Heterozygosity") +
ggtitle("All loci") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = hetAll_comp, label = "p.signif", label.y = c(0.0017))
inbreedingPlot = ggplot(data = het, aes(x = Lineage, y = inbreed, fill = Population)) +
geom_point(aes(color = Population), shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
coord_cartesian(ylim = c(0, 0.12)) +
xlab("Lineage") +
ylab("Inbreeding coefficient") +
ggtitle("Inbreeding") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme
inbreedingPlot
inbreedingPlot = ggplot(data = het, aes(x = Population, y = inbreed, fill = Population)) +
geom_point(aes(color = Population), shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
coord_cartesian(ylim = c(0, 0.12)) +
xlab("Lineage") +
ylab("Inbreeding coefficient") +
ggtitle("Inbreeding") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme
inbreedingPlot
hetPlotAll = ggplot(data = subset(hetMelt, subset = hetMelt$type == "All"), aes(x = Population, y = heterozygosity, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Lineage") +
ylab("Heterozygosity") +
ggtitle("All loci") +
scale_fill_manual(values = kColPal3) +
scale_color_manual(values = kColPal3) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = hetAll_comp, label = "p.signif", label.y = c(0.0017))
hetPlotAll
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank()) +
guides(fill=guide_legend(title="Lineage"))
hetPlots
hetPlots
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank()) +
labs(Population="Lineage")
hetPlots
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank(),
labs(Population="Lineage"))
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank()) +
guides(Population = guide_legend(title = "Lineage"))
hetPlots
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank()) +
guides(color = guide_legend(title = "Lineage"))
hetPlots
??legend.title
??ggplot2
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank()) +
guides(color = guide_legend(title = "Lineage")) +
labs(col='Lineage')
hetPlots
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank()) +
guides(color = guide_legend(title = "Lineage")) +
labs(col="Lineage")
hetPlots
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank()) +
labs(col="Lineage")
hetPlots
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank()) +
guides(col=guide_legend("Lineage"))
hetPlots
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank()) +
scale_color_discrete("Lineage")
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
scale_color_discrete("Lineage") +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
scale_fill_discrete("Lineage") +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
hetPlots = ((hetPlotAll | inbreedingPlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
ggsave("figures/heterozygosityPlot_pval.png", plot = hetPlots, width = 22, height = 16, units = "cm", dpi = 300)
