axis.line.y = element_line(),
axis.ticks.y = element_line(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank(),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = "bottom")
cloneDend
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/cloneDend_nolabels_nobg.png", plot = cloneDend, height = 5, width = 16, units = "in", dpi = 300)
library(tidyverse)
library(rstatix)
knitr::opts_chunk$set(echo = TRUE)
# setup rmarkdown environment first
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.align = 'left')
options(timeout=600)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
popData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "Population" = region)
popData$Population[popData$Population=="Pompano/LBTS"]<-"Ft. Lauderdale"
popData$a = c(0:35)
popData$Population = factor(popData$Population)
levels(popData$Population)
popData$Population = factor(popData$Population, levels = levels(popData$Population)[c(4, 3, 5, 1, 2)])
hetAll = read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/hetAllSites")
colnames(hetAll) = c("sample", "All")
hetAll$sample = popData$sample
HetSNPs = read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/HetSNPs")
colnames(HetSNPs) = c("sample", "SNPs")
HetSNPs$sample = popData$sample
pastBreed = read.delim("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/newres")
pastBreed2 = pastBreed %>% group_by(a) %>% select("inbreed" = Fa)
pastBreed3 = pastBreed %>% group_by(b) %>% select("inbreed" = Fb)
pastBreed = bind_rows(pastBreed2, pastBreed3) %>% group_by(a) %>% summarise("inbreed" = mean(inbreed))
pastRelate = read.delim("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/newres")
pastRelate2 = pastRelate %>% group_by(a, b) %>% select("relate" = rab)
pastRelate2 = pastRelate2 %>% left_join(popData, by = "a") %>% left_join(popData, by = c("b" = "a"), suffix = c(".a", ".b"))
pastRelate = pastRelate2 %>% filter(Population.a == Population.b) %>% rename(Population = Population.a)
het = left_join(popData, hetAll, by = "sample") %>% left_join(HetSNPs, by = "sample") %>% mutate("inbreed" = pastBreed$inbreed)
hetStats = het %>% group_by(Population) %>% dplyr::summarise(N = n(), meanAll = mean(All), sdAll = sd(All), seAll = sd(All)/sqrt(N), meanSnps = mean(SNPs), sdSnps = sd(SNPs), seSnps = sd(SNPs)/sqrt(N), meanInbreed = mean(inbreed), sdInbreed = sd(inbreed), seInbreed = sd(inbreed)/sqrt(N))
min(hetStats$meanAll, na.rm = TRUE)
max(hetStats$meanAll, na.rm = TRUE)
min(hetStats$meanSnps, na.rm = TRUE)
max(hetStats$meanSnps, na.rm = TRUE)
hetAllLm = lm(data = het, All~Population)
hetSnpLm = lm(data = het, SNPs~Population)
inbreedLm = lm(data = het, inbreed~Population)
relateLm = lm(data = pastRelate, relate~Population)
#summarizing outputs from lm
hetAllANOVA = summary(aov(hetAllLm))
hetAllANOVA
hetAllpwc <- het %>% tukey_hsd(All~Population)
hetAllpwc
hetSnpANOVA = summary(aov(hetSnpLm))
hetSnpANOVA
hetSnppwc <- het %>% tukey_hsd(SNPs~Population)
hetSnppwc
inbreedANOVA = summary(aov(inbreedLm))
inbreedANOVA
inbreedpwc <- het %>% tukey_hsd(inbreed~Population)
inbreedpwc
relateANOVA = summary(aov(relateLm))
relateANOVA
relatepwc<- aov(relate ~ Population, data = pastRelate) %>% tukey_hsd()
relatepwc
hetTab = hetStats
library(paletteer)
library(reshape2)
library(patchwork)
library(ggpubr)
hetMelt = melt(het, id.vars = c("sample", "Population"), variable.name = "type", value.name = "heterozygosity")
flPal = paletteer_d("LaCroixColoR::PeachPear")[c(1,2,3,4,5)]
hetTheme = theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 10),
axis.ticks.y = element_line(color = "black"),
legend.position = "right",
legend.key.size = unit(0.5, 'cm'),
panel.border = element_rect(color = "black"),
#        panel.background = element_rect(fill = "white"),
#        plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetTheme = theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 10),
axis.ticks.y = element_line(color = "black"),
legend.position = "right",
legend.key.size = unit(0.5, 'cm'),
#        panel.border = element_rect(color = "black"),
#        panel.background = element_rect(fill = "white"),
#        plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
dodge <- position_dodge(width = 1)
hetAll_comp <- list( c("Jupiter", "Ft. Lauderdale") )
hetPlotAll = ggplot(data = subset(hetMelt, subset = hetMelt$type == "All"), aes(x = Population, y = heterozygosity, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Population") +
ylab("Heterozygosity") +
ggtitle("All loci") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = hetAll_comp, label = "p.signif", label.y = c(0.0048))
hetSnp_comp <- list( c("Jupiter", "Ft. Lauderdale") )
hetPlotSnps = ggplot(data = subset(hetMelt, subset = hetMelt$type == "SNPs"),aes(x = Population, y = heterozygosity, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Population") +
ylab("Heterozygosity") +
ggtitle("SNPs") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = hetSnp_comp, label = "p.signif", label.y = c(0.43))
inbreed_comp <- list( c("St. Lucie Reef", "Jupiter"), c("Jupiter", "Ft. Lauderdale"), c("West Palm Beach", "Ft. Lauderdale"), c("Boynton Beach", "Ft. Lauderdale") )
inbreedingPlot = ggplot(data = het, aes(x = Population, y = inbreed, fill = Population)) +
geom_point(aes(color = Population), shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
coord_cartesian(ylim = c(0, 0.135)) +
xlab("Population") +
ylab("Inbreeding coefficient") +
ggtitle("Inbreeding") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = inbreed_comp, label = "p.signif", label.y = c(0.07, 0.107, 0.12, 0.09))
relatePlot = ggplot(data = pastRelate, aes(x = Population, y = relate, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Population") +
ylab("Relatedness") +
ggtitle("Relatedness") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw() +
hetTheme
hetPlots = ((hetPlotAll | hetPlotSnps) / (inbreedingPlot | relatePlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right")
hetPlots
ggsave("figures/heterozygosityPlot_pval_nobg.png", plot = hetPlots, width = 22, height = 16, units = "cm", dpi = 300, bg = "transparent")
hetPlots = ((hetPlotAll | hetPlotSnps) / (inbreedingPlot | relatePlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right"
panel.grid = element_blank(),
hetPlots = ((hetPlotAll | hetPlotSnps) / (inbreedingPlot | relatePlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
panel.grid = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
ggsave("figures/heterozygosityPlot_pval_nobg.png", plot = hetPlots, width = 22, height = 16, units = "cm", dpi = 300, bg = "transparent")
hetPlotAll = ggplot(data = subset(hetMelt, subset = hetMelt$type == "All"), aes(x = Population, y = heterozygosity, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Population") +
ylab("Heterozygosity") +
ggtitle("All loci") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw(panel.grid = element_blank(),
panel.background = element_blank(),
plot.background = element_blank()) +
hetTheme +
stat_compare_means(comparisons = hetAll_comp, label = "p.signif", label.y = c(0.0048))
hetPlotAll = ggplot(data = subset(hetMelt, subset = hetMelt$type == "All"), aes(x = Population, y = heterozygosity, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Population") +
ylab("Heterozygosity") +
ggtitle("All loci") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw(panel.grid = element_blank(),
panel.background = element_blank(),
plot.background = element_blank()) +
hetTheme +
stat_compare_means(comparisons = hetAll_comp, label = "p.signif", label.y = c(0.0048))
hetPlotAll = ggplot(data = subset(hetMelt, subset = hetMelt$type == "All"), aes(x = Population, y = heterozygosity, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Population") +
ylab("Heterozygosity") +
ggtitle("All loci") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw(panel.grid = element_blank(),
plot.background = element_blank()) +
hetTheme +
stat_compare_means(comparisons = hetAll_comp, label = "p.signif", label.y = c(0.0048))
hetPlotAll = ggplot(data = subset(hetMelt, subset = hetMelt$type == "All"), aes(x = Population, y = heterozygosity, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Population") +
ylab("Heterozygosity") +
ggtitle("All loci") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = hetAll_comp, label = "p.signif", label.y = c(0.0048))
hetSnp_comp <- list( c("Jupiter", "Ft. Lauderdale") )
hetPlotSnps = ggplot(data = subset(hetMelt, subset = hetMelt$type == "SNPs"),aes(x = Population, y = heterozygosity, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Population") +
ylab("Heterozygosity") +
ggtitle("SNPs") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = hetSnp_comp, label = "p.signif", label.y = c(0.43))
inbreed_comp <- list( c("St. Lucie Reef", "Jupiter"), c("Jupiter", "Ft. Lauderdale"), c("West Palm Beach", "Ft. Lauderdale"), c("Boynton Beach", "Ft. Lauderdale") )
inbreedingPlot = ggplot(data = het, aes(x = Population, y = inbreed, fill = Population)) +
geom_point(aes(color = Population), shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
coord_cartesian(ylim = c(0, 0.135)) +
xlab("Population") +
ylab("Inbreeding coefficient") +
ggtitle("Inbreeding") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw() +
hetTheme +
stat_compare_means(comparisons = inbreed_comp, label = "p.signif", label.y = c(0.07, 0.107, 0.12, 0.09))
relatePlot = ggplot(data = pastRelate, aes(x = Population, y = relate, fill = Population)) +
geom_point(aes(color = Population),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Population") +
ylab("Relatedness") +
ggtitle("Relatedness") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw() +
hetTheme
hetPlots = ((hetPlotAll | hetPlotSnps) / (inbreedingPlot | relatePlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
panel.grid = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
ggsave("figures/heterozygosityPlot_pval_nobg.png", plot = hetPlots, width = 22, height = 16, units = "cm", dpi = 300, bg = "transparent")
hetPlots = ((hetPlotAll | hetPlotSnps) / (inbreedingPlot | relatePlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
panel.grid = element_blank(),
#        panel.background = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
ggsave("figures/heterozygosityPlot_pval_nobg.png", plot = hetPlots, width = 22, height = 16, units = "cm", dpi = 300, bg = "transparent")
hetPlots = ((hetPlotAll | hetPlotSnps) / (inbreedingPlot | relatePlot)) +
plot_annotation(tag_levels = 'a') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right",
#        panel.grid = element_blank(),
plot.background = element_blank(),
legend.key = element_blank(),
legend.background = element_blank())
hetPlots
ggsave("figures/heterozygosityPlot_pval_nobg.png", plot = hetPlots, width = 22, height = 16, units = "cm", dpi = 300, bg = "transparent")
library(tidyverse)
library(vcfR)
library(adegenet)
library(poppr)
pastVcf = read.vcfR("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.bcf", verbose = TRUE)
#convert to genlight files for poppr
pastGenlightPopulation = vcfR2genlight(pastVcf, n.cores = 1)
popData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "pop" = region)
strata(pastGenlightPopulation) = data.frame(popData)
setPop(pastGenlightPopulation) = ~pop
#Runs AMOVA looking at samples by region
amova <- poppr.amova(pastGenlightPopulation, ~pop)
amova
set.seed(694)
amovasignif <- randtest(amova, nrepet = 99)
amovasignif$names
amovasignif$obs
amovasignif$pvalue
amovaPerc = paste(round(amova$componentsofcovariance$`%`[1], 2), "%",sep="")
amovaP = amovasignif$pvalue[3]
amovaPerc
amovaP
pastMa = as.matrix(read.table("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/pastNoClones.ibsMat"))
pastMds = cmdscale(pastMa, eig = TRUE, x.ret = TRUE)
meta = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv")
on each Principal Coordinate
pastPcoaVar = round(pastMds$eig/sum(pastMds$eig)*100, 1)
head(pastPcoaVar)
pastPcoaValues = pastMds$points
head(pastPcoaValues)
pastI2P = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "pop" = region)
pastI2P$pop[pastI2P$pop=="Pompano/LBTS"]<-"Ft. Lauderdale"
row.names(pastI2P) = pastI2P[,1]
pastPcoaValues=cbind(pastI2P, pastPcoaValues)
pastPcoaValues =as.data.frame(pastPcoaValues, sample = rownames(pastPcoaValues))
colnames(pastPcoaValues)[c(3,4)] = c("PCo1", "PCo2")
head(pastPcoaValues)
pastPCoA = merge(pastPcoaValues, aggregate(cbind(mean.x=PCo1,mean.y=PCo2)~pop, pastPcoaValues, mean), by="pop")
pastPCoA$pop = factor(pastPCoA$pop)
levels(pastPCoA$pop)
pastPCoA$pop = factor(pastPCoA$pop, levels(pastPCoA$pop)[c(4, 3, 5, 1, 2)])
flPal = paletteer_d("LaCroixColoR::PeachPear")[c(1,2,3,4,5)]
library(paletteer)
flPal = paletteer_d("LaCroixColoR::PeachPear")[c(1,2,3,4,5)]
pastPcoaPlotA = ggplot(pastPCoA, aes(x = PCo1, y = PCo2, color = pop, fill = pop)) +
#    geom_segment(data = Cred, aes(x = 0, xend = Dim1*0.348, y = 0,
#    yend = Dim2*0.28), arrow = arrow(length = unit(0.4, "cm")), color = "black", size=1, inherit.aes = FALSE) + # adds vectors
#  geom_text(data = Cred, aes(x = Dim1*0.348, y = ((Dim2*0.28)-0.02), label = Drivers), size = 2, inherit.aes = FALSE)+ # adds labels to vectors
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
#ellipses
stat_ellipse(data = pastPCoA, type = "t", geom = "polygon", alpha = 0.1) +
#individuals indicated by small transparent circles
geom_point(aes(x = PCo1, y = PCo2), size = 3, alpha = 0.3, show.legend = FALSE) +
#population centroids indicated by large circles
geom_point(aes(x = mean.x, y = mean.y), size = 5, color = "black", shape = 21) +
annotate(geom = "text", x = 0.1, y = -0.25, label = bquote("AMOVA:"~.(amovaPerc)*","~italic(p)~" = "~.(amovaP))) +
scale_fill_manual(values = flPal, name = "Region") +
scale_color_manual(values = flPal, guide = NULL) +
xlab(paste ("PCo 1 (", pastPcoaVar[1],"%)", sep = "")) + #Prints percent variation explained by first axis
ylab(paste ("PCo 2 (", pastPcoaVar[2],"%)", sep = "")) + #Prints percent variation explained by second axis
guides(shape = guide_legend(order = 2), linetype = guide_legend(override.aes = list(linetype = c(1,2), alpha = 1, color = "black", fill = NA), order = 3), fill = guide_legend(override.aes = list(shape = 22, size = 5, color = NA, alpha = NA), order = 1))+
theme_bw()
pastPcoaPlot = pastPcoaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pastPcoaPlot
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot_nobg.png", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300, bg = "transparent")
pastPcoaPlot = pastPcoaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.background = element_blank(),
legend.box.background = element_blank())
pastPcoaPlot = pastPcoaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
panel.border = element_rect(color = "black", size = 1),
#        panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.background = element_blank(),
legend.box.background = element_blank())
pastPcoaPlot
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot_nobg.png", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300, bg = "transparent")
pastPcoaPlot = pastPcoaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
panel.border = element_rect(color = "black", size = 1),
#        panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
legend.background = element_blank(),
legend.box.background = element_blank())
pastPcoaPlot
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot_nobg.png", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300, bg = "transparent")
pastPcoaPlot = pastPcoaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#        panel.background = element_blank(),
plot.background = element_blank(),
legend.background = element_blank(),
legend.box.background = element_blank())
pastPcoaPlot
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot_nobg.png", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300, bg = "transparent")
pastPcoaPlot = pastPcoaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#        panel.background = element_blank(),
plot.background = element_blank(),
legend.background = element_blank(),
legend.box.background = element_blank(),
legen.key = element_blank())
pastPcoaPlot
pastPcoaPlot = pastPcoaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "right",
panel.border = element_rect(color = "black", size = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#        panel.background = element_blank(),
plot.background = element_blank(),
legend.background = element_blank(),
legend.box.background = element_blank(),
legend.key = element_blank())
pastPcoaPlot
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/pcoaPlot_nobg.png", plot = pastPcoaPlot, height = 3.5, width = 7, units = "in", dpi = 300, bg = "transparent")
