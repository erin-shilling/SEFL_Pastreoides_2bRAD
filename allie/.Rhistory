ylab("Inbreeding coefficient") +
ggtitle("Inbreeding") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw() +
hetTheme
relatePlot = ggplot(data = pastRelate, aes(x = Region, y = relate, fill = Region)) +
geom_point(aes(color = Region),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Region") +
ylab("Relatedness") +
ggtitle("Relatedness") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw() +
hetTheme
hetPlots = ((hetPlotAll | hetPlotSnps) / (inbreedingPlot | relatePlot)) +
plot_annotation(tag_levels = 'A') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right")
hetMelt = melt(het, id.vars = c("sample", "Region"), variable.name = "type", value.name = "heterozygosity")
flPal = paletteer_d("rcartocolor::Sunset")[c(7, 6, 4, 3, 1)]
hetTheme = theme(axis.title.x = element_text(color = "black", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 10),
axis.ticks.y = element_line(color = "black"),
legend.position = "right",
legend.key.size = unit(0.5, 'cm'),
panel.border = element_rect(color = "black"),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
dodge <- position_dodge(width = 1)
hetPlotAll = ggplot(data = subset(hetMelt, subset = hetMelt$type == "All"),aes(x = Region, y = heterozygosity, fill = Region)) +
geom_point(aes(color = Region),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Region") +
ylab("Heterozygosity") +
ggtitle("All loci") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw() +
hetTheme
hetPlotSnps = ggplot(data = subset(hetMelt, subset = hetMelt$type == "SNPs"),aes(x = Region, y = heterozygosity, fill = Region)) +
geom_point(aes(color = Region),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Region") +
ylab("Heterozygosity") +
ggtitle("SNPs") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw() +
hetTheme
inbreedingPlot = ggplot(data = het, aes(x = Region, y = inbreed, fill = Region)) +
geom_point(aes(color = Region),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Region") +
ylab("Inbreeding coefficient") +
ggtitle("Inbreeding") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw() +
hetTheme
relatePlot = ggplot(data = pastRelate, aes(x = Region, y = relate, fill = Region)) +
geom_point(aes(color = Region),shape = 21, position = position_jitterdodge(seed = 1, dodge.width = 1), size = 2, alpha = 0.7) +
geom_boxplot(size = 0.5, alpha = 0.7, position = dodge, color = "gray35", outlier.shape = NA) +
xlab("Region") +
ylab("Relatedness") +
ggtitle("Relatedness") +
scale_fill_manual(values = flPal) +
scale_color_manual(values = flPal) +
theme_bw() +
hetTheme
hetPlots = ((hetPlotAll | hetPlotSnps) / (inbreedingPlot | relatePlot)) +
plot_annotation(tag_levels = 'A') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right")
hetPlots = ((hetPlotAll | hetPlotSnps) / (inbreedingPlot | relatePlot)) +
plot_annotation(tag_levels = 'A') +
plot_layout(guides = "collect");
hetPlots = ((hetPlotAll | hetPlotSnps) / (inbreedingPlot | relatePlot)) +
plot_annotation(tag_levels = 'A') +
plot_layout(guides = "collect") +
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right")
hetPlots
library(dplyr)
hetPlots = ((hetPlotAll | hetPlotSnps) / (inbreedingPlot | relatePlot)) +
plot_annotation(tag_levels = 'A') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right")
hetPlots = ((hetPlotAll | hetPlotSnps) / (inbreedingPlot | relatePlot)) +
plot_annotation(tag_levels = 'A') +
plot_layout(guides = "collect")&
theme((plot.tag = element_text(size = 16),
hetPlots = ((hetPlotAll | hetPlotSnps) / (inbreedingPlot | relatePlot)) +
plot_annotation(tag_levels = 'A') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right")
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis", "ropensci/rnaturalearthhires")
pacman::p_load("cowplot", "ggrepel", "ggspatial", "maps", "paletteer", "patchwork", "rgdal", "rnaturalearth", "sf", "tidyverse", "reshape2", "MCMC.OTU", "pairwiseAdonis", "RColorBrewer", "Redmonder", "flextable", "lubridate", "officer", "adegenet", "dendextend", "gdata", "ggdendro", "hierfstat", "Imap", "kableExtra", "poppr", "reshape2", "StAMPP", "vcfR", "vegan", "boa", "measurements", "magick", "rgeos", "magrittr", "ggplot2")
hetPlots = ((hetPlotAll | hetPlotSnps) / (inbreedingPlot | relatePlot)) +
plot_annotation(tag_levels = 'A') +
plot_layout(guides = "collect")&
theme(plot.tag = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position = "right")
install.packages("sdmpredictors")
knitr::opts_chunk$set(echo = TRUE)
library(sdmpredictors)
datasets = list_datasets(terrestrial = FALSE, marine = TRUE)
View(datasets)
View(datasets)
present = list_layers(datasets)
View(present)
knitr::opts_chunk$set(echo = TRUE)
# setup rmarkdown environment first
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.align = 'left')
knitr::opts_chunk$set(echo = TRUE)
# setup rmarkdown environment first
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.align = 'left')
#packages: tidyverse, lubridate, measurements, sf, rnaturalearth
pastSamples = read.csv("data_files/poritesastreoidesMetaData_clonesremoved.csv", header = TRUE) %>% select(sample = tube_id, !sample_id)
library(tidyverse)
library(sdmpredictors)
datasets = list_datasets(terrestrial = FALSE, marine = TRUE)
present = list_layers(datasets) %>% dplyr::select(dataset_code, layer_code, name, units, description, contains("cellsize"), version) %>% filter(version == 2.2) %>% filter(layer_code %in% c("BO22_calcite", "BO22_cloudmean", "BO22_damean", "BO22_parmean", "BO22_ph", "BO22_carbonphytomean_ss", "BO22_carbonphytomean_bdmean", "BO22_chlomean_ss", "BO22_chlomean_bdmean", "BO22_curvelmean_ss", "BO22_curvelmean_bdmean", "BO22_dissoxmean_ss", "BO22_dissoxmean_bdmean", "BO22_ironmean_ss", "BO22_ironmean_bdmean", "BO22_lightbotmean_bdmean", "BO22_nitratemean_ss", "BO22_nitratemean_bdmean", "BO22_phosphatemean_ss", "BO22_phosphatemean_bdmean", "BO22_ppmean_ss", "BO22_ppmean_bdmean", "BO22_salinityrange_bdmean", "BO22_salinitymean_bdmean", "BO22_salinitymean_ss", "BO22_silicatemean_ss", "BO22_silicatemean_bdmean", "BO22_tempmax_bdmean", "BO22_tempmax_ss", "BO22_tempmean_bdmean", "BO22_tempmean_ss", "BO22_tempmin_bdmean", "BO22_tempmin_ss", "BO22_temprange_bdmean", "BO22_temprange_ss"))
envVar = load_layers(present$layer_code)
# Import coordinates of sites
meta=read.csv("poritesastreoidesMetaData_clonesremoved")
# Import coordinates of sites
meta=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv")
popData = dplyr::select(tube_id, region, collection_depth_m, site_lat, site_long)
popData = dplyr::select("tube_id", region, collection_depth_m, site_lat, site_long)
popData=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %/% select ("sample" = tube_id, "region" = region, "depth" = collection_depth_m, "lat" = site_lat, "lon" = site_long)
View(meta)
rm(meta)
popData=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %/% select ("sample" = tube_id, "region" = region, "depth" = collection_depth_m, "lat" = site_lat, "lon" = site_long)
popData=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved") %/% select ("sample" = tube_id, "region" = region, "depth" = collection_depth_m, "lat" = site_lat, "lon" = site_long)
popData=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %/% select ("sample" = tube_id, "region" = region, "depth" = collection_depth_m, "lat" = site_lat, "lon" = site_long)
# Import coordinates of sites
popData=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %/% select("sample" = tube_id, "region" = region, "depth" = collection_depth_m, "lat" = site_lat, "lon" = site_long)
popData = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "pop" = region)
popData=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %/% select("sample" = tube_id, "region" = region, "depth" = collection_depth_m, "lat" = site_lat, "lon" = site_long)
popData=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %/% select("sample" = tube_id, "region" = region, "depth" = collection_depth_m, "lat" = site_lat, "lon" = site_long)
popData=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %/% select("region" = region, "depth" = collection_depth_m, "lat" = site_lat, "lon" = site_long)
popData=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %/% select("sample" = tube_id, "region" = region, "depth" = collection_depth_m, "lat" = site_lat, "lon" = site_long)
library(tidyverse)
popData=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %/% select("sample" = tube_id, "region" = region, "depth" = collection_depth_m, "lat" = site_lat, "lon" = site_long)
popData=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv")
View(popData)
popData=read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/poritesastreoidesMetaData_clonesremoved.csv") %>% select("sample" = tube_id, "region" = region, "depth" = collection_depth_m, "lat" = site_lat, "lon" = site_long)
envData = data.frame(popData, raster::extract(envVar, popData[,6:5]))
envData = data.frame(popData, raster::extract(envVar, popData[,5:4]))
View(envData)
write_excel_csv(envData, file= 'Sites_w_Env_Data.csv')
#removing all variables that had significant colinearity >0.7, or that had vif >10
corData = rcorr(as.matrix(envData[,c(7:ncol(envData))]), type = "pearson")
#removing all variables that had significant colinearity >0.7, or that had vif >10
library(Hmisc)
install.packages("Hmisc")
corData = rcorr(as.matrix(envData[,c(7:ncol(envData))]), type = "pearson")
#removing all variables that had significant colinearity >0.7, or that had vif >10
library(Hmisc)
corData = rcorr(as.matrix(envData[,c(7:ncol(envData))]), type = "pearson")
corDataFlat = melt(corData$r, value.name = "r")
library(reshape2)
library(reshape2)
corDataFlat = melt(corData$r, value.name = "r")
pDataFlat = melt(corData$P, value.name = "p")
corDataBind = corDataFlat %>% left_join(pDataFlat, by = c("Var1","Var2"))
ggplot(corDataBind) +
geom_tile(aes(x = Var1, y = Var2, fill = r)) +
scale_fill_gradient2(low = "#3B9AB2FF", high = "#F21A00FF") +
geom_text(data = filter(corDataBind, r >= 0.7, p < 0.05),aes(x = Var1, y = Var2, label = round(r, 2))) +
geom_text(data = filter(corDataBind, r <= -0.7, p < 0.05),aes(x = Var1, y = Var2, label = round(r, 2))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
EnvPlotCor = ggplot(corDataBind) +
geom_tile(aes(x = Var1, y = Var2, fill = r)) +
scale_fill_gradient2(low = "#3B9AB2FF", high = "#F21A00FF") +
geom_text(data = filter(corDataBind, r >= 0.7, p < 0.05),aes(x = Var1, y = Var2, label = round(r, 2))) +
geom_text(data = filter(corDataBind, r <= -0.7, p < 0.05),aes(x = Var1, y = Var2, label = round(r, 2))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/EnvPlotCor.png", plot = EnvPlotCor, width = 30, height = 30, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/figures/EnvPlotCor.png", plot = EnvPlotCor, width = 50, height = 50, units = "cm", dpi = 300)
??summary
library(tidyverse)
library(reshape2)
library(RColorBrewer)
library(paletteer)
rrcMetadataR_fix <- read.csv("D:/rrcMetadataR_fix.csv")
View(rrcMetadataR_fix)
read(rrcMetadataR_fix)
read.csv(rrcMetadataR_fix)
rm(rrcMetadataR_fix)
# read in sample metadata with clones, remove technical replicates
popDataClones = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/allie/rrcMetadataR_fix.csv") %>% select("sample" = sampleID, "pop" = Site)
#treat populations as a factor & order them North-->South
popDataClones$pop = factor(popDataClones$pop)
# read in sample metadata with clones, remove technical replicates
RRCDataClones = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/data_files/allie/rrcMetadataR_fix.csv") %>% select("sample" = sampleID, "pop" = Site)
# read in sample metadata with clones, remove technical replicates
RRCDataClones = read.csv("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/allie/rrcMetadataR_fix.csv") %>% select("sample" = sampleID, "pop" = Site)
#treat populations as a factor & order them North-->South
RRCDataClones$pop = factor(RRCDataClones$pop)
levels(RRCDataClones$pop)
RRCDataClones$pop = factor(RRCDataClones$pop, levels = levels(RRCDataClones$pop)[c(3, 2, 5, 4, 1)])
levels(RRCDataClones$pop)
#read in zoox reads data with clones incl, technical replicates removed
zoox = read.delim("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/allie/zooxReads", header = FALSE, check.names = FALSE)
head(zoox)
zoox$V2[is.na(zoox$V2)] <- as.character(zoox$V1[is.na(zoox$V2)])
zoox$V1 = gsub("P.*", "chr", zoox$V1)
zoox$V2 = gsub(".trim.*", "", zoox$V2)
zoox = zoox %>% filter(zoox$V1 != "*")
zooxLst = split(zoox$V2, as.integer(gl(length(zoox$V2), 20, length(zoox$V2))))
zooxMaps = NULL
for(i in zooxLst){
zooxMaps = rbind(zooxMaps, data.frame(t(i)))
}
colnames(zooxMaps) = c("sample", zoox$V1[c(2:20)])
for(i in c(2:20)){
zooxMaps[,i] = as.numeric(zooxMaps[,i])
}
str(zooxMaps)
zooxMaps$Symbiodinium = rowSums(zooxMaps[2:6])
zooxMaps$Breviolum = rowSums(zooxMaps[7:10])
zooxMaps$Cladocopium = rowSums(zooxMaps[11:16])
zooxMaps$Durusdinium = rowSums(zooxMaps[17:20])
zooxMaps = zooxMaps[,c(1, 21:24)]
zooxProp = zooxMaps
zooxProp$sum = apply(zooxProp[, c(2:length(zooxProp[1,]))], 1, function(x) {
sum(x, na.rm = T)
})
zooxProp = cbind(zooxProp$sample, (zooxProp[, c(2:(ncol(zooxProp)-1))]
/ zooxProp$sum))
colnames(zooxProp)[1] = "sample"
head(zooxProp)
apply(zooxProp[, c(2:(ncol(zooxProp)))], 1, function(x) {
sum(x, na.rm = T)
})
View(zooxProp)
dfZoox = RRCDataClones %>% left_join(zooxProp)
dfZoox$pop = as.factor(dfZoox$pop)
levels(dfZoox$pop)
View(dfZoox)
dfZoox = dfZoox[order(dfZoox$pop),]
sampleCounts = plyr::count(dfZoox, c('pop'))
meltedList = reshape2::melt(lapply(sampleCounts$freq,function(x){c(1:x)}))
dfZoox$barPlotOrder = meltedList$value
dfZoox = dfZoox[c(1,ncol(dfZoox),2:(ncol(dfZoox)-1))]
zDat = melt(dfZoox, id.vars = c("sample", "pop", "barPlotOrder"), variable.name = "Symbiont", value.name = "Fraction")
colPalZoox = brewer.pal(4, "BrBG")
names(colPalZoox) = levels(zDat$Symbiont)
colPalZoox = c("#247EA3", "#FFBF46", "#6A9FA1", "Purple3")
flPal = paletteer_d("rcartocolor::Sunset")[c(7, 6, 4, 3, 1)]
popAnno = data.frame(x1 = c(0.5, 0.5, 0.5, 0.5, 0.5), x2 = c(14.5, 18.5, 14.5, 23.5, 26.5),
y1 = -0.065, y2 = -0.065, pop = c("NorthECA", "MiddleECA", "SouthECA", "Sand", "Looe"))
popAnno$pop = factor(popAnno$pop)
levels(popAnno$pop)
popAnno$pop = factor(popAnno$pop, levels = levels(popAnno$pop)[c(3, 2, 5, 4, 1)])
dfZoox = zDat %>% left_join(popAnno, by = "pop")
zooxSNPA = ggplot(data = dfZoox, aes(x = barPlotOrder, y = Fraction, fill = Symbiont, order = barPlotOrder)) +
geom_bar(stat = "identity", position = "stack", colour = "grey25", width = 1, size = 0.2) +
xlab("Population") +
scale_x_discrete(expand = c(0.001, 0.001)) +
scale_y_continuous(expand = c(-.001, -0.001)) +
scale_color_manual(values = flPal) +
geom_segment(aes(x = x1, xend = x2, y = y1, yend = y2, color = pop), size = 7) +
scale_fill_manual(values = colPalZoox, name = "Symbiodiniaceae genus") +
coord_cartesian(ylim = c(-.01,1.01), clip = "off") +
facet_grid(~ pop, drop = TRUE, space = "free", scales = "free", switch = "both") +
guides(color = "none") +
theme_bw()
zooxSNP = zooxSNPA + theme(plot.title = element_text(),
panel.grid = element_blank(),
panel.background = element_rect(fill = "gray25", colour = "grey25"),
panel.border = element_rect(fill = NA, color = "black", size = 1, linetype = "solid"),
panel.spacing.x = grid:::unit(0.05, "lines"),
panel.spacing.y = grid:::unit(0.05, "lines"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title = element_blank(),
strip.background.x = element_blank(),
strip.background.y = element_blank(),
strip.text = element_text(size = 10),
strip.text.y.left = element_text(size = 10, angle = 90),
strip.text.x.bottom = element_text(vjust = -.05, color = "black"),
legend.key.size = unit(0.75, "line"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
legend.key = element_blank(),
legend.position = "bottom")
# zooxSNP figure with clones
zooxSNP
brewer.pal(8, BrBG)
brewer.pal(8, "BrBG")
display.brewer.pal(BrBG)
display.brewer.pal("BrBG")
display.brewer.pal()
display.brewer.pal(name = "BrBG")
display.brewer.pal(n = 4, name = "BrBG")
display.brewer.pal(n = 12, name = "BrBG")
colPalZoox = c("#D0D3D4", "#ADDC91", "#6A9FA1", "E45DBF")
flPal = paletteer_d("rcartocolor::Sunset")[c(7, 6, 4, 3, 1)]
popAnno = data.frame(x1 = c(0.5, 0.5, 0.5, 0.5, 0.5), x2 = c(14.5, 18.5, 14.5, 23.5, 26.5),
y1 = -0.065, y2 = -0.065, pop = c("NorthECA", "MiddleECA", "SouthECA", "Sand", "Looe"))
popAnno$pop = factor(popAnno$pop)
popAnno$pop = factor(popAnno$pop, levels = levels(popAnno$pop)[c(3, 2, 5, 4, 1)])
dfZoox = zDat %>% left_join(popAnno, by = "pop")
zooxSNPA = ggplot(data = dfZoox, aes(x = barPlotOrder, y = Fraction, fill = Symbiont, order = barPlotOrder)) +
geom_bar(stat = "identity", position = "stack", colour = "grey25", width = 1, size = 0.2) +
xlab("Population") +
scale_x_discrete(expand = c(0.001, 0.001)) +
scale_y_continuous(expand = c(-.001, -0.001)) +
scale_color_manual(values = flPal) +
geom_segment(aes(x = x1, xend = x2, y = y1, yend = y2, color = pop), size = 7) +
scale_fill_manual(values = colPalZoox, name = "Symbiodiniaceae genus") +
coord_cartesian(ylim = c(-.01,1.01), clip = "off") +
facet_grid(~ pop, drop = TRUE, space = "free", scales = "free", switch = "both") +
guides(color = "none") +
theme_bw()
zooxSNP = zooxSNPA + theme(plot.title = element_text(),
panel.grid = element_blank(),
panel.background = element_rect(fill = "gray25", colour = "grey25"),
panel.border = element_rect(fill = NA, color = "black", size = 1, linetype = "solid"),
panel.spacing.x = grid:::unit(0.05, "lines"),
panel.spacing.y = grid:::unit(0.05, "lines"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title = element_blank(),
strip.background.x = element_blank(),
strip.background.y = element_blank(),
strip.text = element_text(size = 10),
strip.text.y.left = element_text(size = 10, angle = 90),
strip.text.x.bottom = element_text(vjust = -.05, color = "black"),
legend.key.size = unit(0.75, "line"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
legend.key = element_blank(),
legend.position = "bottom")
# zooxSNP figure with clones
zooxSNP
# plotting
colPalZoox = c("#D0D3D4", "#ADDC91", "#6A9FA1", "EC86D0")
flPal = paletteer_d("rcartocolor::Sunset")[c(7, 6, 4, 3, 1)]
popAnno = data.frame(x1 = c(0.5, 0.5, 0.5, 0.5, 0.5), x2 = c(14.5, 18.5, 14.5, 23.5, 26.5),
y1 = -0.065, y2 = -0.065, pop = c("NorthECA", "MiddleECA", "SouthECA", "Sand", "Looe"))
popAnno$pop = factor(popAnno$pop)
popAnno$pop = factor(popAnno$pop, levels = levels(popAnno$pop)[c(3, 2, 5, 4, 1)])
dfZoox = zDat %>% left_join(popAnno, by = "pop")
zooxSNPA = ggplot(data = dfZoox, aes(x = barPlotOrder, y = Fraction, fill = Symbiont, order = barPlotOrder)) +
geom_bar(stat = "identity", position = "stack", colour = "grey25", width = 1, size = 0.2) +
xlab("Population") +
scale_x_discrete(expand = c(0.001, 0.001)) +
scale_y_continuous(expand = c(-.001, -0.001)) +
scale_color_manual(values = flPal) +
geom_segment(aes(x = x1, xend = x2, y = y1, yend = y2, color = pop), size = 7) +
scale_fill_manual(values = colPalZoox, name = "Symbiodiniaceae genus") +
coord_cartesian(ylim = c(-.01,1.01), clip = "off") +
facet_grid(~ pop, drop = TRUE, space = "free", scales = "free", switch = "both") +
guides(color = "none") +
theme_bw()
zooxSNP = zooxSNPA + theme(plot.title = element_text(),
panel.grid = element_blank(),
panel.background = element_rect(fill = "gray25", colour = "grey25"),
panel.border = element_rect(fill = NA, color = "black", size = 1, linetype = "solid"),
panel.spacing.x = grid:::unit(0.05, "lines"),
panel.spacing.y = grid:::unit(0.05, "lines"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title = element_blank(),
strip.background.x = element_blank(),
strip.background.y = element_blank(),
strip.text = element_text(size = 10),
strip.text.y.left = element_text(size = 10, angle = 90),
strip.text.x.bottom = element_text(vjust = -.05, color = "black"),
legend.key.size = unit(0.75, "line"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
legend.key = element_blank(),
legend.position = "bottom")
# zooxSNP figure with clones
zooxSNP
# plotting
colPalZoox = c("#D0D3D4", "#ADDC91", "#6A9FA1", "DB3EB1")
colPalZoox = c("#D0D3D4", "#ADDC91", "#6A9FA1", "#E45DBF")
flPal = paletteer_d("rcartocolor::Sunset")[c(7, 6, 4, 3, 1)]
popAnno = data.frame(x1 = c(0.5, 0.5, 0.5, 0.5, 0.5), x2 = c(14.5, 18.5, 14.5, 23.5, 26.5),
y1 = -0.065, y2 = -0.065, pop = c("NorthECA", "MiddleECA", "SouthECA", "Sand", "Looe"))
popAnno$pop = factor(popAnno$pop)
popAnno$pop = factor(popAnno$pop, levels = levels(popAnno$pop)[c(3, 2, 5, 4, 1)])
dfZoox = zDat %>% left_join(popAnno, by = "pop")
zooxSNPA = ggplot(data = dfZoox, aes(x = barPlotOrder, y = Fraction, fill = Symbiont, order = barPlotOrder)) +
geom_bar(stat = "identity", position = "stack", colour = "grey25", width = 1, size = 0.2) +
xlab("Population") +
scale_x_discrete(expand = c(0.001, 0.001)) +
scale_y_continuous(expand = c(-.001, -0.001)) +
scale_color_manual(values = flPal) +
geom_segment(aes(x = x1, xend = x2, y = y1, yend = y2, color = pop), size = 7) +
scale_fill_manual(values = colPalZoox, name = "Symbiodiniaceae genus") +
coord_cartesian(ylim = c(-.01,1.01), clip = "off") +
facet_grid(~ pop, drop = TRUE, space = "free", scales = "free", switch = "both") +
guides(color = "none") +
theme_bw()
zooxSNP = zooxSNPA + theme(plot.title = element_text(),
panel.grid = element_blank(),
panel.background = element_rect(fill = "gray25", colour = "grey25"),
panel.border = element_rect(fill = NA, color = "black", size = 1, linetype = "solid"),
panel.spacing.x = grid:::unit(0.05, "lines"),
panel.spacing.y = grid:::unit(0.05, "lines"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title = element_blank(),
strip.background.x = element_blank(),
strip.background.y = element_blank(),
strip.text = element_text(size = 10),
strip.text.y.left = element_text(size = 10, angle = 90),
strip.text.x.bottom = element_text(vjust = -.05, color = "black"),
legend.key.size = unit(0.75, "line"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
legend.key = element_blank(),
legend.position = "bottom")
# zooxSNP figure with clones
zooxSNP
colPalZoox = c("#D0D3D4", "#ADDC91", "#6A9FA1", "#F1A7DC")
flPal = paletteer_d("rcartocolor::Sunset")[c(7, 6, 4, 3, 1)]
popAnno = data.frame(x1 = c(0.5, 0.5, 0.5, 0.5, 0.5), x2 = c(14.5, 18.5, 14.5, 23.5, 26.5),
y1 = -0.065, y2 = -0.065, pop = c("NorthECA", "MiddleECA", "SouthECA", "Sand", "Looe"))
popAnno$pop = factor(popAnno$pop)
popAnno$pop = factor(popAnno$pop, levels = levels(popAnno$pop)[c(3, 2, 5, 4, 1)])
dfZoox = zDat %>% left_join(popAnno, by = "pop")
zooxSNPA = ggplot(data = dfZoox, aes(x = barPlotOrder, y = Fraction, fill = Symbiont, order = barPlotOrder)) +
geom_bar(stat = "identity", position = "stack", colour = "grey25", width = 1, size = 0.2) +
xlab("Population") +
scale_x_discrete(expand = c(0.001, 0.001)) +
scale_y_continuous(expand = c(-.001, -0.001)) +
scale_color_manual(values = flPal) +
geom_segment(aes(x = x1, xend = x2, y = y1, yend = y2, color = pop), size = 7) +
scale_fill_manual(values = colPalZoox, name = "Symbiodiniaceae genus") +
coord_cartesian(ylim = c(-.01,1.01), clip = "off") +
facet_grid(~ pop, drop = TRUE, space = "free", scales = "free", switch = "both") +
guides(color = "none") +
theme_bw()
zooxSNP = zooxSNPA + theme(plot.title = element_text(),
panel.grid = element_blank(),
panel.background = element_rect(fill = "gray25", colour = "grey25"),
panel.border = element_rect(fill = NA, color = "black", size = 1, linetype = "solid"),
panel.spacing.x = grid:::unit(0.05, "lines"),
panel.spacing.y = grid:::unit(0.05, "lines"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title = element_blank(),
strip.background.x = element_blank(),
strip.background.y = element_blank(),
strip.text = element_text(size = 10),
strip.text.y.left = element_text(size = 10, angle = 90),
strip.text.x.bottom = element_text(vjust = -.05, color = "black"),
legend.key.size = unit(0.75, "line"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
legend.key = element_blank(),
legend.position = "bottom")
# zooxSNP figure with clones
zooxSNP
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/allie/zooxs", plot = zooxSNP, width = 20, height = 8, units = "cm", dpi = 300)
ggsave("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/allie/zooxs.png", plot = zooxSNP, width = 20, height = 8, units = "cm", dpi = 300)
# read in sample metadata with clones, remove technical replicates
setwd(~C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD)
# read in sample metadata with clones, remove technical replicates
setwd("~C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD")
# read in sample metadata with clones, remove technical replicates
setwd("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD")
RRCDataClones = read.csv("/allie/rrcMetadataR_fix.csv") %>% select("sample" = sampleID, "pop" = Site)
RRCDataClones = read.csv("~allie/rrcMetadataR_fix.csv") %>% select("sample" = sampleID, "pop" = Site)
# read in sample metadata with clones, remove technical replicates
setwd("C:/Users/erin_/Documents/GitHub/SEFL_Pastreoides_2bRAD/allie")
RRCDataClones = read.csv("rrcMetadataR_fix.csv") %>% select("sample" = sampleID, "pop" = Site)
#read in zoox reads data with clones incl, technical replicates removed
zoox = read.delim("zooxReads", header = FALSE, check.names = FALSE)
